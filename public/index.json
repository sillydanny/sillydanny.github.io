[{"content":"Set Git Bash as the Default Shell for SSH on Windows 10 To make Git Bash the default shell for SSH connections on a Windows 10 machine, follow these steps:\nStep 1: Enable SSH Server on Windows 10 Open PowerShell as an Administrator.\nInstall OpenSSH Server:\n1 Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0 Enable and Start the SSH Server:\n1 2 Set-Service -Name sshd -StartupType \u0026#39;Automatic\u0026#39; Start-Service -Name sshd Step 2: Install Git via Chocolatey Install Chocolatey:\n1 Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://community.chocolatey.org/install.ps1\u0026#39;)) Install Git:\n1 choco install git -y Step 3: Set Git Bash as the Default Shell for SSH Run the following command to set Git Bash as the default shell for the SSH service:\nThis command updates the registry to make Git Bash the default shell for SSH connections.\n1 New-ItemProperty -Path \u0026#34;HKLM:\\SOFTWARE\\OpenSSH\u0026#34; -Name \u0026#34;DefaultShell\u0026#34; -Value \u0026#34;C:\\Program Files\\Git\\bin\\bash.exe\u0026#34; -PropertyType String -Force Step 4: Test SSH Login On another machine, open a terminal and try logging in via SSH:\nUpon successful login, you should be automatically switched to Git Bash.\n1 ssh \u0026lt;username\u0026gt;@\u0026lt;your-windows-machine\u0026gt; e.g. ssh user01@10.1.1.254\n","permalink":"https://www.kingtam.tk/posts/ssh-to-win/","summary":"Set Git Bash as the Default Shell for SSH on Windows 10","title":"Seamless SSH Access: Auto-Launch Git Bash on Windows 10 After Login"},{"content":"Introduction: I would like to install a traditional Chinese input method on Linux (LMDE), and Cangjie input method is the better option for me in HK.\nSteps To Follow: Click the LM logo and select Preferences\nDouble click the Input Method icon\nOn the left-hand side, select \u0026lsquo;Traditional Chinese\u0026rsquo; and click on \u0026lsquo;Install the language support packages.\u0026rsquo; Then choose \u0026lsquo;Fcitx\u0026rsquo; as the input method framework.\nOpen the Terminal and run the following commands:\n1 sudo apt update \u0026amp;\u0026amp; sudo apt install fcitx-table-cangjie* -y Now, the Cangjie* input method has been added in the Input Method Configuration.\nTest working well, Done.\nConclusion: Cangjie or Quick input method is a good traditional Chinese typing tool in Hong Kong, and it is my preferred choice.\n","permalink":"https://www.kingtam.tk/posts/input/","summary":"Install FCITX Input Method on LMDE","title":"Install FCITX Input Method on LMDE"},{"content":"Introduction: The incredible vim-commentary plug-in developed by tpope.\nAs someone who doesn\u0026rsquo;t use vim frequently, I often forget to take advantage of its features. This post serves as a handy memo to remind myself (and others) about the usefulness of this plug-in.\nThe Basic Concept of Modes in Vim: Before we delve into the practical usage of the vim-commentary plug-in, it\u0026rsquo;s essential to grasp the concept of modes in Vim. Vim operates in three primary modes that determine how we interact with the text:\nMode Description Normal Default; for navigation and delete or duplicate, etc. Insert For edit text Command Line For operations like saving, exiting, or work with plug-in, etc. Use the vim-commentary Plug-in: The different ways to utilize the vim-commentary plug-in in each mode.\nNormal Mode: gcc: In normal mode, entering \u0026ldquo;gcc\u0026rdquo; comments or uncomments a single line. Repeating the command will toggle the comment status.\ncomments\nuncomments\nThe vim-commentary plug-in also allows us to comment multiple lines at once.\nBy using the command \u0026ldquo;gc\u0026rdquo; followed by a digit number and the up or down arrow keys (j/k), we can effortlessly comment or uncomment as many lines as we want.\ne.g. gc+3+j\ncomments\nuncomments\ngc + j/k: Using \u0026ldquo;gc\u0026rdquo; followed by the up or down arrow keys (j or k) allows us to comment or uncomment two lines simultaneously, with the indicator adjusting accordingly.\ncomments\nuncomments\ngcap: Typing \u0026ldquo;gcap\u0026rdquo; in normal mode comments or uncomments an entire paragraph or block of text efficiently.\ncomments\nuncomments\nCommand Line Mode: :107,113Commentary: This command lets us comment or uncomment lines 107 to 113. Executing the command again will undo the action.\ncomments\nuncomments\n:g/alias /Commentary: By using this command, we can comment or uncomment lines that match a specific pattern, such as \u0026ldquo;alias \u0026quot; Repeating the command will revert the action.\ncomments\nuncomments\nVisual Mode: The other modes, Vim also offers a Visual Mode. In this mode, we can select lines and use the \u0026ldquo;gc\u0026rdquo; command to comment or uncomment them effortlessly.\ncomments\nuncomments\nFile Type Supported These filetypes include TOML, plain text, C, C++, C#, Java, Kotlin, YAML, and Apache configuration files.\nInsert the command in the .vimrc file\n1 2 3 cat \u0026gt;\u0026gt; ~/.vimrc \u0026lt;\u0026lt; EOF autocmd FileType toml,txt,c,cpp,cs,java,kotlin,yaml,apache setlocal commentstring=#\\ %s EOF Conclusion: The vim-commentary plug-in significantly enhances text editing efficiency.\nBy familiarizing ourselves with its capabilities, we gain the ability to seamlessly comment on or uncomment lines, paragraphs, and even specific patterns of text.\nReference: https://github.com/tpope/vim-commentary Related: Linux 的命令基本用法 - vim 編輯器\nInstall VIM-PLUG on Synology DSM\nNeoVim and Vim plugins Install in Alpine Linux\n","permalink":"https://www.kingtam.tk/posts/vim-commentary/","summary":"The incredible vim-commentary plug-in developed by [tpope]","title":"Unleashing the Power of vim-commentary Plug-in"},{"content":"Introduction SSH offers two methods of authentication: password and key pair authentication.\nPassword Authentication: While simple passwords are easily remembered, they are also easily compromised through brute force attacks. On the other hand, complex passwords, though safer, are challenging to remember.\nKey Pair Authentication: This method involves a combination of a public key and a private key. The public key is placed on the device that one wishes to access, while the private key is stored on the user\u0026rsquo;s local machine. Only the holder of the private key can access the device, making this method secure and convenient.\nGenerating a Key Pair with ssh-keygen The ssh-keygen command can be used to generate a key pair. Here is how to use it:\n1 ssh-keygen For a stronger key pair, use:\n1 ssh-keygen -t rsa -b 4096 -C $comment Note: When prompted, hit Enter for each prompt.\nUploading the Public Key to the Remote Host There are two ways to upload the public key: manually and automatically.\nAutomatic Upload To automatically upload the public key, run:\n1 ssh-copy-id user@remoteHost Or specify the public key and port:\n1 ssh-copy-id -i ~/.ssh/id_rsa.pub user@remoteHost Manual Upload To manually upload the public key, copy the public key content:\n1 ssh user@remoteHost \u0026#39;mkdir -p .ssh \u0026amp;\u0026amp; cat \u0026gt;\u0026gt; .ssh/authorized_keys\u0026#39; \u0026lt; ~/.ssh/id_rsa.pub Next, set the correct permissions on the remote host:\n1 2 chmod 700 ~/.ssh chmod 600 ~/.ssh/authorized_keys After creating the authorized_keys file and pasting the public key contents into it, we can log in without a password:\n1 ssh user@remoteHost Managing Sessions via SSH Profiles SSH profiles are an elegant and efficient way to manage multiple remote logins. You can create several remote hosts on the SSH profiles as shown:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 cat \u0026gt;\u0026gt; ~/.ssh/config \u0026lt;\u0026lt; EOF Host HOST01 HostName 123.123.123.33 Port 22 User user01 IdentityFile \u0026#34;~/.ssh/id_rsa\u0026#34; IdentitiesOnly yes Host HOST02 HostName 10.110.254.99 Port 2222 User user02 IdentityFile \u0026#34;~/.ssh/id_ecdsa\u0026#34; IdentitiesOnly yes EOF Ensure that you set the correct permissions on the SSH profiles:\n1 chmod 600 ~/.ssh/config After setting up the SSH profiles, you can log in by simply entering the alias name:\n1 ssh HOST01 Disabling Password Login For security reasons, it is recommended to disable password login:\n1 2 sudo sed -i \u0026#34;s@.*\\(PasswordAuthentication \\).*@\\1no@\u0026#34; /etc/ssh/sshd_config sudo service sshd restart One-Key Configuration on SSH Setting up a new remote host key login requires several steps such as key pair generation, permissions setting, public key upload, and password disabling.\nHowever, we can upload all the public keys to Github SSH keys, and then deploy the public key with one command on the new remote host:\n1 curl -fsSL https://github.com/$githubUser.keys \u0026gt;\u0026gt; ~/.ssh/authorized_keys Also, disable the password and restart the SSH daemon:\n1 2 sudo sed -i \u0026#34;s@.*\\(PasswordAuthentication \\).*@\\1no@\u0026#34; /etc/ssh/sshd_config sudo service sshd restart Additionally, we can simplify the process using P3TERX\u0026rsquo;s SSH Key Installer:\n1 bash \u0026lt;(curl -fsSL git.io/key.sh) -g $githubUser -d Option Description -o Enables overwrite mode. Must be written at the top to take effect. -g Retrieves the public key from GitHub. The parameter is the GitHub username. -u Retrieves the public key from a URL. The parameter is the URL. -f Obtains the public key from a local file. The parameter is the path of the local file. -p Modifies the SSH port. The parameter is the port number. -d Disables password login. Deploying the Public Key Here are some ways of getting the public key:\ni. Get the public key from Github:\n1 bash \u0026lt;(curl -fsSL git.io/key.sh) -g $githubUser ii. Get the public key from a URL:\n1 bash \u0026lt;(curl -fsSL git.io/key.sh) -u https://keyaddress.com/id_rsa.pub iii. Overwrite mode will completely replace the previous key on /.ssh/authorized_keys:\n1 bash \u0026lt;(curl -fsSL git.io/key.sh) -o -g $githubUser iv. Disable password login:\n1 bash \u0026lt;(bash \u0026lt;(curl -fsSL git.io/key.sh) -d v. Modify the SSH port:\n1 bash \u0026lt;(curl -fsSL git.io/key.sh) -p 2222 Conclusion Whether manually or automatically, managing SSH keys involves creating a secure key pair, uploading the public key to the intended device, and managing sessions using SSH profiles. For increased security, it is advisable to disable password logins. Various tools such as P3TERX\u0026rsquo;s SSH Key Installer can simplify these processes.\nReference 使用 ssh-keygen 和 ssh-copy-id 組態 SSH 金鑰實現免密登陸 SSH 金鑰一鍵組態指令碼 使用教學 Related: SSH Tunneling ","permalink":"https://www.kingtam.tk/posts/ssh-key/","summary":"Secure Linux Login Connection","title":"Secure Linux Login Connection"},{"content":"About ttyd is a tool that allows users to access their Linux terminal through a web browser. This functionality enables convenient and remote management of Linux systems regardless of the user\u0026rsquo;s location.\nInstall TTYD We can download the latest version of ttyd from its official GitHub page:\nDownload Page ↗\nTo download and install ttyd, execute the following command in your terminal:\n1 2 sudo wget https://github.com/tsl0922/ttyd/releases/download/1.7.3/ttyd.aarch64 -O \\ /usr/local/bin/ttyd \u0026amp;\u0026amp; sudo chmod +x /usr/local/bin/ttyd To ensure that ttyd starts automatically upon system boot, we\u0026rsquo;ll create a new systemd service:\n1 2 3 4 5 6 7 8 9 10 11 12 sudo bash -c \u0026#39;cat \u0026gt; /etc/systemd/system/ttyd.service \u0026lt;\u0026lt; EOF [Unit] Description=ttyd server [Service] Type=simple ExecStart=/usr/local/bin/ttyd -p 7681 login Restart=always [Install] WantedBy=multi-user.target EOF\u0026#39; Next, set the correct permissions for the service file:\n1 sudo chmod 644 /etc/systemd/system/ttyd.service Reload the systemd configuration to recognize our new service:\n1 sudo systemctl daemon-reload Now, start your ttyd service and enable it to run at startup:\n1 2 sudo systemctl start ttyd sudo systemctl enable ttyd Once the service is running, you can access the terminal via your web browser at http://\u0026lt;Your-IP-Address\u0026gt;:7681.\nEnjoy the convenience of having your Linux terminal available in your web browser with ttyd!\nRelated: -Official GitHub Page\n","permalink":"https://www.kingtam.tk/posts/ttyd/","summary":"ttyd: Access Your Linux Terminal via Web Browser","title":"ttyd: Access Your Linux Terminal via Web Browser"},{"content":"Secure File Transfer Protocol (SFTP) SFTP, or Secure File Transfer Protocol, is a network protocol that provides file access, file transfer, and file management functionalities over any reliable data stream. It is typically used with the SSH protocol to provide secure file transfer, but it can be used with other protocols as well.\nUse SFTP:\n1 sftp username@remote-host This command will initiate an SFTP session with the remote-host. It will be prompted to enter the password for the username connecting with.\nOnce in the SFTP session, we can use ls to list files, cd to change directories, get to download files, and put to upload files. Here are syntax for reference:\nServer Actions Command Syntax Change directory cd /etc/test or cd PATH List files ls dir Create directory mkdir directory Delete directory rmdir directory Show current directory pwd Change group chgrp groupname PATH Change owner chown username PATH Change permissions chmod 644 PATH (where 644 is an example of permissions) Create link ln oldname newname Delete file or directory rm PATH Rename file or directory rename oldname newname Exit server exit, bye, or quit Client Actions Command Syntax Change local directory lcd PATH List local files lls Create local directory lmkdir directory Show current local directory lpwd Upload file to server put [local directory or file] [remote] Download file from server get [remote host directory or file] [local machine] Wildcards supported Use * or *.rpm in file names for uploading/downloading multiple files Secure Copy Protocol (SCP) Secure Copy Protocol (SCP) is a means of securely transferring computer files between a local and a remote host or between two remote hosts. It uses SSH for data transfer and provides the same authentication and security as SSH.\ni. (push file) The example of using SCP to transfer files:\n1 scp \u0026#34;/path/to/localFile\u0026#34; username@remote-host:/path/to/remoteDirectory This command will copy the file localFile from local machine to the remoteDirectory on the remote-host.\nii. (push directory) The example of using SCP to transfer directory, the -r (recursive) option is require:\n1 scp -r /path/to/localDirectory username@remote-host:/path/to/remoteDirectory iii. (pull file) To copy a file from the remote host to local machine:\n1 scp username@remote-host:/path/to/remoteFile /path/to/localDirectory Option Description -p Preserves the original file\u0026rsquo;s permissions and metadata. -r Recursively copies directories and their contents. -l speed Limits the transfer speed to the specified rate in Kbps. For example, -l 800 limits the speed to 100 KB/s. Transfer files via TAR on SSH TAR over SSH provides end-to-end encryption, which means that the contents of the transferred files are protected from unauthorized access. It also allows you to transfer multiple files or directories in a single archive, which can be more efficient than transferring them individually.\n1 tar czf - /path/to/directory | ssh user@remotehost \u0026#34;tar xzf - -C /remote/path\u0026#34; This command will create a compressed tarball of the directory located at /path/to/directory, and then pipe the output to the ssh command, which will connect to the remote host as user and extract the contents of the tarball to the directory located at /remote/path.\nActions Command Syntax Create compressed tarball of a directory tar czf - /path/to/directory Pipe output to SSH command ` Connect to remote host ssh user@remotehost Extract tarball to specify directory tar xzf - -C /remote/path c: Create new archive tar c z: Compress with gzip tar z f: Write archive to file tar f -: Output to stdout instead of file tar - x: Extract files from archive tar x Conclusion These are the fundamentals of using sftp, scp, and tar on Linux. They are robust tools that, once mastered, can greatly aid in managing and transferring files between systems.\nReference ssh 用戶端連線程式 - Linux 用戶 Related RSYNC USAGE Synchronization Solution on Windows (RSYNC) ","permalink":"https://www.kingtam.tk/posts/sftp-scp/","summary":"Securely Transfer Files Over The Network","title":"Securely Transfer Files Over The Network"},{"content":"About SSH tunneling is a method of transporting arbitrary networking data over an encrypted SSH connection. It can be used for secure communications or to bypass firewalls.\nMode of Port Forwarding Local Port Forwarding Remote Port Forwarding Dynamic Port Forwarding SSH Useful Arguments Option Description -N This option tells SSH not to execute a remote command after establishing the connection. Instead, it just sets up the connection and then waits for further instructions. This can be useful for setting up port forwarding or other types of connections where no remote command needs to be executed. -f This option runs the SSH client in the background after authentication. This allows the user to continue using the terminal while the SSH session is running in the background. This can be useful for long-running sessions or when multiple sessions need to be established simultaneously. Sample Scenarios Note: All diagrams from Ivan Velichko\nLocal Port Forwarding: This is the most common type of SSH tunneling, forwarding a local port to a remote one.\n1 ssh -L local_port:remote_host:remote_port user@ssh_server Example01: 1 ssh -N -L 8443:10.2.2.254:8006 user@10.2.2.2 Option Description -L Local port forwarding configuration 8443:10.2.2.254:8006 Forward connections to port 8443 on the local machine to port 8006 on the remote machine 10.2.2.254 user@10.2.2.2 Username and hostname of the remote server Note: 0.0.0.0:8443:10.2.2.254:8006, which 0.0.0.0 means listening on all available network interfaces.\nThe service running on port 8443 can be accessed from the server area server by localhost.\nExample02: 1 ssh -N -L 5201:localhost:5201 user@ssh_server A port `5201\u0026rsquo; test was successfully conducted on localhost after binding the port.\nRemote Port Forwarding: This allows you to forward a remote port to a local one.\nFor security reasons, Remote Port Forwarding is only bound to the localhost of the SSH Server by default. To enable external connections, the configuration file of the SSH Server needs to be amended\n1 sudo sh -c \u0026#39;echo \u0026#34;GatewayPorts yes\u0026#34; \u0026gt;\u0026gt; /etc/ssh/sshd_config.d/GatewayPorts.conf\u0026#39; 1 sudo service sshd restart Restart the SSH daemon for the modifications to take effect.\n1 ssh -N -R remote_port:local_host:local_port user@ssh_server Example01: 1 ssh -N -R 8080:localhost:8000 user@10.2.2.2 Option Description -R Remote port forwarding configuration 8080:localhost:8000 Forward connections to port 8080 on the remote server to port 8000 on the local machine, binding to localhost user@10.2.2.2 Hostname or IP address of the remote server A simple HTTP server has been set up on localhost with port 8000.\nThe remote client (10.2.2.x) can access the HTTP server running on port 8080.\nExample02: 1 ssh -N -R 8443:10.10.10.254:443 user@ssh_server Option Description -R Remote port forwarding configuration 8443:10.10.10.254:443 Forward connections to port 8443 on the remote server to port 443 on the machine with IP address 10.10.10.254 user@ssh_server Username and hostname of the SSH server The SSH server is forwarding traffic from port 443 on the local area PC with IP address 10.10.10.254 to port 8443 on the SSH server.\nThe service on port 8443 can be accessed from the server area PC.\nDynamic Port Forwarding: This can be used to create a SOCKS proxy which can be used with applications configured to use SOCKS.\n1 ssh -D local_port user@ssh_server Example01: 1 ssh -N -D 8244 user@ssh_server Option Description -D Local SOCKS proxy port configuration 8244 Local SOCKS proxy port to use user@ssh_server Username and hostname of the SSH server i. The method of routing browser traffic through a SOCKS5 proxy using a plug-in(SwitchyOmega).\nii. The method of Linux terminal traffic through socks5 proxy\n1 2 export http_proxy=socks5://127.0.0.1:8244 export https_proxy=socks5://127.0.0.1:8244 This tells applications that use the HTTP(s) protocol to use the specified SOCKS5 proxy server for their connections.\n1 export ALL_PROXY=socks5://127.0.0.1:8244 This tells all applications to use the specified SOCKS5 proxy server for their connections, regardless of the protocol.\nConclusion SSH tunneling provides a powerful and flexible way to securely transfer data over an unsecured network. By using SSH tunneling, we can access remote resources securely and efficiently, without having to worry about eavesdropping or other security threats.\nReference -A Visual Guide to SSH Tunnels: Local and Remote Port Forwarding\n-SSH Tunnel 通道打造加密 Proxy，透過外部 Linux 伺服器上網\n-SSH Tunneling (Port Forwarding) 詳解\n","permalink":"https://www.kingtam.tk/posts/ssh-tunneling/","summary":"SSH Tunneling","title":"SSH Tunneling"},{"content":"About In this scenario, the device has an aarch64 chipset and is running Armbian, which is based on Debian. It provides a step-by-step guide for upgrading from Debian 10 (Buster) to Debian 11 (Bullseye), and then to Debian 12 (Bookworm).\nUpgrade from Buster to Bullseye Backup data. This should always be the first step before making major system changes. You can use tools like rsync or tar to backup the data.\nVerify Current Debian Version\n1 lsb_release -a Update the current system. Ensure the current system is fully up-to-date by running: 1 2 sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y sudo apt full-upgrade Change the repositories. Create a backup of current sources.list file by renaming it to sources.lists.bak\n1 sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak Create a new one with the following contents:\n1 2 3 4 5 6 sudo cat \u0026gt;\u0026gt; /etc/apt/sources.list \u0026lt;\u0026lt; EOF deb [arch=arm64,armhf] http://deb.debian.org/debian bullseye main contrib non-free deb [arch=arm64,armhf] http://deb.debian.org/debian bullseye-updates main contrib non-free deb [arch=arm64,armhf] http://deb.debian.org/debian bullseye-backports main contrib non-free deb [arch=arm64,armhf] http://security.debian.org/ bullseye-security/updates main contrib non-free EOF Edit /etc/apt/sources.list.d/* files to point to Bullseye instead of Buster.\n1 sudo sed -i \u0026#39;s/buster/bullseye/g\u0026#39; /etc/apt/sources.list.d/*.list Update the package list. Run the following command to update the package list: 1 sudo apt update Hit:1 http://deb.debian.org/debian bullseye InRelease Hit:2 http://deb.debian.org/debian bullseye-updates InRelease Hit:3 http://deb.debian.org/debian bullseye-backports InRelease Hit:4 http://security.debian.org bullseye-security/updates InRelease Get:5 http://mirrors.sustech.edu.cn/armbian bullseye InRelease [53.3 kB] Fetched 53.3 kB in 2s (24.6 kB/s) Reading package lists\u0026hellip; Done Building dependency tree Reading state information\u0026hellip; Done 397 packages can be upgraded. Run \u0026lsquo;apt list \u0026ndash;upgradable\u0026rsquo; to see them.\nPerform a minimal system upgrade: Upgrade all existing packages without installing or removing any additional packages with this command: 1 sudo apt upgrade --without-new-pkgs After this operation, several questions will be asked to confirm. Keep pressing the Enter key to continue. Below are some examples:\nThe default action is to keep your current version. *** issue.net (Y/I/N/O/D/Z) [default=N] ?\nUpgrade the packages. Now you can upgrade all system\u0026rsquo;s packages to Bullseye versions with: 1 sudo apt full-upgrade -y Restart the system. After the upgrade is complete, you should restart the system to ensure all changes are properly applied. 1 sudo reboot Check the Debian version. Once the system reboots, check the Debian version to confirm the upgrade: 1 lsb_release -a Congratulations on successfully upgrading to Debian 11 (Bullseye)!\nClean unused packages: Ensure a clean system by removing any packages that are no longer required. 1 2 sudo apt --purge autoremove -y sudo find /etc -name \u0026#39;.dpkg-\u0026#39; -o -name \u0026#39;.ucf-\u0026#39; -o -name \u0026#39;*.merge-error\u0026#39; Upgrade from Bullseye to Bookworm Follow the same steps as above\nUpdate current system. Ensure current system is fully up-to-date by running: 1 2 sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y sudo apt full-upgrade -y Change the repositories. Replace \u0026lsquo;bullseye\u0026rsquo; with \u0026lsquo;bookworm\u0026rsquo; in /etc/apt/sources.list and /etc/apt/sources.list.d/* files via sed.\n1 2 sudo sed -i \u0026#39;s/bullseye/bookworm/g\u0026#39; /etc/apt/sources.list sudo sed -i \u0026#39;s/bullseye/bookworm/g\u0026#39; /etc/apt/sources.list.d/armbian.list Additionally, add the \u0026ldquo;non-free-firmware\u0026rdquo; repository for hardware driver support.\n1 2 sudo sed -i \u0026#39;s/non-free/non-free non-free-firmware/g\u0026#39; /etc/apt/sources.list sudo sed -i \u0026#39;s/non-free/non-free non-free-firmware/g\u0026#39; /etc/apt/sources.list.d/* Update the package list. Run the following command to update the package list: 1 sudo apt update Perform a minimal system upgrade: Upgrade all existing packages without installing or removing any additional packages with this command: 1 sudo apt upgrade --without-new-pkgs After this operation, several questions will be asked to confirm. Keep pressing the Enter key to continue. Below are some examples:\nThe default action is to keep your current version. *** issue.net (Y/I/N/O/D/Z) [default=N] ?\nUpgrade the packages. Now you can upgrade all system\u0026rsquo;s packages to Bookworm versions with: 1 sudo apt full-upgrade -y Restart the system. After the upgrade is complete, you should restart the system to ensure all changes are properly applied. 1 sudo reboot Check the Debian version. Once the system reboots, check the Debian version to confirm the upgrade: 1 lsb_release -a Congratulations on successfully to Debian 12 (bookworm)!\nClean unused packages: Ensure a clean system by removing any packages that are no longer required. 1 2 sudo apt --purge autoremove -y sudo find /etc -name \u0026#39;.dpkg-\u0026#39; -o -name \u0026#39;.ucf-\u0026#39; -o -name \u0026#39;*.merge-error\u0026#39; Resolving the Warning of Key Stored Issue on apt update Issue: When running apt update, a warning message may appear indicating that a key stored in /etc/apt/trusted.gpg is no longer valid.\nSolution: To resolve the issue, follow these steps:\nList the available keys with the following command: 1 sudo apt-key list Take note of the last 8 digits of the public key that corresponds to the repository being updated.\nExport the public key to a new file using the following command: 1 sudo apt-key export \u0026lt;last-8-digits-of-public-key\u0026gt; | gpg --dearmour -o /etc/apt/trusted.gpg.d/armbian.gpg This will create a new trusted key file named armbian.gpg in the /etc/apt/trusted.gpg.d/ directory.\nUpdate the package lists to confirm that the key issue has been resolved: 1 sudo apt update Conclusion Upgrading from Debian 10 (Buster) to Debian 12 (Bookworm) provides a range of benefits such as new features and improvements, regular security updates, long-term support, and compatibility with newer software and hardware.\nReference Upgrade from Debian 10 (Buster) To Debian 11 (Bullseye)\nHow To Upgrade To Debian 12 Bookworm From Debian 11 Bullseye\n","permalink":"https://www.kingtam.tk/posts/buster2bookworm/","summary":"Upgrade Debian from Buster to Bookworm","title":"Upgrade Debian from Buster to Bookworm"},{"content":"About The FOXBI\u0026rsquo;s ch_cpuinfo is shell script , which retrieve information about the CPU on a Synology DSM system. The script obtains a summary of the CPU information, including the processor type, number of cores, clock speed, code-name e.g. Haswell , Broadwell , Skylake , Kaby Lake etc.\nHow to Use Connect to DSM terminal via SSH with privileged permission. 1 sudo -i Download the ch_cpuinfo tar file from GitHub 1 wget https://github.com/FOXBI/ch_cpuinfo/releases/download/ch_cpuinfo/ch_cpuinfo.tar Decompress the tar file and grant execute permission. 1 tar -xvf ch_cpuinfo.tar \u0026amp;\u0026amp; chmod -x ch_cpuinfo Execute the Script 1 ./ch_cpuinfo The script retrieves information; choose the options as needed.\nRe-login DSM to refresh the Info Center. Before:\nAfter:\nConclusion This script can be useful for those who need to update CPU information on a Syonlogy DSM installed on a non-official machine with a different CPU type.\nRelated: FOXBI\u0026rsquo;s ch_cpuinfo Automating DSM VM Creation on Proxmox VE with a Bash Script ","permalink":"https://www.kingtam.tk/posts/ch-cpuinfo/","summary":"Update CPU information on non-official Synology DSM system with ease","title":"Update CPU information on non-official Synology DSM system with ease"},{"content":"About Recently, I wanted to automate the creation of a Synology DSM VM on my Proxmox VE server. This saves time compared to manually going through the steps in the Proxmox GUI.\nNote: This is for homelab test only. Do not use it for production.\nDeploy VM on PVE (Walkthrough) Make the script asks for a VMID to use for the new VM. It checks if a VM with that ID already exists, and offers to delete it if needed. 1 2 3 4 5 6 read -p \u0026#34;Enter Virtual Machine ID for Synology DSM install: \u0026#34; VMID if qm status $VMID \u0026amp;\u0026gt; /dev/null then # Offer to delete existing VM fi Install unzip if it is not already present, as we\u0026rsquo;ll need it to extract the VM image later: 1 2 3 if ! command -v unzip \u0026amp;\u0026gt; /dev/null; then apt install unzip -y fi Grabs the latest DSM loader image release from the GitHub API: 1 version=$(curl -s https://api.github.com/repos/fbelavenuto/arpl/releases/latest | grep -oP \u0026#39;\u0026#34;tag_name\u0026#34;: \u0026#34;\\K(.*)(?=\u0026#34;)\u0026#39;) Specify the newversion for URL\n1 newversion=${version:1} It constructs a download URL using that newversion, downloads and unzips the image: Set up Image Directory Path\n1 image_folder=\u0026#34;/var/lib/vz/template/iso/\u0026#34; Gather the loader image and unzips to the specify folder:\n1 2 3 4 5 url=\u0026#34;https://github.com/fbelavenuto/arpl/releases/download/$version/arpl-$newversion.img.zip\u0026#34; wget $url unzip \u0026#34;arpl-$newversion.img.zip\u0026#34; -d $image_folder rm \u0026#34;arpl-$newversion.img.zip\u0026#34; create the VM with qm create, using the VMID provided earlier: 1 2 3 4 5 6 7 8 qm create \u0026#34;$VMID\u0026#34; \\ --name DSM \\ --memory 4096 \\ --sockets 1 \\ --cores 2 \\ --cpu host \\ --net0 virtio,bridge=vmbr0 \\ --ostype l26 Command Description qm create \u0026ldquo;$VMID\u0026rdquo; This uses the qm (qemu manager) command to create a VM with the ID stored in the $VMID variable. \u0026ndash;name DSM Names the VM \u0026ldquo;DSM\u0026rdquo;. \u0026ndash;memory 4096 Allocates 4GB of RAM to the VM. \u0026ndash;sockets 1 \u0026ndash;cores 2 Assigns 1 socket and 2 cores to the VM. \u0026ndash;cpu host Uses the host CPU type for the VM. \u0026ndash;net0 virtio,bridge=vmbr0 Attaches a VirtIO network interface to the vmbr0 bridge. \u0026ndash;ostype l26 Specifies the OS type as newer Linux kernel. imports the image (loader) downloaded previously as the boot disk: 1 2 3 4 image=\u0026#34;/var/lib/vz/template/iso/arpl.img qm importdisk \u0026#34;$VMID\u0026#34; \u0026#34;$image\u0026#34; local-lvm qm set \u0026#34;$VMID\u0026#34; -sata0 local-lvm:vm-$VMID-disk-0 qm set \u0026#34;$VMID\u0026#34; --boot c --bootdisk sata0 Command Description qm importdisk \u0026ldquo;$VMID\u0026rdquo; \u0026ldquo;$image\u0026rdquo; local-lvm Imports a disk image file specified by $image to the local-lvm storage, assigning the ID stored in $VMID to the VM. qm set \u0026ldquo;$VMID\u0026rdquo; -sata0 local-lvm:vm-$VMID-disk-0 Sets the local-lvm storage as the source for the SATA controller at port 0, assigning the disk ID to vm-$VMID-disk-0. qm set \u0026ldquo;$VMID\u0026rdquo; \u0026ndash;boot c \u0026ndash;bootdisk sata0 Sets the boot order for the VM to boot from the disk attached to the SATA controller at port 0 (sata0) and sets the boot device to the first partition of that disk (c). also attaches a blank volume for extra storage: 1 qm set \u0026#34;$VMID\u0026#34; --sata1 volume02:32 Command Description qm set \u0026ldquo;$VMID\u0026rdquo; \u0026ndash;sata1 volume02:32 Sets the volume02 storage as the source for the SATA controller at port 1, assigning the disk size to 32GB. Finally, the VM is started: 1 qm start \u0026#34;$VMID\u0026#34; The full content of the script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 #!/bin/bash # # Script name: pve-dsm.sh # Author: King Tam # Website: https://kingtam.eu.org # Date: July 7, 2023 # Purpose: Automatic creation of DSM VM on Proxmox VE. # set -e # Ask for VMID read -p \u0026#34;Enter Virtual Machine ID for Synology DSM install: \u0026#34; VMID # Check if VMID already exists if qm status $VMID \u0026amp;\u0026gt; /dev/null then read -p \u0026#34;VM $VMID already exists. Do you want to remove it? (y/n) \u0026#34; choice case \u0026#34;$choice\u0026#34; in y|Y ) qm stop $VMID qm destroy $VMID echo \u0026#34;VM $VMID has been removed.\u0026#34; ;; * ) echo \u0026#34;Please enter a different VMID.\u0026#34; exit 1 ;; esac fi # Check if unzip is installed, install if not if ! command -v unzip \u0026amp;\u0026gt; /dev/null; then echo \u0026#34;unzip could not be found, installing...\u0026#34; apt install unzip -y fi # Get latest release version from GitHub API version=$(curl -s https://api.github.com/repos/fbelavenuto/arpl/releases/latest | grep -oP \u0026#39;\u0026#34;tag_name\u0026#34;: \u0026#34;\\K(.*)(?=\u0026#34;)\u0026#39;) newversion=${version:1} # Construct download URL using latest release version url=\u0026#34;https://github.com/fbelavenuto/arpl/releases/download/$version/arpl-$newversion.img.zip\u0026#34; # Download and extract arpl image wget $url image_folder=\u0026#34;/var/lib/vz/template/iso/\u0026#34; unzip \u0026#34;arpl-$newversion.img.zip\u0026#34; -d $image_folder rm \u0026#34;arpl-$newversion.img.zip\u0026#34; # Create virtual machine qm create \u0026#34;$VMID\u0026#34; --name DSM --memory 4096 --sockets 1 --cores 2 --cpu host --net0 virtio,bridge=vmbr0 --ostype l26 # Import arpl image as boot disk image=\u0026#34;/var/lib/vz/template/iso/arpl.img\u0026#34; qm importdisk \u0026#34;$VMID\u0026#34; \u0026#34;$image\u0026#34; local-lvm qm set \u0026#34;$VMID\u0026#34; -sata0 local-lvm:vm-$VMID-disk-0 qm set \u0026#34;$VMID\u0026#34; --boot c --bootdisk sata0 # Add a new SATA disk to the virtual machine qm set \u0026#34;$VMID\u0026#34; --sata1 volume02:32 # Start the virtual machine qm start \u0026#34;$VMID\u0026#34; Configuring the Loader The loader (Automated Redpill Loader) automatically detects which device is being used, SATADoM or USB, detecting its VID and PID correctly.\nOpen VM Console by PVE\nWe can access the loader via a browser.\nIn this case that the URL is http://10.1.1.73:7681\nNow the loader has been built, and the details are as follows\nOption Value Model DS918+ Build Number 42218 IP 10.1.1.73 Install DSM Install using a web browser.\nOpen a web browser on a computer and go to http://10.1.1.73:5000\nAccording to previous built information, then manual down the DSM OS via Download Center\nConclusion That\u0026rsquo;s it! The script now automatically creates a DSM VM on Proxmox VE, configured and ready to go. Finally, I greatly appreciate and thank fbelavenuto\u0026rsquo;s loader and Jun\u0026rsquo;s code.\nRelated Automated Redpill Loader ","permalink":"https://www.kingtam.tk/posts/pve-dsm/","summary":"Automating DSM VM Creation on Proxmox VE with a Bash Script","title":"Automating DSM VM Creation on Proxmox VE with a Bash Script"},{"content":"About Shut down all hosts in a Nutanix cluster that is running VMware ESXi for maintenance. Note: The procedure is designed to be executed only in the absence of Metro, Async/NearSync, and Nutanix Files services.\nPower Off 1. Run NCC Health Check via Nutanix Web Console Note: Upgrade to the latest version of NCC before proceeding with the following steps.\ni. Upgrade NCC to latest version\nii. Run NCC Health Check\nCheck that everything is working well, then could proceed to the next step.\n2. Shut down All VMs in the vCenter NOTE : Do not shut down the Nutanix Controller VMs (CVM).\ni. The DRS setting must be set to \u0026lsquo;Manual\u0026rsquo; before shutting down all VMs.\nii. Start the process of shutting down all virtual machines using vCenter.\n3. Shut down the vCenter (VM) Note: Remember the host on which the vCenter is currently running.\n* Host will be assigned automatically based on the cluster, and their names should fall within the range of vms01-08.\nMethod 1: Login - vCenter Server Management to shut down (via Browser)\nMethod 2: To shut down via Remote Console\n4. Stop the Nutanix Cluster and Shut down CVM i. Stop the Nutanix cluster\nLog in to one of CVM using SSH and execute the following command to stop the Nutanix cluster:\n1 cluster stop Wait until output similar to the following is displayed for every Controller VM in the cluster before proceeding:\nii. Shut down CVM:\nLog in to each CVM using SSH and execute the following command to shut down:\n1 sudo shutdown -P now 5. Shut down each Node (Host) Method01: via GUI\nLog in to each node (ESXi) using a browser to follow the indicators.\ni. Put host in maintenance mode:\nii. Shut down the host:\nMethod02: via Command line\nLog in to each Node (ESXi) using SSH and execute the following command\ni. Put host in maintenance mode:\n1 esxcli system maintenanceMode set --enable true ii. Shut down the host:\n1 poweroff Power On 6. Powering on the Nodes and Cluster After the shutdown\ni. Power On all Nodes via IPMI. (Or turn it on by pressing the physical power button on the front)\nii. Log in to each node (ESXi) using a browser and select Exit Maintenance Mode.\n​\tOr, log in to each Node using SSH and execute the following command\n1 esxcli system maintenanceMode set --enable false iii. Log in the node that previous was recorded (e.g.vms01) , then Right-click the vCenter and select Power \u0026gt; Power on.\n​\tOr, log in to the Node (vms01) using SSH and execute the following command\n1 vim-cmd vmsvc/power.on \u0026#34;$(vim-cmd vmsvc/getallvms | grep -ia \u0026#34;vCenter\u0026#34; | cut -d \u0026#39; \u0026#39; -f 1)\u0026#34; Wait for approximately 5 minutes for all services to start on the VM.\niv. Right-click each CVM and select Power \u0026gt; Power on via vCenter\n​\tOr, log in to Each Node (ESXi) using SSH and execute the following command\n1 vim-cmd vmsvc/power.on \u0026#34;$(vim-cmd vmsvc/getallvms | grep -ia \u0026#34;NTNX-*-CVM\u0026#34; | cut -d \u0026#39; \u0026#39; -f 1)\u0026#34; 7. Start Nutanix Cluster i. Log on to any of the CVMs in the cluster via SSH with the nutanix user credentials.\nii. Start the Nutanix cluster by issuing the following command:\n1 cluster start When the cluster starts, output similar to the following is displayed for each Controller VM in the cluster:\niii. Confirm that all cluster services are running on the Controller VMs.\n1 cluster status 2023-07-11 03:38:45,982Z INFO MainThread cluster:3088 Success! (*The last in line.)\niv. Confirm that all Nutanix datastores are available:\nRight-click the ESXi host in the vSphere client and select Rescan for Datastores.\n8. Start All VMs i. Power On all virtual machines using vCenter.\nii. The DRS setting must be set to \u0026lsquo;Fully Automated\u0026rsquo; after Power On all VMs.\nReference ESXi - Shutting down the cluster​ - Maintenance or Re-location Shutting down Nutanix cluster running VMware vSphere for maintenance or relocation Shutting Down an ESXi Node in a Nutanix Cluster Shutting Down a Node in a Cluster (vSphere Command Line) Failing Over a Protection Domain (Planned Failover) ","permalink":"https://www.kingtam.tk/posts/esxi-aos-cluster-shutdown/","summary":"How To Safely Shut Down Your ESXi and Nutanix (AOS) Cluster","title":"How To Safely Shut Down Your ESXi and Nutanix (AOS) Cluster"},{"content":" aria2 is a lightweight multi-protocol \u0026amp; multi-source command-line download utility. It supports HTTP/HTTPS, FTP, SFTP, BitTorrent and Metalink.\nThe SSL certificate used by the Aria2 server does not support port 6800, so NPM (Nginx Proxy Manager) needs to be used to provide both HTTP(s) and Aria2 JSONRPC services.\nEdit NPM (Nginx Proxy Manager) Proxy Host \u0026raquo; Advanced\n1 2 3 4 5 6 7 8 9 10 11 12 #ARIA2 location /jsonrpc { proxy_pass http://10.2.2.3:6800/jsonrpc; proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $host; #The following code supports WebSocket proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \u0026#34;upgrade\u0026#34;; } Parameter Description location /jsonrpc RPC address is //example.com/jsonrpc http://10.2.2.3:6800/jsonrpc The full path of the host (10.2.2.3 is host IP address) Final Result: You can now connect to ARIA2 RPC via \u0026ldquo;https\u0026rdquo; and \u0026ldquo;wss\u0026rdquo; (WebSocket Secure).\nReference: Nginx reverse proxy Aria2 JSONRPC | Kenvix\u0026rsquo;s Blog ","permalink":"https://www.kingtam.tk/posts/npm-aria2/","summary":"Create a reverse proxy for ARIA2\u0026rsquo;s JSONRPC using NPM","title":"Create a reverse proxy for ARIA2's JSONRPC using NPM"},{"content":"Overview Expanding the capacity of VM disks is easy, but shrinking their size is not straightforward on VMWare ESXi GUI.\nHere, we will perform an action to reduce the disk size on VMWare ESXi using the command line.\nStep-by-Step Guide 1. Shutdown the VM Power off the virtual machine that contains the virtual disk you want to shrink and note that all snapshots of the VM need to be deleted before starting the action.\n2. Enable SSH service on VMWare ESXi 3. Shrink VMDK Size on VMWare ESXi Login to ESXi SSH console via Putty or other SSH client software.\nEnter the VM storage directory (e.g., \u0026ldquo;/vmfs/volumes/Datastorage/\u0026rdquo;).\nEdit the file named \u0026ldquo;hostname.vmdk\u0026rdquo; using a text editor (e.g. vi VM_TEST.vmdk).\nIn this case, the edited file was \u0026ldquo;VM_TEST.vmdk\u0026rdquo;.\nLocate the \u0026ldquo;# Extent description\u0026rdquo; of the content, which is shown below:\n1 2 # Extent description RW 209715200 VMFS \u0026#34;VM_TEST-flat.vmdk\u0026#34; Suppose the VM\u0026rsquo;s HDD current size is 100GB, which is equivalent to 209715200 of content. We would like to reduce the size by 40GB, which means shrinking it to 60GB. The new content number is \u0026ldquo;209715200 - (40*1024*1024) = 125829120\u0026rdquo;.\nUpdate the content of VM_TEST.vmdk to:\n1 RW 125829120 VMFS \u0026#34;VM_TEST-flat.vmdk\u0026#34; Save and close the text editor.\n4. Start the VM Power on the virtual machine and log in to the guest OS.\nOpen the \u0026ldquo;Disk Management\u0026rdquo;.\nThe volume size is still 100GB, so take a \u0026ldquo;Shrink Volume\u0026hellip;\u0026rdquo; action of the virtual disk.\nNow, the virtual disk has been successfully shrunk to the new size.\n5. Fix the Display Size (Optional) Issue:\nThe STORAGE of the instance still displays 100GB, but the actual size has been shrunk to 60GB.\nSolution:\nTo fix this, export and import the VM by OVF TOOL.\nExport the VM 1 ovftool.exe vi://root:\u0026#34;P@ssw0rd\u0026#34;@vms01/VM_TEST c:\\tools\\VM_TEST.ova Import the VM 1 ovftool.exe --sourceType=OVA -n=VM_TEST -ds=Datastorage \u0026#34;c:\\tools\\VM_TEST.ova\u0026#34; vi://root:\u0026#34;P@ssw0rd\u0026#34;@vms01 Conclusion To shrink the size of a VMDK virtual disk on VMWare ESXi using the command line. The guide is easy to follow but caution should be exercised and backups should be made before proceeding with the steps.\nReference Shrink VMDK Virtual Disk Size on VMWare ESXi - How to do it Related Manual Upgrade ESXi from 6.7 to 8.0 via esxcli Renew DNS Servers in VMWare ESXi via ESXCLI Commands Deploy a Virtual Machine from an OVA File in the VMware ESXi Export VM to OVA using OVF Tool on VMware ESXi ","permalink":"https://www.kingtam.tk/posts/vmdk-shrink/","summary":"How to Shrink VMDK Virtual Disk Size on VMWare ESXi","title":"How to Shrink VMDK Virtual Disk Size on VMWare ESXi"},{"content":"Web Export Limitations Utilizing the OVF Tool to export VMs as OVA files is the ideal solution to circumvent timeout issues that may arise when the VM size exceeds 2GB.\nInstall the Latest OVF Tool The most recent OVF Tool version may help reduce errors, such as \u0026ldquo;Error: cURL error: SSL connect error\u0026rdquo;.\nDownload the VMware OVF tool from the VMware website.\nList VMs on Host using OVF Tool Navigate to the OVF Tool directory in CMD (Administrator mode)\n1 cd “C:\\Program Files\\VMware\\VMware OVF Tool” 1 ovftool.exe vi://vms01.com.hk OR\n1 ovftool.exe vi://root:\u0026#34;P@ssw0rd\u0026#34;@vms01.com.hk Parameter Description root Host login account P@ssw0rd Host login password vms01.com.hk Hostname or IP address The list of VMs available for export to OVA is displayed.\nExport VM to OVA using OVF Tool 1 ovftool.exe vi://root:\u0026#34;P@ssw0rd\u0026#34;@vms01.com.hk/VM_TEST c:\\tools\\VM_TEST.ova \u0026ldquo;c:\\tools\\VM_TEST.ova\u0026rdquo;: it will be saved as \u0026ldquo;VM_TEST.ova\u0026rdquo; in the \u0026ldquo;c:\\tools\u0026quot; directory.\nImport the OVA for Test 1 ovftool.exe --sourceType=OVA -n=VM_TEST -ds=Datastorage \u0026#34;c:\\tools\\Win2019SE.ova\u0026#34; vi://root:\u0026#34;P@ssw0rd\u0026#34;@vms01.com.hk Parameter Description \u0026ndash;sourceType=OVA Specifies the type of the source file (OVA format) -n=VM_TEST Specifies the name of the target virtual machine or appliance (VM_TEST) -ds=Datastorage Specifies the target datastore for deployment (Datastorage) Conclusion Using the OVF tool, you can package a VM or virtual appliance into a single file that includes the VM configuration settings, disk images, and other necessary files. This file can then be deployed to any VMWARE environment that supports the OVF format, allowing for easy migration and distribution of VMs.\nReference Export VM to OVA or OVF using OVF Tool – The Ultimate Guide Related Manual Upgrade ESXi from 6.7 to 8.0 via esxcli Renew DNS Servers in VMWare ESXi via ESXCLI Commands Deploy a Virtual Machine from an OVA File in the VMware ESXi Export VM to OVA using OVF Tool on VMware ESXi ","permalink":"https://www.kingtam.tk/posts/ova-export/","summary":"Export VM to OVA using OVF Tool on VMware ESXi","title":"Export VM to OVA using OVF Tool on VMware ESXi"},{"content":"Overview In some situations, such as a system error or hard disk failure, Windows may not boot up properly and require a reinstallation. After reinstalling Windows, you might need to rejoin the computer to the domain.\nThis tutorial will guide through the process of re-linking the computer to the existing domain account, which is more convenient than manually deleting the existing computer account from the domain controller server.\nStep-by-Step Procedure Rename the PC according to the asset ID: Before rejoining the domain, ensure that the computer name matches the asset ID. Navigate to System Properties \u0026gt; Computer Name \u0026gt; Network ID.... Choose the network type: Select the option \u0026ldquo;This computer is part of a business network; I use it to connect to other computers at work\u0026rdquo; and click Next. Select the domain option: Choose \u0026ldquo;My company uses a network with a domain\u0026rdquo; and click Next. Click Next to continue. Provide domain credentials: Enter the required privileged domain account credentials and click Next. Re-link the existing computer account: If the existing computer account is found in the domain, click Yes to re-link it. Skip domain user account creation: Select \u0026ldquo;Do not add a domain user account\u0026rdquo; and click Next. Finish and reboot: Click Finish and restart the computer. Complete the domain rejoining: After logging in again, the computer will have rejoined the domain. Conclusion By following the steps, you can conveniently rejoin a domain without having to access the domain controller server to delete the existing computer account.\nThis method provides an easier way to reconnect your computer to the domain after a system error or hard disk failure.\n","permalink":"https://www.kingtam.tk/posts/link-domain/","summary":"How to Join a Domain with an Existing Computer Account in Server","title":"How to Join a Domain with an Existing Computer Account in Server"},{"content":"Attention: Ensure you are purchasing sufficient licenses to take this action.\nHow to download and deploy Microsoft Office on your client computers?\nThe Office Deployment Tool (ODT) is a command-line tool that can help you accomplish this task.\nDownload the Office Deployment Tool The first step is to download the Office Deployment Tool.\nDownload it from the Microsoft website by visiting this link.\nOnce you have downloaded the tool, extract the executed tool file to the specified folder and list as follows\n1 2 3 4 5 6 7 8 . |-- configuration-Office2019Enterprise.xml |-- configuration-Office2021Enterprise.xml |-- configuration-Office365-x64.xml |-- configuration-Office365-x86.xml `-- setup.exe 0 directories, 5 files Use the Office Customization Tool The Office Customization Tool is a web-based tool that allows you to customize your Office installation.\nUse it to customize settings such as Architecture, language, components, etc.\nTo use the Office Customization Tool, visit this link: https://config.office.com/deploymentsettings.\nAfter completing customization, export the file as \u0026ldquo;config.xml\u0026rdquo;\nDownload the Installer Contents Need to download the installer contents after customizing the Office installation.\nOpen the Command Prompt as an administrator and navigate to the directory where you want to save the installer contents.\nThen, enter the following command:\n1 setup /download config.xml Here is the config file including Word, Excel, and PowerPoint only\nInstall Microsoft Office Once you have downloaded the installer contents, Use the Office Deployment Tool to install Microsoft Office on computers.\nRun the Command Prompt as administrator and navigate to the directory. Then, enter the following command:\n1 setup /configure config.xml This command will install Microsoft Office on computers using the settings specified in the Office Customization Tool.\nActivate Microsoft Office Finally, activate Microsoft Office.\nUse a Key Management Service (KMS) server or a Multiple Activation Key (MAK).\nThe scenario where the installed office version is 2021 and the architecture is x64.\nRun Command Prompt as administrator and the following commands:\n1 2 C:\\Program Files\\Microsoft Office\\Office16\u0026gt;cscript ospp.vbs /sethst:kms_address C:\\Program Files\\Microsoft Office\\Office16\u0026gt;cscript ospp.vbs /act Replace \u0026ldquo;kms_address\u0026rdquo; with the address of your own KMS server.\nConclusion Overall, the Office Deployment Tool offers a powerful and flexible solution for deploying Microsoft Office to client computers, with customizable installations, faster installations, offline installations, a command-line interface, and flexibility to meet a variety of deployment needs.\nRelated Windows and Office Activation Guide (KMS) ","permalink":"https://www.kingtam.tk/posts/office/","summary":"Download and Deploy Microsoft Office","title":"Download and Deploy Microsoft Office"},{"content":"Pic From\nAttention: Ensure you are purchasing sufficient licenses to take this action.\nInstructions KMS activation has a 180-day period, which is called the activation validity interval To maintain activation, your system must renew activation by connecting to the KMS server at least once every 180 days By default, activation renewal attempts are automatically made every 7 days After you renew client activation, the activation interval restarts As long as you can\u0026rsquo;t connect to the internet for more than 180 days, the system will self-renew and remain active Installation One-click installation of KMS service scripts\n1 2 3 4 5 6 7 8 wget --no-check-certificate https://raw.githubusercontent.com/teddysun/across/master/kms.sh \u0026amp;\u0026amp; chmod +x kms.sh \u0026amp;\u0026amp; ./kms.sh netstat -nxtlp | grep 1688 # Check the port 1688 /etc/init.d/kms status # Service Status /etc/init.d/kms start # Start Service /etc/init.d/kms stop # Stop Service /etc/init.d/kms restart # Restart Service ./kms.sh uninstall # Uninstall Docker installation (docker-compose)\n1 2 3 4 5 6 7 8 version: \u0026#39;3\u0026#39; services: kms: image: teddysun/kms container_name: kms ports: - \u0026#34;1688:1688\u0026#34; restart: always How to use KMS activation Run CMD with administrator privileges to view the system version:\n1 wmic os get caption Install the key from the correct version\n1 slmgr /ipk xxxxx-xxxxx-xxxxx-xxxxx-xxxxx The Key reference GVLK\nSet the KMS server address\n1 slmgr /skms Your IP or Domain:1688 e.g. slmgr /skms 10.2.2.10:1688\nServer: URL (address): 01 skms.netnr.eu.org 02 kms.cangshui.net 03 kms.03k.org Activate the system\n1 slmgr /ato Query expiration time\n1 slmgr /xpr Generic Volume License Keys (GVLK) In the tables that follow, you will find the GVLKs for each version and edition of Windows. LTSC is Long-Term Servicing Channel, while LTSB is Long-Term Servicing Branch.\nWindows Server (LTSC versions) Windows Server 2022 Operating system edition KMS Client Product Key Windows Server 2022 Datacenter WX4NM-KYWYW-QJJR4-XV3QB-6VM33 Windows Server 2022 Standard VDYBN-27WPP-V4HQT-9VMD4-VMK7H Windows Server 2019 Operating system edition KMS Client Product Key Windows Server 2019 Datacenter WMDGN-G9PQG-XVVXX-R3X43-63DFG Windows Server 2019 Standard N69G4-B89J2-4G8F4-WWYCC-J464C Windows Server 2019 Essentials WVDHN-86M7X-466P6-VHXV7-YY726 Windows Server 2016 Operating system edition KMS Client Product Key Windows Server 2016 Datacenter CB7KF-BWN84-R7R2Y-793K2-8XDDG Windows Server 2016 Standard WC2BQ-8NRM3-FDDYY-2BFGV-KHKQY Windows Server 2016 Essentials JCKRF-N37P4-C2D82-9YXRT-4M63B Windows Server (Semi-Annual Channel versions) Windows Server, versions 20H2, 2004, 1909, 1903, and 1809 Operating system edition KMS Client Product Key Windows Server Datacenter 6NMRW-2C8FM-D24W7-TQWMY-CWH2D Windows Server Standard N2KJX-J94YW-TQVFB-DG9YT-724CC Windows 11 and Windows 10 (Semi-Annual Channel versions) See the Windows lifecycle fact sheet for information about supported versions and end of service dates.\nOperating system edition KMS Client Product Key Windows 11 Pro Windows 10 Pro W269N-WFGWX-YVC9B-4J6C9-T83GX Windows 11 Pro N Windows 10 Pro N MH37W-N47XK-V7XM9-C7227-GCQG9 Windows 11 Pro for Workstations Windows 10 Pro for Workstations NRG8B-VKK3Q-CXVCJ-9G2XF-6Q84J Windows 11 Pro for Workstations N Windows 10 Pro for Workstations N 9FNHH-K3HBT-3W4TD-6383H-6XYWF Windows 11 Pro Education Windows 10 Pro Education 6TP4R-GNPTD-KYYHQ-7B7DP-J447Y Windows 11 Pro Education N Windows 10 Pro Education N YVWGF-BXNMC-HTQYQ-CPQ99-66QFC Windows 11 Education Windows 10 Education NW6C2-QMPVW-D7KKK-3GKT6-VCFB2 Windows 11 Education N Windows 10 Education N 2WH4N-8QGBV-H22JP-CT43Q-MDWWJ Windows 11 Enterprise Windows 10 Enterprise NPPR9-FWDCX-D2C8J-H872K-2YT43 Windows 11 Enterprise N Windows 10 Enterprise N DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4 Windows 11 Enterprise G Windows 10 Enterprise G YYVX9-NTFWV-6MDM3-9PT4T-4M68B Windows 11 Enterprise G N Windows 10 Enterprise G N 44RPN-FTY23-9VTTB-MP9BX-T84FV Windows 10 (LTSC/LTSB versions) Windows 10 LTSC 2021 and 2019 Operating system edition KMS Client Product Key Windows 10 Enterprise LTSC 2021 Windows 10 Enterprise LTSC 2019 M7XTQ-FN8P6-TTKYV-9D4CC-J462D Windows 10 Enterprise N LTSC 2021 Windows 10 Enterprise N LTSC 2019 92NFX-8DJQP-P6BBQ-THF9C-7CG2H Windows 10 LTSB 2016 Operating system edition KMS Client Product Key Windows 10 Enterprise LTSB 2016 DCPHK-NFMTC-H88MJ-PFHPY-QJ4BJ Windows 10 Enterprise N LTSB 2016 QFFDN-GRT3P-VKWWX-X7T3R-8B639 Windows 10 LTSB 2015 Operating system edition KMS Client Product Key Windows 10 Enterprise 2015 LTSB WNMTR-4C88C-JK8YV-HQ7T2-76DF9 Windows 10 Enterprise 2015 LTSB N 2F77B-TNFGY-69QQF-B8YKP-D69TJ Earlier versions of Windows Server Windows Server, version 1803 Operating system edition KMS Client Product Key Windows Server Datacenter 2HXDN-KRXHB-GPYC7-YCKFJ-7FVDG Windows Server Standard PTXN8-JFHJM-4WC78-MPCBR-9W4KR Windows Server, version 1709 Operating system edition KMS Client Product Key Windows Server Datacenter 6Y6KB-N82V8-D8CQV-23MJW-BWTG6 Windows Server Standard DPCNP-XQFKJ-BJF7R-FRC8D-GF6G4 Windows Server 2012 R2 Operating system edition KMS Client Product Key Windows Server 2012 R2 Standard D2N9P-3P6X9-2R39C-7RTCD-MDVJX Windows Server 2012 R2 Datacenter W3GGN-FT8W3-Y4M27-J84CP-Q3VJ9 Windows Server 2012 R2 Essentials KNC87-3J2TX-XB4WP-VCPJV-M4FWM Windows Server 2012 Operating system edition KMS Client Product Key Windows Server 2012 BN3D2-R7TKB-3YPBD-8DRP2-27GG4 Windows Server 2012 N 8N2M2-HWPGY-7PGT9-HGDD8-GVGGY Windows Server 2012 Single Language 2WN2H-YGCQR-KFX6K-CD6TF-84YXQ Windows Server 2012 Country Specific 4K36P-JN4VD-GDC6V-KDT89-DYFKP Windows Server 2012 Standard XC9B7-NBPP2-83J2H-RHMBY-92BT4 Windows Server 2012 MultiPoint Standard HM7DN-YVMH3-46JC3-XYTG7-CYQJJ Windows Server 2012 MultiPoint Premium XNH6W-2V9GX-RGJ4K-Y8X6F-QGJ2G Windows Server 2012 Datacenter 48HP8-DN98B-MYWDG-T2DCC-8W83P Windows Server 2008 R2 Operating system edition KMS Client Product Key Windows Server 2008 R2 Web 6TPJF-RBVHG-WBW2R-86QPH-6RTM4 Windows Server 2008 R2 HPC edition TT8MH-CG224-D3D7Q-498W2-9QCTX Windows Server 2008 R2 Standard YC6KT-GKW9T-YTKYR-T4X34-R7VHC Windows Server 2008 R2 Enterprise 489J6-VHDMP-X63PK-3K798-CPX3Y Windows Server 2008 R2 Datacenter 74YFP-3QFB3-KQT8W-PMXWJ-7M648 Windows Server 2008 R2 for Itanium-based Systems GT63C-RJFQ3-4GMB6-BRFB9-CB83V Windows Server 2008 Operating system edition KMS Client Product Key Windows Web Server 2008 WYR28-R7TFJ-3X2YQ-YCY4H-M249D Windows Server 2008 Standard TM24T-X9RMF-VWXK6-X8JC9-BFGM2 Windows Server 2008 Standard without Hyper-V W7VD6-7JFBR-RX26B-YKQ3Y-6FFFJ Windows Server 2008 Enterprise YQGMW-MPWTJ-34KDK-48M3W-X4Q6V Windows Server 2008 Enterprise without Hyper-V 39BXF-X8Q23-P2WWT-38T2F-G3FPG Windows Server 2008 HPC RCTX3-KWVHP-BR6TB-RB6DM-6X7HP Windows Server 2008 Datacenter 7M67G-PC374-GR742-YH8V4-TCBY3 Windows Server 2008 Datacenter without Hyper-V 22XQ2-VRXRG-P8D42-K34TD-G3QQC Windows Server 2008 for Itanium-Based Systems 4DWFP-JF3DJ-B7DTH-78FJB-PDRHK Earlier versions of Windows Windows 8.1 Operating system edition KMS Client Product Key Windows 8.1 Pro GCRJD-8NW9H-F2CDX-CCM8D-9D6T9 Windows 8.1 Pro N HMCNV-VVBFX-7HMBH-CTY9B-B4FXY Windows 8.1 Enterprise MHF9N-XY6XB-WVXMC-BTDCT-MKKG7 Windows 8.1 Enterprise N TT4HM-HN7YT-62K67-RGRQJ-JFFXW Windows 8 Operating system edition KMS Client Product Key Windows 8 Pro NG4HW-VH26C-733KW-K6F98-J8CK4 Windows 8 Pro N XCVCF-2NXM9-723PB-MHCB7-2RYQQ Windows 8 Enterprise 32JNW-9KQ84-P47T8-D8GGY-CWCK7 Windows 8 Enterprise N JMNMF-RHW7P-DMY6X-RF3DR-X2BQT Windows 7 Operating system edition KMS Client Product Key Windows 7 Professional FJ82H-XT6CR-J8D7P-XQJJ2-GPDD4 Windows 7 Professional N MRPKT-YTG23-K7D7T-X2JMM-QY7MG Windows 7 Professional E W82YF-2Q76Y-63HXB-FGJG9-GF7QX Windows 7 Enterprise 33PXH-7Y6KF-2VJC9-XBBR8-HVTHH Windows 7 Enterprise N YDRBP-3D83W-TY26F-D46B2-XCKRJ Windows 7 Enterprise E C29WB-22CC8-VJ326-GHFJW-H9DH4 Windows Vista Operating system edition KMS Client Product Key Windows Vista Business YFKBB-PQJJV-G996G-VWGXY-2V3X8 Windows Vista Business N HMBQG-8H2RH-C77VX-27R82-VMQBT Windows Vista Enterprise VKK3X-68KWM-X2YGT-QR4M6-4BWMV Windows Vista Enterprise N VTC42-BM838-43QHV-84HX6-XJXKV Key https://learn.microsoft.com/zh-cn/windows-server/get-started/kms-client-activation-keys\nFor activation of Office Office (VOL version) activation steps (administrator command execution) Go to the installation directory\nThe default for 32-bit is typical\n1 cd \u0026#34;C:\\Program Files (x86)\\Microsoft Office\\Office16\u0026#34; The default for 64-bit is typical\n1 cd \u0026#34;C:\\Program Files\\Microsoft Office\\Office16\u0026#34; Office16 is Office 2016, Office15 is Office 2013, and Office14 is Office 2010.\nRegister the KMS service\n1 cscript ospp.vbs /sethst:skms.netnr.eu.org Activate Office\n1 cscript ospp.vbs /act Key of Office keys https://docs.microsoft.com/en-us/DeployOffice/vlactivation/gvlks Help\nReference One-click installation of KMS service scripts teddysun/kms - Docker Image | Docker Hub GitHub - netnr/kms: KMS activates the service KMS Activation Windows/Office Pocket Guide ","permalink":"https://www.kingtam.tk/posts/kms/","summary":"Windows and Office Activation Guide (KMS)","title":"Windows and Office Activation Guide (KMS)"},{"content":"Overview: We can use the Veeam Backup \u0026amp; Replication restore function to perform a physical to virtual (P2V) backup to a virtual machine (VM).\nThis restores a backup of a physical server or workstation to a virtual machine, let us run the system as a VM on virtualization platform.\nInvolved Procedures: Instant Recovery: This process quickly recovers a VM from a backup.\nRestoring the VM to a production-ready state, which likes a sandbox environment, We can access and use the VM while the restore process continues in the background.\nIn Instant Recovery mode, the disk with data is still stored in Veeam Backup.\nOnce the restore process is complete, the VM can be migrated to the production environment.\nMigrate to Production: Once the VM has been restored and is in a production-ready state, you can migrate it to the production environment.\nThis process copies the VM to its final location and performs any necessary configuration changes to ensure it is appropriately migrated into the production environment.\nAfter Migrate to Production, the disk with data is completely copied to the VM server.\nOnce the migration is complete, the VM is fully operational and can be used as normal.\nSummary Instant recovery is used when you need to quickly restore a VM to its original location or a new location for temporary use, while migrate to production is used when you need to permanently move a VM to a new location in your virtual environment.\n","permalink":"https://www.kingtam.tk/posts/veeam-p2v/","summary":"Use the Veeam Backup \u0026amp; Replication to P2V","title":"Use the Veeam Backup \u0026 Replication to P2V"},{"content":" Use Docker to deploy OpenWrt with Docker Compose, it\u0026rsquo;s easy to create and manage containers, making it an ideal solution for deploying OpenWrt on embedded devices.\nFeatures OpenWrt official OpenWrt-22.03 branch version, Kernel 5.15, synchronized with the latest official source code. The original firmware is extremely pure. It only includes basic Internet access functions by default, and plug-ins can be selected online. The self-built plug-in repository includes almost all open source plug-ins. Customize through supes.top without requiring professional knowledge, and generate it in one minute. One-click OTA firmware update in the background. One-click bypass route (SideRouter) and one-click switch IPv6. Supports online installation of all Kmod kernel modules. Replaces Uhttpd with Nginx, supporting reverse proxy, WebDAV, and more. Out-of-the-box (OOTB) feature. Networking Information Before we begin, let\u0026rsquo;s find out the networking information on the Linux system we will be using to deploy OpenWrt.\n1 ip route default via 10.1.1.1 dev eth0 metric 202 10.1.1.0/24 dev eth0 scope link src 10.1.1.97 172.17.0.0/16 dev docker0 scope link src 172.17.0.1\nThis command will display the routing table of the system, which includes the default gateway, subnet, and interface information.\nName Parameter Interface eth0 Default Gateway 10.1.1.1 Subnet 10.1.1.0/24 Enable the NIC (Network Interface Controller) promiscuous mode.\nThis is necessary for the OpenWrt container to access the internet.\n1 ip link set eth0 promisc on If unsure which interface to use, we can run the following command to automatically detect and enable promiscuous mode:\n1 ip link set $(ip route | awk \u0026#39;/default/ {print $5}\u0026#39;) promisc on To check the promiscuous mode status, run the following command:\n1 ip -d link | grep \u0026#34;promiscuity 1\u0026#34; If the output shows \u0026ldquo;promiscuity 1\u0026rdquo;, then promiscuous mode is enabled.\nDownload the latest Image Download the latest OpenWrt image via Download or customize the OpenWrt firmware for your device In this scenario, use Docker or LXC type for the architecture of the x86_x64 system.\n1 wget https://supes.top/releases/targets/x86/64/openwrt-04.18.2023-x86-64-generic-rootfs.tar.gz \u0026ndash;2023-05-15 16:50:30\u0026ndash; https://supes.top/releases/targets/x86/64/openwrt-04.18.2023-x86-64-generic-rootfs.tar.gz Resolving supes.top (supes.top)\u0026hellip; 104.21.4.157 Connecting to supes.top (supes.top)|104.21.4.157|:443\u0026hellip; connected. HTTP request sent, awaiting response\u0026hellip; 200 OK Length: 98339727 (94M) [application/octet-stream] Saving to: ‘openwrt-04.18.2023-x86-64-generic-rootfs.tar.gz’\nopenwrt-04.18.2023-x86-64-gen 100%[=================================================\u0026gt;] 93.78M 61.5MB/s in 1.5s\n2023-05-15 16:50:32 (61.5 MB/s) - ‘openwrt-04.18.2023-x86-64-generic-rootfs.tar.gz’ saved [98339727/98339727]\nOnce the image is downloaded, import it into Docker\n1 docker import openwrt-04.18.2023-x86-64-generic-rootfs.tar.gz supes_openwrt sha256:a31010a2bdc1b008522980d94da145883b663fb2fc86e91eacb85f22b0850cd0\nVerify that the image has been imported successfully\n1 docker images REPOSITORY TAG IMAGE ID CREATED SIZE supes_openwrt latest 36f25cd1cee7 6 seconds ago 275MB\nStart to Deploy Using a Docker Compose file to define our container configuration.\nCreate a new file named \u0026ldquo;docker-compose.yml\u0026rdquo; with the following YAML code:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 cat \u0026gt;\u0026gt; docker-compose.yml \u0026lt;\u0026lt; EOF version: \u0026#39;3.8\u0026#39; services: openwrt: image: supes_openwrt container_name: openwrt command: /sbin/init privileged: true restart: always networks: openwrt-macvlan: ipv4_address: 10.1.1.11 networks: openwrt-macvlan: driver: macvlan driver_opts: parent: eth0 ipam: config: - subnet: 10.1.1.0/24 gateway: 10.1.1.1 EOF This Docker Compose file defines a single service named \u0026ldquo;openwrt\u0026rdquo; that uses the \u0026ldquo;supes_openwrt\u0026rdquo; image we imported earlier.\nSpecifies that the container should be run in privileged mode and restarted automatically if it stops. Defines a network named \u0026ldquo;openwrt-macvlan\u0026rdquo; that uses the \u0026ldquo;macvlan\u0026rdquo; driver to create a virtual network interface for the container.\nThe network is assigned an IP address of 10.1.1.11 with a subnet of 10.1.1.0/24 and a gateway of 10.1.1.1.\nTo start the deployment\n1 docker compose up -d [+] Running 2/2 ✔ Network root_openwrt Created ✔ Container openwrt Started\nTo check the status of the container, run the following command:\n1 docker compose ps If everything is working correctly, you should see the \u0026ldquo;openwrt\u0026rdquo; service running with the status.\nNAME IMAGE COMMAND SERVICE CREATED STATUS PORTS openwrt supes_openwrt \u0026ldquo;/sbin/init\u0026rdquo; openwrt About a minute ago Up About a minute\nModify OpenWrt login IP Access the OpenWrt container\n1 docker exec -it openwrt sh BusyBox v1.35.0 (2023-04-30 14:20:01 UTC) built-in shell (ash)\nThe default login IP is 10.0.0.1. Use the IP 10.3.3.11 instead, and adjust it according to your personal situation.\n1 sed -i \u0026#39;s/10.0.0.1/10.1.1.11/\u0026#39; /etc/config/network \u0026amp;\u0026amp; /etc/init.d/network restart Set OpenWrt to bypass mode (SideRouter) Use the new IP address 10.1.1.11 login to OpenWRT via Browser and set up SideRouter mode.Default login password : root\nConclusion kiddin9\u0026rsquo;s OpenWrt firmware offers customizable routers with the latest version and kernel, self-built plug-in warehouse, and easy customization through https://supes.top.\nIt supports one-click updates, bypass route, IPv6 switch, and online installation of all Kmod kernel modules. It replaces Uhttpd with Nginx, supporting reverse proxy, WebDAV, and more. All features are OOTB, making it easy for non-technical users.\nThanks to the author for this useful resource.\nReference Author GitHub Page 下載或定製適用於您裝置的OpenWrt韌體 Docker版OpenWrt旁路由安装设置教程 Related VPS uses Docker deployment to automatically renew freenom domain name Docker Application of OneCloud Deploy KMS with Docker Let NPM (Nginx Proxy Manager) and FRP (Fast Reverse Proxy) share 80/443 ports with wildcard domain Use Docker to Deploy FRP Services Install Docker and Docker Compose via shell script Deploy FRP server and client services using Docker via shell script ","permalink":"https://www.kingtam.tk/posts/docker-openwrt/","summary":"Use Docker to deploy OpenWrt with Docker Compose, it\u0026rsquo;s easy to create and manage containers, making it an ideal solution for deploying OpenWrt on embedded devices.","title":"Deploy OpenWrt with Docker Compose"},{"content":"Problem of SSH Here is the \u0026ldquo;No Matching Key Exchange Method Found\u0026rdquo; error on your Cisco SG300-10P switch.\nWhen attempting to establish an SSH connection with the following command:\n1 ssh root@10.1.1.1 In This Case Login Name Switch IP root 10.1.1.1 An error is encountered due to incompatible key exchange and cipher methods:\nUnable to negotiate with 10.1.1.1 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1\nUnable to negotiate with 10.1.1.1 port 22: no matching cipher found. Their offer: aes128-cbc,3des-cbc,arcfour,aes192-cbc,aes256-cbc\nSolution To resolve the issue, create a new SSH configuration file and restart the SSH service:\nRun the following command to create a new configuration file, cisco_sg300.conf, in the /etc/ssh/ssh_config.d/ directory:\n1 2 3 4 5 sudo bash -c \u0026#39;cat \u0026gt; /etc/ssh/ssh_config.d/cisco_sg300.conf \u0026lt;\u0026lt; EOF HostkeyAlgorithms ssh-dss,ssh-rsa KexAlgorithms +diffie-hellman-group1-sha1,diffie-hellman-group14-sha1 Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc EOF\u0026#39; OR minimum algorithms to be compatible with more devices.\n1 2 3 4 5 sudo cat \u0026gt; /etc/ssh/ssh_config.d/cisco_sg300.conf \u0026lt;\u0026lt; EOF KexAlgorithms +diffie-hellman-group1-sha1,diffie-hellman-group14-sha1 HostKeyAlgorithms +ssh-rsa Ciphers +aes128-cbc EOF Restart the SSH service for the changes to take effect:\n1 sudo systemctl restart ssh.service Conclusion Encountering errors such as \u0026ldquo;No Matching Key Exchange Method Found\u0026rdquo; and \u0026ldquo;No Matching Cipher Found\u0026rdquo; on your Cisco SG300-10P Network Switch can be frustrating, but they can be resolved with a few simple steps.\n","permalink":"https://www.kingtam.tk/posts/cisco-ssh-issue/","summary":"Fixing Key Exchange and Cipher Issues on Cisco SG300-10P Switch","title":"Fixing Key Exchange and Cipher Issues on Cisco SG300-10P Switch"},{"content":"Introduction This is a universal flashing guide for Rockchip devices. Simply match the boot (system bootloader file) and system (system image file), and you can easily flash the specified system, such as Armbian, OpenWRT, AndroidTV etc.\nPrerequisites Hardware:\nRockchip device (e.g., Panther X2, L1-Pro) USB cable (dual-headed USB-A) Computer (Windows (recommended), macOS, Linux) Software:\nDriverAssitant (Rockchip driver) RKDevTool (Rockchip flashing tool) BootLoader (system bootloader file) System (system image file) Flashing Procedure This guide uses Panther X2 as an example:\nInstall the Rockchip driver. Download File : DriverAssitant_v5.1.1.zip\nRun the flashing tool. Download File : RKDevTool_Release_v2.84.zip\nWhen the LOADER device is detected, go to the \u0026ldquo;Advanced Function\u0026rdquo; tab and enable \u0026ldquo;Maskrom\u0026rdquo; mode.\nNote: MaskROM is a special type of read-only memory (ROM) made by Rockchip. It is used as an emergency boot mode for repairing or upgrading Rockchip\u0026rsquo;s system chips.\nReturn to the \u0026ldquo;Download Image\u0026rdquo; tab.\nThe boot (system bootloader file) is the rk356x-MiniLoaderAll.bin in the flashing tool. The system (system image file) is Armbian_23.08.0_rockchip_panther-x2_bookworm_6.1.35_server_2023.06.21.img.gz. Download and unzip it to a local directory. Click the \u0026ldquo;Run\u0026rdquo; button and wait for Download image OK.\nPower off and restart to enter the system.\nArmbian System Default Information Name Value Default IP Obtain IP from router Default account root Default password 1234 Steps Description 1 Set up root password (needs to be entered twice) 2 Select 1) bash 3 \u0026lt;Ctrl-C\u0026gt; to cancel creating a new account Fixing the Panther X2 USB Unrecognized Issue Execute as root user:\n1 sudo -i The system will prompt for a password.\nRun the following commands:\n1 2 3 4 cd /boot/dtb/rockchip dtc -I dtb -O dts rk3566-panther-x2.dtb \u0026gt; rk3566-panther-x2.dts sed -i \u0026#39;/usb@fcc00000/{:a;n;/.*dr_mode = \u0026#34;otg\u0026#34;;/!ba;s/dr_mode = \u0026#34;otg\u0026#34;/dr_mode = \u0026#34;host\u0026#34;/}\u0026#39; rk3566-panther-x2.dts dtc -I dts -O dtb rk3566-panther-x2.dts \u0026gt; rk3566-panther-x2.dtb This command changes the otg to host within the usb@fcc00000 block, meaning it changes the USB mode from OTG to Host mode. The USB device will act as a host, controlling data read and write operations with external devices.\nOnce the commands are executed, reboot the device for the changes to take effect:\n1 reboot After the reboot, the USB issues should be resolved, and the USB ports should function as expected in host mode.\nConclusion This guide is for informational purposes only and is intended to make it easier for users to find and save the relevant information.\n","permalink":"https://www.kingtam.tk/posts/rk3566-flash/","summary":"Universal Flashing Guide for Rockchip Devices","title":"Universal Flashing Guide for Rockchip Devices"},{"content":"image from unsplash\nAbout As you know, Synology NAS devices are based on the Linux kernel, but they have some function limitations that make installing applications not as easy as using package management systems like apt, yum, or dnf. Also, commands like usermod and groupadd don\u0026rsquo;t actually exist on Synology NAS.\nSudo without Password (Option) Eable SSH on Synology Remove the need to enter a password each time sudo is used. Log in to Synology DSM using ssh with an account that has sudo permissions.\n1 sudo tee /etc/sudoers.d/$(USER) \u0026lt;\u0026lt;\u0026lt; \u0026#39;$(USER) ALL=(ALL) NOPASSWD: ALL\u0026#39; $(USER) is the current username, which is up to you.\nUpdate the permission to read-only. 1 sudo chmod 400 /etc/sudoers.d/$(USER) Install Entware on Synology DSM Entware has been adapted for Synology\u0026rsquo;s DSM as a software repository.\nCreate a folder on your HDD 1 mkdir -p /volume1/@Entware/opt Remove /opt and mount the Optware folder. Make sure that the /opt folder is empty (Optware is not installed). Remove the /opt folder with its contents in this step.\n1 2 3 rm -rf /opt mkdir /opt mount -o bind \u0026#34;/volume1/@Entware/opt\u0026#34; /opt Note: If the bind command doesn\u0026rsquo;t work, try creating a link instead:\n1 ln -s /volume1/@Entware/opt/ /opt Run the installation script depending on the processor (uname -m to know). for armv8 (aarch64) - Realtek RTD129x\n1 wget -O - https://bin.entware.net/aarch64-k3.10/installer/generic.sh | /bin/sh for armv5\n1 wget -O - https://bin.entware.net/armv5sf-k3.2/installer/generic.sh | /bin/sh for armv7\n1 wget -O - https://bin.entware.net/armv7sf-k3.2/installer/generic.sh | /bin/sh for x64\n1 wget -O - https://bin.entware.net/x64-k3.2/installer/generic.sh | /bin/sh Create Autostart Task Create a triggered user-defined task in Task Scheduler.\nGoto: DSM \u0026gt; Control Panel \u0026gt; Task Scheduler Create \u0026gt; Triggered Task \u0026gt; User Defined Script General Task: Entware User: root Event: Boot-up Pretask: none Task Settings Run Command: (as bellow)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #!/bin/sh # Mount/Start Entware mkdir -p /opt mount -o bind \u0026#34;/volume1/@Entware/opt\u0026#34; /opt /opt/etc/init.d/rc.unslung start # Add Entware Profile in Global Profile if grep -qF \u0026#39;/opt/etc/profile\u0026#39; /etc/profile; then echo \u0026#34;Confirmed: Entware Profile in Global Profile\u0026#34; else echo \u0026#34;Adding: Entware Profile in Global Profile\u0026#34; cat \u0026gt;\u0026gt; /etc/profile \u0026lt;\u0026lt;\u0026#34;EOF\u0026#34; # Load Entware Profile [ -r \u0026#34;/opt/etc/profile\u0026#34; ] \u0026amp;\u0026amp; . /opt/etc/profile EOF fi # Update Entware List /opt/bin/opkg update Reboot your NAS. Install Packages Install all the packages through opkg\n1 sudo opkg install git git-http wget curl tree iperf3 This installs Git, Git over HTTP, wget, curl, tree, and iperf3 packages using the opkg package manager with superuser privileges.\nManage Docker Without Using Sudo Manage Docker on Synology NAS via ssh without requiring sudo.\nCreate a new user group called docker. 1 sudo synogroup --add docker Add the user you want to use to this group 1 sudo synogroup --member docker $USER Change the ownership of the docker.sock file. 1 sudo chown root:docker /var/run/docker.sock Once have completed these steps, log out and back in again to ensure the changes take effect.\nInstall Docker Compose Plugin V2 On Synology DSM 7 SSH in into Synology NAS. Then copy and paste the commands below. 1 2 3 4 DOCKER_CONFIG=${DOCKER_CONFIG:-/usr/local/lib/docker} mkdir -p $DOCKER_CONFIG/cli-plugins curl -SL https://github.com/docker/compose/releases/download/v2.28.1/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose Test that it works 1 docker compose version Install VIM-PLUG on Synology DSM Download plug.vim and put it in the \u0026ldquo;autoload\u0026rdquo; directory. 1 2 curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim Add a vim-plug section to your ~/.vimrc. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 cat \u0026gt;\u0026gt; ~/.vimrc \u0026lt;\u0026lt; EOF call plug#begin() Plug \u0026#39;vim-airline/vim-airline\u0026#39; Plug \u0026#39;vim-airline/vim-airline-themes\u0026#39; Plug \u0026#39;tpope/vim-commentary\u0026#39; Plug \u0026#39;scrooloose/nerdtree\u0026#39; Plug \u0026#39;joshdick/onedark.vim\u0026#39; Plug \u0026#39;octol/vim-cpp-enhanced-highlight\u0026#39; call plug#end() \u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34; \u0026#34; Keyboard mapping to toggle the nerdtree file explorer. nnoremap \u0026lt;F5\u0026gt; :exec \u0026#39;NERDTreeToggle\u0026#39; \u0026lt;CR\u0026gt; \u0026#34; =\u0026gt; Colors and Fonts \u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34; \u0026#34; Enable syntax highlighting syntax enable \u0026#34; Set colorscheme set background=dark \u0026#34; Set utf8 as standard encoding and en_US as the standard language set encoding=utf8 \u0026#34; Use Unix as the standard file type set ffs=unix,dos,mac \u0026#34; Enable status bar color set t_Co=256 \u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34; \u0026#34; Vim Airline themes let g:airline_powerline_fonts=1 let g:airline#extensions#tabline#enabled=1 \u0026#34; Vim Cpp Highlight let g:cpp_class_scope_highlight=1 let g:cpp_member_variable_highlight=1 let g:cpp_experimental_simple_template_highlight=1 let g:cpp_concepts_highlight=1 EOF Reload .vimrc and install plugins. Open vi editor\n1 :PlugInstall Commands Command Description PlugInstall [name ...] [#threads] Install plugins PlugUpdate [name ...] [#threads] Install or update plugins PlugClean[!] Remove unlisted plugins (bang version will clean without prompt) PlugUpgrade Upgrade vim-plug itself PlugStatus Check the status of plugins PlugDiff Examine changes from the previous update and the pending changes PlugSnapshot[!] [output path] Generate script for restoring the current snapshot of the plugins Conclusion Entware, managing Docker without requiring sudo, and installing packages using opkg. This is a useful for users looking to customize on Synology NAS devices.\nReference Install on Synology NAS Manage docker without needing sudo on your Synology NAS VIM-PLUG ","permalink":"https://www.kingtam.tk/posts/dsm-custom/","summary":"Synology DSM Customization: Unlocking the Potential of NAS","title":"Synology DSM Customization: Unlocking the Potential of NAS"},{"content":"Introduction: The Cisco ASA firewall can be challenging to work with, and using the CLI can be difficult. However, basic configuration can still be done using the ASDM GUI. Since I don\u0026rsquo;t have a lot of time and energy to research the Cisco ASA firewall in-depth, I\u0026rsquo;m documenting the setup steps to avoid having to start from scratch again after a long time.\nIn this example, we will configure NAT (Port Forwarding) for three NVR (CCTV recorders) on the Cisco ASA 5512-X firewall to allow access from the outside network. Details are shown in the following diagram.\nConfiguration Example: Screenshots with minimal annotations.\nObjects Network Objects (Creating network objects) Service Objects (Creating service objects) NAT Rules Creating NAT rules using Objects.\nPublic_37 (Network Object) is the previously created Public IP address 209.118.222.13.\nAccess Rules Access rules are necessary to allow access from the outside network to the internal devices.\nConclusion: This example covers the basic configuration of the ASA firewall, with a focus on understanding the basic relationship between Objects, NAT, and Access Rules. This will make it easier to configure firewalls from different vendors in the future.\n","permalink":"https://www.kingtam.tk/posts/cisco-firewall-nat/","summary":"Setting up NAT (Port Forwarding) on Cisco ASA 5512-X (based on ASDM)","title":"Setting up NAT (Port Forwarding) on Cisco ASA 5512-X (based on ASDM)"},{"content":" Introduction: This is a basic network configuration guide for Cisco routers, and all exercises are based on a simulator (EVE-NG).\nEnable and Configure Port IP Addresses In this example, interface Ethernet0/0 is the LAN port, and interface Ethernet0/1 is the WAN port.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 Router#enable Router# Router#configure terminal Enter configuration commands, one per line. End with CNTL/Z. Router(config)# Router(config)#interface e0/1 Router(config-if)#ip address 19.86.11.96 255.255.255.0 Router(config-if)#no shutdown Router(config-if)#exit Router(config)# Router(config)#interface e0/0 Router(config-if)#ip address 17.16.1.1 255.255.255.0 Router(config-if)#no shutdown Router(config-if)#end Check IP Addresses for Port 1 Router#show ip interface brief Interface IP-Address OK? Method Status Protocol Ethernet0/0 17.16.1.1 YES manual up up Ethernet0/1 19.86.11.96 YES manual up up\nConfigure DHCP Server Each device that connects to the Internet needs a unique IP address. DHCP enables network administrators to monitor and allocate IP addresses from a central node. When a computer is moved to another location on the network, it can automatically receive a new IP address. From Wiki\n1 2 3 4 5 6 7 8 9 10 11 Router#configure terminal Enter configuration commands, one per line. End with CNTL/Z. Router(config)# Router(config)#ip dhcp excl Router(config)#ip dhcp excluded-address 17.16.1.1 17.16.1.50 Router(config)# Router(config)#ip dhcp pool LAN Router(dhcp-config)#network 17.16.1.0 255.255.255.0 Router(dhcp-config)#default-router 17.16.1.1 Router(dhcp-config)#dns-server 1.1.1.1 Router(dhcp-config)#end Test with Client Computers: NAT(Network Address Translation) Simply put, all devices on the internal network share one external IP address. This is a technology that rewrites the source IP address or destination IP address of IP packets when they pass through a router or firewall. From: Wiki\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Router#enable Router#conf t Enter configuration commands, one per line. End with CNTL/Z. Router(config)#int e0/0 Router(config-if)#ip nat inside Router(config-if)#exit Router(config)#int e0/1 Router(config-if)#ip nat outside Router(config-if)#exit Router(config)# Router(config)# Router(config)#access-list 1 permit 17.16.1.0 0.0.0.255 Router(config)# Router(config)#ip nat inside source list 1 interface ethernet 0/1 overload Router(config)#end Route A router is a networking device that forwards data packets between computer networks. Routers perform the traffic directing functions on the Internet. From Wiki\nDefault Route Configuration A default route is a route that is used by a router when no other known route exists for a given IP address destination.\n1 2 3 4 5 6 Router#enable Router#configure terminal Enter configuration commands, one per line. End with CNTL/Z. Router(config)# Router(config)#ip route 0.0.0.0 0.0.0.0 19.86.11.1 Router(config)#end Check Routes: 1 Router#show ip route Internet Connection Test: Port-Forwarding Port forwarding is a technique that is used to allow external devices access to a specific computer or service within a private local-area network (LAN). It is done by mapping a public IP address to a private IP address and specific port number. From Wiki\nConfiguration In this example, we use port 3389 of Remote Desktop to access the computer (Windows7) with IP address 17.16.1.51 in the internal network.\n1 2 3 4 5 6 Router#enable Router#configure terminal Enter configuration commands, one per line. End with CNTL/Z. Router(config)# Router(config)#ip nat inside source static tcp 17.16.1.51 3389 19.86.11.96 3389 Router(config)#exit Check with Test Finally, remember to \u0026ldquo;save\u0026rdquo; all settings 1 2 3 Router#write memory Building configuration... [OK] Conclusion: Compared with home routers, setting up Cisco routers is more cumbersome because home routers already have default WAN and LAN (bridge) settings, while Cisco routers are based on commercial use, and each configuration step requires a deeper understanding of the network.\n","permalink":"https://www.kingtam.tk/posts/cisco-router-internet/","summary":"Cisco - Router Connect to the Internet","title":"Cisco - Router Connect to the Internet"},{"content":"Introduction: Inter-VLAN Routing means enabling communication between originally isolated vlans, and Router on a Stick (also called single-arm routing) refers to implementing vlan communication on a single port of a router.\nObjective: Configure multiple vlan groups on a single router port and enable communication between different vlans.\nSimulation Scenario: vLan IP(Subnet) vlan10 10.10.10.0/24 vlan20 10.10.20.0/24 PC1 is in vlan10, PC2 is in vlan20, the IPs of the two computers are in different segments, and the router settings allow PC1 and PC2 to communicate with each other.\nRouter Settings (Cisco 2901) 1 2 Router\u0026gt;enable Router#configure terminal Enter Global Configuration Mode\n1 2 3 Router(config)#interface gigabitEthernet 0/1 Router(config-if)#no shutdown Router(config-if)#exit Select physical port 0/1 and enable it\n1 2 3 4 Router(config)#interface gigabitEthernet 0/1.10 Router(config-subif)#encapsulation dot1Q 10 Router(config-subif)#ip address 10.10.10.1 255.255.255.0 Router(config-subif)#exit Configure sub-interface on physical port 0/1\nConfigure 802.1Q protocol and assign vlan10\nSet the IP address of the interface\n1 2 3 4 Router(config)#interface gigabitEthernet 0/1.20 Router(config-subif)#encapsulation dot1Q 20 Router(config-subif)#ip address 10.10.20.1 255.255.255.0 Router(config-subif)#end Configure sub-interface on physical port 0/1\nConfigure 802.1Q protocol and assign vlan20\nSet the IP address of the interface\n1 Router#write memory Save the configuration\nDHCP Server Setup on the Router 1 2 Router\u0026gt;enable Router#configure terminal Enter Global Configuration Mode\n1 2 3 4 5 6 Router(config)#ip dhcp excluded-address 10.10.10.1 10.10.10.50 Router(config)#ip dhcp pool dhcp.vlan10 Router(dhcp-config)#default-router 10.10.10.1 Router(dhcp-config)#network 10.10.10.0 255.255.255.0 Router(dhcp-config)#dns-server 1.1.1.1 Router(dhcp-config)#exit 10.10.10.1 - 10.10.10.50 are reserved IP address segments, not assigned to devices.\nCreate an address allocation pool named dhcp.vlan10\nDefault router IP address 10.10.10.1\nNetwork segment is 10.10.10.0/24\nDNS server is 1.1.1.1\n1 2 3 4 5 6 Router(config)#ip dhcp excluded-address 10.10.20.1 10.10.20.50 Router(config)#ip dhcp pool dhcp.vlan20 Router(dhcp-config)#default-router 10.10.20.1 Router(dhcp-config)#network 10.10.20.0 255.255.255.0 Router(dhcp-config)#dns-server 1.1.1.1 Router(dhcp-config)#exit 10.10.20.1 - 10.10.20.50 are reserved IP address segments, not assigned to devices.\nCreate an address allocation pool named dhcp.vlan20\nDefault router IP address 10.10.20.1\nNetwork segment is 10.10.20.0/24\nDNS server is 1.1.1.1\n1 2 Router(config)#end Router#write memory Save the configuration\nSwitch Settings (Cisco 2960) 1 2 Switch\u0026gt;enable Switch#configure terminal Enter Global Configuration Mode\n1 2 3 Switch(config)#vlan 10 Switch(config-vlan)#name vlan10 Switch(config-vlan)#exit Create and name vlan10\n1 2 3 Switch(config)#vlan 20 Switch(config-vlan)#name vlan20 Switch(config-vlan)#exit Create and name vlan20\n1 2 3 4 Switch(config)#interface fastEthernet 0/1 Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 10 Switch(config-if)#exit Configure port 0/1 in access mode and assign it to vlan10\n1 2 3 4 Switch(config)#interface fastEthernet 0/2 Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 20 Switch(config-if)#exit Configure port 0/2 in access mode and assign it to vlan20\n1 2 3 Switch(config)#interface fastEthernet 0/24 Switch(config-if)#switchport mode trunk Switch(config-if)#exit Configure port 0/24 in trunk mode to connect to the router\n1 2 Switch(config)#end Switch#write memory Save the configuration\nTest Connectivity Connect PC1 to FastEthernet 0/1 and PC2 to FastEthernet 0/5 on the switch. Connect the router\u0026rsquo;s GigabitEthernet 0/1 port to the switch\u0026rsquo;s GigabitEthernet 0/1 port. Set PC1 and PC2 to obtain IP addresses automatically. They should receive IP addresses from their respective DHCP pools.\nPC1 is assigned the IP address 10.10.10.51 (vlan10 network segment)\nPC2 is assigned the IP address 10.10.20.51 (vlan20 network segment)\nTest connectivity between PC1 and PC2 by using the ping command.\nConclusion: We be able to successfully send and receive packets between PC1 and PC2, even though they are on different VLANs. This demonstrates successful inter-VLAN communication using the Router on a Stick method.\n","permalink":"https://www.kingtam.tk/posts/cisco-inter-vlan/","summary":"Cisco - Inter-VLAN Routing (Router on a Stick)","title":"Cisco - Inter-VLAN Routing (Router on a Stick)"},{"content":"About DHCP Relay Agent is the bridge between the client and the DHCP server. Through the DHCP Relay Agent, clients\u0026rsquo; broadcasts can be received across different network segments, allowing the DHCP server to successfully assign IP addresses to clients.\nInfrastructure Configure multiple vlan groups on a single router interface and assign IP addresses through the DHCP server across different vlan groups.\nvLan IP(Subnet) vlan10 192.168.10.0/24 vlan20 192.168.20.0/24 vlan30 192.168.30.0/24 vlan40 192.168.40.0/24 PC1 in vlan10\nPC2 in vlan20\nPC3 in vlan30\nPC0 in vlan40\nDHCP Server (192.168.40.254) in vlan40, clients in all vlan (10, 20, 30, 40) can obtain IP addresses through the DHCP Server in vlan40.\nDHCP Server Configuration Set IP address to 192.168.40.254\nCreate 4 DHCP address pools corresponding to Vlan 10, Vlan 20, Vlan 30, and Vlan 40.\nRouter Configuration (Cisco 2911) 1 2 Router\u0026gt;enable Router#configure terminal Enter Global Configuration Mode\n1 2 3 Router(config)#interface gigabitEthernet 0/0 Router(config-if)#no shutdown Router(config-if)#exit Select physical interface 0/0 and enable it\n1 2 3 4 Router(config)#interface gigabitEthernet 0/0.10 Router(config-subif)#encapsulation dot1Q 10 Router(config-subif)#ip address 192.168.10.1 255.255.255.0 Router(config-subif)#exit Configure sub-interface on physical interface 0/0\nConfigure 802.1Q protocol and assign vlan10\nSet interface IP address ip address 192.168.10.1 255.255.255.0\n1 2 3 4 Router(config)#interface gigabitEthernet 0/0.20 Router(config-subif)#encapsulation dot1Q 20 Router(config-subif)#ip address 192.168.20.1 255.255.255.0 Router(config-subif)#end Configure sub-interface on physical interface 0/0\nConfigure 802.1Q protocol and assign vlan20\nSet interface IP address ip address 192.168.20.1 255.255.255.0\n1 2 3 4 Router(config)#interface gigabitEthernet 0/0.30 Router(config-subif)#encapsulation dot1Q 20 Router(config-subif)#ip address 192.168.30.1 255.255.255.0 Router(config-subif)#end Configure sub-interface on physical interface 0/0\nConfigure 802.1Q protocol and assign vlan30\nSet interface IP address ip address 192.168.30.1 255.255.255.0\n1 2 3 4 Router(config)#interface gigabitEthernet 0/0.40 Router(config-subif)#encapsulation dot1Q 40 Router(config-subif)#ip address 192.168.40.1 255.255.255.0 Router(config-subif)#end Configure sub-interface on physical interface 0/0\nConfigure 802.1Q protocol and assign vlan40\nSet interface IP address ip address 192.168.40.1 255.255.255.0\nConfigure IP Helper (DHCP Relay Agent) 1 2 3 Router(config)#interface gigabitEthernet 0/0.10 Router(config-subif)#ip helper-address 192.168.40.254 Router(config-subif)#exit Add the IP Helper (DHCP Relay Agent) to sub-interface 0/0.10, pointing to the DHCP Server at 192.168.40.254\n1 2 3 Router(config)#interface gigabitEthernet 0/0.20 Router(config-subif)#ip helper-address 192.168.40.254 Router(config-subif)#exit Add the IP Helper (DHCP Relay Agent) to sub-interface 0/0.20, pointing to the DHCP Server at 192.168.40.254\n1 2 3 Router(config)#interface gigabitEthernet 0/0.30 Router(config-subif)#ip helper-address 192.168.40.254 Router(config-subif)#exit Add the IP Helper (DHCP Relay Agent) to sub-interface 0/0.30, pointing to the DHCP Server at 192.168.40.254\n1 2 3 Router(config)#interface gigabitEthernet 0/0.40 Router(config-subif)#ip helper-address 192.168.40.254 Router(config-subif)#exit Add the IP Helper (DHCP Relay Agent) to sub-interface 0/0.40, pointing to the DHCP Server at 192.168.40.254\n1 2 Router(dhcp-config)#end Router#write Save\nSwitch Settings (Cisco 2960-24T) Switch1 1 2 Switch\u0026gt;enable Switch#configure terminal Enter Global Configuration Mode mode\n1 2 3 4 5 Switch(config)#vlan 10 Switch(config-vlan)#vlan 20 Switch(config-vlan)#vlan 30 Switch(config-vlan)#vlan 40 Switch(config-vlan)#exit Create 4 VLANs\n1 2 3 Switch(config)#interface range gigabitEthernet 0/1-2 Switch(config-if-range)#switchport mode trunk Switch(config-if-range)#exit Define ports g0/1 and g0/2 as Trunk mode (*all VLAN data is transmitted through this interface to the client device)\n1 2 3 4 Switch(config)#interface range fastEthernet 0/1-10 Switch(config-if-range)#switchport mode access Switch(config-if-range)#switchport access vlan 10 Switch(config-if-range)#exit Assign ports f0/1-10 to Vlan10\n1 2 3 4 Switch(config)#interface range fastEthernet 0/11-20 Switch(config-if-range)#switchport mode access Switch(config-if-range)#switchport access vlan 20 Switch(config-if-range)#end Assign ports f0/11-20 to Vlan20\n1 Switch#write Save\nSwitch2 1 2 Switch\u0026gt;enable Switch#configure terminal Enter Global Configuration Mode mode\n1 2 3 4 5 Switch(config)#vlan 10 Switch(config-vlan)#vlan 20 Switch(config-vlan)#vlan 30 Switch(config-vlan)#vlan 40 Switch(config-vlan)#exit Create 4 VLANs\n1 2 3 Switch(config)#interface range gigabitEthernet 0/2 Switch(config-if)#switchport mode trunk Switch(config-if)#exit Define port g0/2 as Trunk mode (* connect to port g0/2 of Switch1)\n1 2 3 4 Switch(config)#interface range fastEthernet 0/1-10,f0/24 Switch(config-if-range)#switchport mode access Switch(config-if-range)#switchport access vlan 40 Switch(config-if-range)#exit Assign ports f0/1-10 and f0/24 to Vlan40\n1 2 3 4 Switch(config)#interface range fastEthernet 0/11-20 Switch(config-if-range)#switchport mode access Switch(config-if-range)#switchport access vlan 30 Switch(config-if-range)#end Assign ports f0/11-20 to Vlan30\n1 Switch#write Save\nTest DHCP IP Assignment Now, we can test the DHCP IP assignment by setting the PCs in each VLAN to obtain IP addresses automatically.\nIf the configuration is correct, they should receive IP addresses within their respective VLANs\u0026rsquo; IP ranges from the DHCP Server.\nThe IP address assigned to PC1 is 192.168.10.11 (vlan10 network segment)\nThe IP address assigned to PC2 is 192.168.20.10 (vlan20 network segment)\nThe IP address assigned to PC3 is 192.168.30.10 (vlan30 network segment)\nThe IP address assigned to PC0 is 192.168.40.11 (vlan40 network segment)\nPC1 Ping PC2, PC3, PC0 (can communicate with each other)\nConclusion: In this example configuration, the PCs in vlan10, vlan20, vlan30, and vlan40 have successfully obtained IP addresses from the DHCP Server in vlan40. The IP Helper (DHCP Relay Agent) has successfully helped in relaying the DHCP requests and responses between the clients and the DHCP server across different VLANs.\n","permalink":"https://www.kingtam.tk/posts/cisco-ip-helper/","summary":"Cisco - DHCP Relay Agent (IP Helper)","title":"Cisco - DHCP Relay Agent (IP Helper)"},{"content":"Interduction: All exercises are based on the \u0026ldquo;Cisco Packet Tracer\u0026rdquo; software platform.\nCommand line reset router: 1 R1\u0026gt;enable Enter privilege (enable) mode.\n1 R1#write erase Clear the configuration file (i.e. startup-config) in NVRAM.\nErasing the nvram filesystem will remove all configuration files! Continue? [confirm]\nPress enter to confirm deletion.\nErase of nvram: complete\n1 R1#reload Proceed with reload? [confirm]\nPress enter to confirm device restart.\nAt this point, the router has been reset to the default login screen.\nReference: Reset Router to Default Configuration ","permalink":"https://www.kingtam.tk/posts/cisco-reset/","summary":"Cisco - Reset  Router to Factory Default Settings","title":"Cisco - Reset  Router to Factory Default Settings"},{"content":"Introduction: All exercises are based on the \u0026ldquo;Cisco Packet Tracer\u0026rdquo; software platform.\nConnect to the Cisco device through Console.\nAs the password was forgotten, the Cisco device needs to be restarted manually.\nAfter powering on, press Ctrl + Pause on the keyboard to interrupt the Router boot process and enter ROM Monitor Mode.\nIgnore the NVRAM configuration file (Startup-config) in IOS. Change the value of the configuration register from the default 0x2102 to 0x2142. 1 2 rommon 1 \u0026gt; confreg 0x2142 rommon 2 \u0026gt; reset Use the reset command to reload IOS, which will ignore the NVRAM configuration file due to the value of 0x2142.\nwould you like to enter the initial configuration dialog [yes/no]:\nEnter no and press enter.\n1 2 Router\u0026gt;enable Router#copy startup-config running-config Restore the settings of the Cisco device prior to recovery.\n1 R1#show running-config View the device settings, mainly to check the privilege and local account information.\nThere is a privilege (enable) mode password set.\nA local account with the username \u0026ldquo;cisco\u0026rdquo; and an encrypted password is set.\n1 2 3 4 R1#configure terminal R1(config)#enable secret ccna R1(config)#username cisco secret ccna R1(config)#exit Reset the privilege mode (enable) password and the local account (cisco) password.\n1 R1#show version Check the device version.\nThe value of the configuration register is 0x2142.\n1 2 3 R1#configure terminal R1(config)#config-register 0x2102 R1(config)#exit Restore the value of the configuration register to 0x2102.\n1 R1#show version Check the device version again to confirm.\n1 R1#copy running-config startup-config Write the updated configuration values back to the startup configuration (i.e. save settings).\n1 R1#reload Restart the device.\nThe newly set password can be used to log in to the device.\nReference: 【CCNA】Cisco Router 忘記密碼 - 密碼復原 ","permalink":"https://www.kingtam.tk/posts/cisco-passwd-recovery/","summary":"Cisco - Password Recovery","title":"Cisco - Password Recovery"},{"content":"Cisco - Enable SSH login Setting the Enable Mode Password 1 (Config)#enable secret ccna To enable login access to the vty lines, you must first set the password for the enable mode. Otherwise, you will not be able to enter the enable mode after logging in.\nConfigure a Domain Name 1 (config)#ip domain-name ccna.com Using ip domain-name to setup domain name ccna.com\nGenerate an RSA key pair 1 (config)#crypto key generate rsa How many bit in the modulus[512]:1024\nUsing 1024-bit encryption (default is 512).\nEnable SSH Connection 1 (config)#ip ssh version 2 Specify the version of SSH is 2\nCreate Local Account 1 (config)#username cisco privilege 15 secret ccna Command Description username cisco secret ccna Create a user account with the username “cisco” and a secret password of “ccna”. privilege 15 Set the user account to the highest privilege level (i.e., level 15), which provides full access to all commands on the device. Configure the VTY lines to use SSH 1 (config)#line vty 0 4 Enabling 0-4 VTY connections (i.e., maximum of 5 simultaneous connections).\nUse the local account for authentication 1 (config-line)#login local Use the local username and password\nUse SSH transport 1 (config-line)#transport input ssh Save the configuration 1 2 end copy running-config startup-config Testing SSH Connection 1 #ssh -l cisco 10.255.255.254 Test logging in to another Cisco device.\n10.255.255.254 is the IP address of the router.\nOr use a Windows SSH terminal.\nAfter completing these steps, you should be able to SSH into the Cisco device using the configured username and password.\nReference: Cisco基本指令-啟用SSH ","permalink":"https://www.kingtam.tk/posts/cisco-ssh/","summary":"Cisco - Enable SSH Login","title":"Cisco - Enable SSH Login"},{"content":"Cisco - Enable Password Protection Introduction: All of the commands were tested on \u0026lsquo;Cisco Packet Tracer\u0026rsquo;.\nSimulating a Console Connection Device Renaming (Option) 1 2 3 Router\u0026gt;enable Router#configure terminal Router(config)#hostname R1 Command Description enable Enter privilege EXEC mode, which provides access to all the commands in the Cisco IOS software. configure terminal Enter global configuration mode, which provides access to the configuration commands that affect the entire network device. hostname R1 Set the hostname of the device to \u0026ldquo;R1\u0026rdquo;. Setup Password 1 R1(config)#enable secret ccna This command sets the enable secret password to \u0026ldquo;ccna\u0026rdquo;. The enable secret password is used to control access to privileged EXEC mode.\n1 2 3 4 5 6 R1(config)#line console 0 R1(config-line)#password cisco R1(config-line)#login\t#tell the device use password to connect the console R1(config-line)#exit R1(config)#service password-encryption\t#encryption the password R1#exit Command Description line console 0 Configure the settings for the console port. password cisco Set the password for the console port to \u0026ldquo;cisco\u0026rdquo;. login Enable login authentication on the console port. exit Exit from the current configuration mode. service password-encryption Encrypt all plaintext passwords, including the enable secret password and the console port password. 1 2 R1(config)#exit R1#write memory Command Description write memory Save the configuration changes to the device\u0026rsquo;s non-volatile memory. exit Exit from the privilege EXEC mode and return to user EXEC mode. Verify Login Via Password User Access Verification\nPassword: cisco\n1 R1\u0026gt;enable Password:ccna\nCreate Local Account Create Console\u0026rsquo;s Account and Password\n1 2 3 4 5 6 7 R1#enable R1#configure terminal R1(config)#username cisco secret ccna R1(config)#line console 0 R1(config-line)#login local R1(config-line)#end R1\u0026gt;logout Command Description username cisco secret ccna Create a user account with the username \u0026ldquo;cisco\u0026rdquo; and a secret password of \u0026ldquo;ccna\u0026rdquo;. line console 0 Configure the settings for the console port. login local Enable local authentication for login on the console port. end Exit from the current configuration mode and return to privileged EXEC mode. logout Logout from the current session and terminate the connection to the device. Verify Local Account Login User Access Verification\nUsername:cisco\nPassword:ccna\n1 R1\u0026gt;enable Password:ccna\nRemove Password Protection 1 2 3 R1\u0026gt;enable R1#configure terminal (Config)#no enable secret Command Description no enable secret Remove the enable secret password from the device configuration. 1 R1(config)#no username cisco Command Description no username cisco Remove the user account with the username \u0026ldquo;cisco\u0026rdquo; from the device configuration. Setup the console port to time out\n1 2 3 (config)#line console 0 (config-line)#exec-time 00 00 (config-line)#exec-time 02 30 Command Description line console 0 Configure the settings for the console port. exec-time 00 00 Set the console port to never time out. exec-time 02 30 Set the console port to time out after 2 hours and 30 minutes of inactivity. Prevents logging messages from interrupting command entry\n1 2 (config)#line console 0 (config-line)#logging synchronous Command Description logging synchronous Enable synchronous logging mode on the console port. Reference: Cisco基本指令-密碼設定 ","permalink":"https://www.kingtam.tk/posts/cisco-passwd/","summary":"Cisco - Enable Password Protection","title":"Cisco - Enable Password Protection"},{"content":"Deploy a Virtual Machine from an OVA File in the VMware ESXi\nWeb Deploy Limitation OVA deployment is limited to files under 1 GB in size due to Web browser limitations. To deploy an OVA file greater than 1 GB, extract the OVA file using tar and provide the OVF and VMDK files separately.\nBreakdown Limitation To deploy a large OVA file, Use OVFTool Command to Deploy OVA Packages is better solution.\nDeploy a VM via OVFTOOL In this scenario, OVFTool has been installed in windows OS. Open command prompt and run as administrator. go to the VMware OVF Tool directory \u0026ldquo;C:\\Program Files\\VMware\\VMware OVF Tool\u0026rdquo;\nRun the command syntax to deploy OVA\n1 ovftool --sourceType=OVA --acceptAllEulas --X:skipContentLength --disableVerification --noSSLVerify -ds=DataStore -n=NEWVM --net:\u0026#34;network=VM Network\u0026#34; \u0026#34;D:\\tmp\\OVA_import\\a-large-ova-file.ova\u0026#34; vi://root:\u0026#34;P@ssw0rd\u0026#34;@10.10.10.254 Option Argument Description ovftool N/A Command to invoke the OVF Tool. --sourceType OVA Specifies the type of the source file. In this case, it is an OVA file. --acceptAllEulas N/A Skips the end user license agreement (EULA) acceptance prompt. --X:skipContentLength N/A Skips the content length check during upload. --disableVerification N/A Disables SSL certificate verification. --noSSLVerify N/A Disables SSL certificate verification. -ds DataStore Specifies the name of the destination datastore. -n NEWVM Specifies the name of the new virtual machine. --net \u0026quot;network=VM Network\u0026quot; Specifies the name of the network to which the virtual machine will be connected. \u0026quot;D:\\tmp\\OVA_import\\a-large-ova-file.ova\u0026quot; N/A Specifies the path to the OVA file to be imported. vi://root:\u0026quot;P@ssw0rd\u0026quot;@10.10.10.254 N/A Specifies the target location of the new virtual machine. Note: The values for DataStore, NEWVM, VM Network, and the target location may vary depending on the specific environment and requirements.\nNo network mapping issue This problem occurred because we didn\u0026rsquo;t know the OVA network or didn\u0026rsquo;t remember it, which caused the network mapping issue.\nOpening OVA source: D:\\tmp\\OVA_import\\a-large-ova-file.ova The manifest validates Opening VI target: vi://root@10.10.10.254:443/ Error: Invalid OVF name (data mgmt) specified in net mapping. OVF networks: data mgmt. Target networks: CVM_Payload VM Network VM Network 2 svm-iscsi-pg Completed with errors\nRe-mapping the network The fix involves specifying the correct network names in the mapping using the \u0026ndash;net option. To do this, use the syntax \u0026ndash;net:\u0026quot;ovf_network_name=target_network_name\u0026quot;.\n1 --net:\u0026#34;data=VM Network\u0026#34; --net:\u0026#34;mgmt=VM Network 2\u0026#34; In this case, the OVA network names are \u0026ldquo;data\u0026rdquo; and \u0026ldquo;mgmt\u0026rdquo;, which should be mapped to \u0026ldquo;VM Network\u0026rdquo; and \u0026ldquo;VM Network 2\u0026rdquo;.\nRun the correct (final) command syntax to deploy OVA\n1 C:\\Program Files\\VMware\\VMware OVF Tool\u0026gt;ovftool --sourceType=OVA --acceptAllEulas --X:skipContentLength --disableVerification --noSSLVerify -ds=DataStore -n=NEWVM --net:\u0026#34;data=VM Network\u0026#34; --net:\u0026#34;mgmt=VM Network 2\u0026#34; \u0026#34;D:\\tmp\\OVA_import\\a-large-ova-file.ova\u0026#34; vi://root:\u0026#34;P@ssw0rd\u0026#34;@10.10.10.254 Opening OVA source: D:\\tmp\\OVA_import\\a-large-ova-file.ova The manifest validates Opening VI target: vi://root@10.10.10.254:443/ Deploying to VI: vi://root@10.10.10.254:443/ Transfer Completed Completed successfully\nReference Deploy a Virtual Machine from an OVF or OVA File in the VMware Host Client OVFTOOL Download OVF Tool Command Syntax to Export and Deploy OVA/OVF Packages (1038709) OVFtool error: No network mapping specified Related Manual Upgrade ESXi from 6.7 to 8.0 via esxcli Renew DNS Servers in VMWare ESXi via ESXCLI Commands Deploy a Virtual Machine from an OVA File in the VMware ESXi Export VM to OVA using OVF Tool on VMware ESXi ","permalink":"https://www.kingtam.tk/posts/esxi-deploy-vm/","summary":"Deploy a Virtual Machine from an OVA File in the VMware ESXi\nWeb Deploy Limitation OVA deployment is limited to files under 1 GB in size due to Web browser limitations. To deploy an OVA file greater than 1 GB, extract the OVA file using tar and provide the OVF and VMDK files separately.\nBreakdown Limitation To deploy a large OVA file, Use OVFTool Command to Deploy OVA Packages is better solution.","title":"Deploy a Virtual Machine from an OVA File in the VMware ESXi"},{"content":"Set Git-Bash as Default Shell in Windows Terminal Why Git Bash Both Command Prompt (CMD) and Unix (Bash) commands can be run in Git Bash. Small and Fast. Prerequisites Windows Terminal\nInstall Windows Terminal from the Microsoft Store.\nChocolatey\nChocolatey has the largest online registry of Windows packages. Installing Chocolatey\nGit Bash\nEasy way to install Git Bash via Chocolatey.\n1 choco install git -y Add Git Bash to Windows Terminal Generate a new GUID\nRun the following command in PowerShell.\n1 [guid]::NewGuid() Added to Windows Terminal profile Go to Windows Terminal settings via shortcut key Ctrl + ,\n1 2 3 4 5 6 7 8 9 { \u0026#34;antialiasingMode\u0026#34;: \u0026#34;cleartype\u0026#34;, \u0026#34;commandline\u0026#34;: \u0026#34;%PROGRAMFILES%/Git/usr/bin/bash.exe -i -l\u0026#34;, \u0026#34;guid\u0026#34;: \u0026#34;{f9934442-d71c-40b6-b804-717659fa8640}\u0026#34;, \u0026#34;historySize\u0026#34;: 3000, \u0026#34;icon\u0026#34;: \u0026#34;%PROGRAMFILES%/Git/mingw64/share/git/git-for-windows.ico\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Git-Bash\u0026#34;, \u0026#34;startingDirectory\u0026#34;: \u0026#34;%USERPROFILE%\u0026#34; } The GUID f9934442-d71c-40b6-b804-717659fa8640 is previous command generated.\nSet \u0026ldquo;Git Bash\u0026rdquo; as the default terminal Save the Settings.\nReference: Generate a GUID in Windows 10 How to add Git Bash to Windows Terminal Windows Terminal\u0026rsquo;s 設定 Git Bash 和 SSH\nRelated: Linux Terminal Tab Completion Set Git-Bash as Default Shell in Windows Terminal ","permalink":"https://www.kingtam.tk/posts/windows-git/","summary":"Set Git-Bash as Default Shell in Windows Terminal","title":"Set Git-Bash as Default Shell in Windows Terminal"},{"content":"Linux Terminal Tab Completion About: Tab completion is a feature in the Linux terminal that allows you to quickly complete file and directory names, command names, and other items by pressing the \u0026ldquo;Tab\u0026rdquo; key.\nSteps of Config: Tab completion can be customized and extended by modifying the .inputrc file\nCreate an \u0026ldquo;.inputrc\u0026rdquo; file in the user\u0026rsquo;s home directory. 1 touch .inputrc Case-sensitive auto-completion 1 vim .inputrc Enter set completion-ignore-case on\n:wq save and exit\nDisplay all possible choices 1 vim .inputrc Enter set show-all-if-ambiguous on\n:wq save and exit\nUsing the Alternative Config In fact, this command can be used to do it all.\n1 2 3 4 cat \u0026gt;\u0026gt; \u0026#34;.inputrc\u0026#34; \u0026lt;\u0026lt; EOF set completion-ignore-case on set show-all-if-ambiguous on EOF Close the terminal and reopen the terminal. Conclusion: Tab completion can also be used with options and arguments of commands. For example, you can type \u0026ldquo;ls -\u0026rdquo; and then press \u0026ldquo;Tab\u0026rdquo; to see a list of available options for the \u0026ldquo;ls\u0026rdquo; command.\nRelated: Linux 的命令基本用法 - vim 編輯器 Set Git-Bash as Default Shell in Windows Terminal Linux Terminal Tab Completion Alpine Linux Customizations ","permalink":"https://www.kingtam.tk/posts/linux-inputrc/","summary":"Tab completion is a feature in the Linux terminal that allows you to quickly complete file and directory names","title":"Linux Terminal Tab Completion"},{"content":"img from unsplash\nThese are the basic steps to set up and use an rsync tool for synchronization on Windows.\nRSYNC Server Setup RSYNC Server on Windows i. Manual Setup Install RSYNC on the server machines. Install Rsync software like a linux through Chocolatey 1 choco install rsync -y On the server, create a folder to share 1 mkdir -p C:\\rsync_share e.g. C:\\rsync_share. as rsync share folder.\nOn the server,Create the C:\\rsync\\rsyncd.conf file with the following contents: 1 2 3 4 5 6 [rsync_share] path = /cygdrive/c/rsync_share use chroot = no ignore errors read only = no list = yes This configures the share name as \u0026ldquo;rsync_share\u0026rdquo; pointing to the C:\\rsync_share folder.\nUse cygdrive path prefix as /cygdrive/c/rsync_share\nOn the server, open PowerShell and run the rsync daemon: 1 rsync --daemon --config=C:\\rsync\\rsyncd.conf This will run the rsync daemon using the config file C:\\rsync\\rsyncd.conf.\nYou may need to configure firewall rules on the server to allow incoming TCP connections to port 873\n(The rsync daemon default port).\nRsync service is set to run automatically on startup on the server via \u0026ldquo;Task Scheduler\u0026rdquo;.\nii. Automatic via Script Here are Windows scripts to automatically install rsync, configure it, and open the firewall port:\nUpdate Policy to allow execute self PowerShell script. 1 Set-ExecutionPolicy RemoteSigned Execution Policy Change The execution policy helps protect you from scripts that you do not trust. Changing the execution policy might expose you to the security risks described in the about_Execution_Policies help topic at https:/go.microsoft.com/fwlink/?LinkID=135170. Do you want to change the execution policy? [Y] Yes [A] Yes to All [N] No [L] No to All [S] Suspend [?] Help (default is \u0026ldquo;N\u0026rdquo;): y\nCreate Windows PowerShell Script Save all below content to a PowerShell script as names \u0026ldquo;rsync-config.ps1\u0026rdquo;\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 # Create rsync config and share folders New-Item -Path C:\\rsync -ItemType Directory New-Item -Path C:\\rsync_share -ItemType Directory # Create rsync.conf file @\u0026#34; [rsync_share] path = /cygdrive/c/rsync_share ignore errors read only = no list = yes auth users = rsync secrets file = /cygdrive/c/rsync/rsync.passwd \u0026#34;@ | Add-Content -Path C:\\rsync\\rsyncd.conf # Open port 873 for rsync New-NetFirewallRule ` -Name \u0026#34;Rsync Daemon (873)\u0026#34; ` -DisplayName \u0026#34;Rsync Daemon (873)\u0026#34; ` -Protocol TCP ` -LocalPort 873 # Create scheduled task to run rsync daemon $Trigger = New-ScheduledTaskTrigger -AtStartup $Action = New-ScheduledTaskAction ` -Execute \u0026#34;Powershell.exe\u0026#34; ` -Argument \u0026#34;rsync --daemon --config=C:\\rsync\\rsyncd.conf\u0026#34; Register-ScheduledTask ` -TaskName \u0026#34;Rsync Daemon\u0026#34; ` -Trigger $Trigger ` -Action $Action ` -RunLevel Highest ` -User System Parameter Description Path rsync Configuration folder for rsync C:\\rsync\\ rsync_share Shared folder for rsync C:\\rsync_share\\ /cygdrive/c/rsync_share Cygwin path prefix up to the shared folder location C:\\rsync_share\\ auth users = rsync Specifies that only the \u0026ldquo;rsync\u0026rdquo; user can connect secrets file = /cygdrive/c/rsync/rsync.passwd Specifies the location of the password file that will be used for authenticating rsync connections. C:\\rsync\\rsync.passwd The format of the rsync password file(C:\\rsync\\rsync.passwd) is as follows:\n1 username:password username: This is the username for the rsync account. password: This is the password for the rsync account. Each line in the file represents a single rsync account. Create multiple accounts by adding additional lines to the file.\nExecute the PowerShell Script run on Windows server to automatically setup rsync daemon, create share folder names \u0026ldquo;rsync_share\u0026rdquo; and configure the firewall. moreover, the rsync service startup on reboot.\nRSYNC Client Setup RSYNC Client on Windows Install RSYNC on the client machines. Install Rsync software like a linux through Chocolatey\n1 choco install rsync -y Operating i. Manual On the client PC, create a folder to store rsync data\n1 mkdir -p C:\\rsync_client Directory: C:\\ Mode LastWriteTime Length Name\nd\u0026mdash;\u0026ndash; 7/11/2023 12:46 PM rsync_client\nFor example:\nTo sync files from client to server (PUSH):\n1 rsync -avz /cygdrive/c/rsync_client rsync://server_ip_address/rsync_share To sync files from server to client (PULL):\n1 rsync -avz rsync://server_ip_address/rsync_share /cygdrive/c/rsync_client To sync files from server to client with --progress flag on Linux\n1 rsync -avz --progress --update --chmod=ugo=rwX --delete rsync://server_ip_address/rsync_share ./rsync_client To sync files from client to server with --password-file flag on Linux\n1 rsync -avz --password-file=\u0026lt;(echo \u0026#34;your_password\u0026#34;) /cygdrive/c/rsync_client rsync://server_ip_address/rsync_share Option Description -a Enables archive mode -v Enables verbose output -z Enables compression --progress Displays progress during the transfer --update Skips files that are newer on the destination --chmod=ugo=rwX Sets permissions of synced files --delete Removes files on the destination that do not exist on the source rsync://server_ip_address/rsync_share Specifies the remote directory as rsync_share ./ClientFolder Specifies the current directory on the local machine i. Automatic via Script Update Policy to allow execute self PowerShell script.\n1 Set-ExecutionPolicy RemoteSigned Create Windows PowerShell Script Save all below content to a PowerShell script as names \u0026ldquo;rsync-client.ps1\u0026rdquo;\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 # Set variables $RsyncPullFolder = \u0026#34;C:\\rsync_pull\u0026#34; $RsyncConfigFolder = \u0026#34;C:\\rsync\u0026#34; $Source = \u0026#34;/cygdrive/c/rsync_pull\u0026#34; $Destination = \u0026#34;rsync_server_ip::share\u0026#34; $Username = \u0026#34;rsync\u0026#34; $Password = \u0026#34;P@ssw0rd123!\u0026#34; $TaskName = \u0026#34;Rsync Pull\u0026#34; $TriggerTime = \u0026#34;08:00\u0026#34; # Check if rsync_pull and rsync folders exist, and create them if they don\u0026#39;t if (!(Test-Path $RsyncPullFolder)) { New-Item -ItemType Directory -Path $RsyncPullFolder } if (!(Test-Path $RsyncConfigFolder)) { New-Item -ItemType Directory -Path $RsyncConfigFolder } New-Item -Path \u0026#34;$RsyncConfigFolder\u0026#34; -Name \u0026#34;rsync.passwd\u0026#34; -ItemType \u0026#34;File\u0026#34; Add-Content -Path \u0026#34;$RsyncConfigFolder\\rsync.passwd\u0026#34; -Value \u0026#34;$Password\u0026#34; # Build rsync command $RsyncCommand = \u0026#34;rsync -avz --progress --update --chmod=ugo=rwX --delete --password-file=/cygdrive/c/rsync/rsync.passwd $Username@$Destination $Source\u0026#34; # Create scheduled task to run rsync command $Trigger = New-ScheduledTaskTrigger -Daily -At $TriggerTime $Action = New-ScheduledTaskAction -Execute \u0026#34;Powershell.exe\u0026#34; -Argument \u0026#34;$RsyncCommand\u0026#34; Register-ScheduledTask -TaskName $TaskName -Trigger $Trigger -Action $Action -RunLevel Highest -User \u0026#34;SYSTEM\u0026#34; Variable Description $RsyncPullFolder Specifies the download directory on the local machine $RsyncConfigFolder Specifies the config file storage directory on the local machine $Source Specifies the source directory on the local machine $Destination Specifies the destination directory on the remote server $Username Specifies the username of the rsync user on the remote server $Password Specifies the password for the rsync user on the remote server $TaskName Specifies the name of the scheduled task $TriggerTime Specifies the time when the scheduled task will run This script runs on a Windows client and automatically sets up an rsync schedule, creates an rsync folder named \u0026lsquo;rsync_pull\u0026rsquo;, and configures the username and password for authorization.\nConclusion rsync can be a reliable and efficient solution for file synchronization on Windows, with its ability to preserve file attributes, compress data during transfer, and show verbose output.\nTo use rsync on Windows, you can install a version of rsync compatible with Windows, configure your system\u0026rsquo;s firewall and network settings, and create a configuration file to specify the files and directories to be synced.\nReference How-to Run a PowerShell Script The cygdrive path prefix Related RSYNC USAGE ","permalink":"https://www.kingtam.tk/posts/rsync-windows/","summary":"Synchronization Solution on Windows (RSYNC)","title":"Synchronization Solution on Windows (RSYNC)"},{"content":"Introduction Rsync is an open-source application that provides fast incremental or mirror backup by leveraging built-in data deduplication algorithms. It is included in almost all Linux distributions.\nFeatures Can update whole directory trees and filesystems Optionally preserves symbolic links, hard links, file ownership, permissions, devices and times Requires no special privileges to install Internal pipelining reduces latency for multiple files Can use rsh, ssh or direct sockets as the transport Supports anonymous rsync which is ideal for mirroring Basic Use 1 rsync -option source/ destination/ Option Description -v Verbose mode, outputs detailed information -r Recurse into directories -a Archive mode (-rlptgoD, no -A, -X, -U, -N, -H) -h Output numbers in a human-readable format -z Use compression to transfer data -e Specify the remote shell to use -P Same as \u0026ndash;partial \u0026ndash;progress -W Copy files whole (without delta-xfer algorithm) \u0026ndash;progress Show progress during transfer \u0026ndash;delete Delete extraneous files from destination directories \u0026ndash;remove-source-files Sender removes synchronized files (non-dir) \u0026ndash;exclude=PATTERN Exclude files matching PATTERN \u0026ndash;include=PATTERN Don\u0026rsquo;t exclude files matching PATTERN \u0026ndash;copy-as=USER[:GROUP] Specify user and optional group for the copy \u0026ndash;chmod=CHMOD Affect file and/or directory permissions Samples 1 rsync -avh /home/user/data/ /mnt/backup Copy /home/user/data/ (as source directory) to /mnt/backup (as destination directory), using the options -avh.\nRsync Server Setup Rsync can be used not only for local backups, but also to transfer data between different OSes (e.g. Windows, macOS, Linux, etc.). It can push data to a remote host (for backup) or pull from a remote host (for restore). However, an rsync daemon needs to be set up on one side.\n1. Set up Rsync Daemon on OpenWRT (Typical) Install Rsync Daemon:\n1 opkg update \u0026amp;\u0026amp; opkg install rsyncd Two files are required:\nFile Description /etc/rsyncd.conf Rsyncd config file /etc/rsyncd.secrets Rsyncd authentication password file For the rsyncd config file:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 cat \u0026gt;\u0026gt; /etc/rsyncd.conf \u0026lt;\u0026lt; EOF # /etc/rsyncd.conf # Minimal configuration for rsync daemon # Next line required for init script pid file = /var/run/rsyncd.pid log file = /var/log/rsyncd.log use chroot = no uid = nobody gid = nogroup read only = no [Tools] path = /mnt/Tools comment = Shared Tools Folder over Rsync read only = no auth users = user01 secrets file = /etc/rsyncd.secrets [Media] path = /mnt/Media comment = Shared Media Folder over Rsync read only = no auth users = user02 secrets file = /etc/rsyncd.secrets EOF Two directory folders named Tools and Media are set up for sharing, and the users user01 and user02 are specified for each share.\nFor the rsyncd authentication password:\n1 2 3 4 cat \u0026gt;\u0026gt; /etc/rsyncd.secrets \u0026lt;\u0026lt; EOF user01:P@ssw0rd01 user02:P@ssw0rd02 EOF This defines two users and their passwords.\n(OPTIONAL) Generating a Random Password with ‘OpenSSL’\nTo generate a pseudo-random password, we can use the OpenSSL via syntax:\n1 $ openssl rand -base64 30 -base64 option is used for encoding the output with length 30 characters.\nAssign permissions to the password file:\n1 chmod 600 /etc/rsyncd.secrets This avoids the error \u0026quot;@ERROR: auth failed on module\u0026quot; for security.\nRestart the rsyncd service:\n1 /etc/init.d/rsyncd restart Or reboot.\n2. Set up Rsync Daemon on OMV (OpenMediaVault) To enable the Rsync Daemon Server:\nAdd a share folder named \u0026ldquo;Media\u0026rdquo;\nCreate an account for authorization\n3. Set up Rsync Daemon on DSM (Synology) Enable rsync service\nGo to Control Panel \u0026gt; File Services \u0026gt; rsync, and tick Enable rsync service.\nEnabling rsync Accounts\nGo to Control Panel \u0026gt; File Services \u0026gt; rsync, and tick Enable rsync account. Click Edit rsync Account \u0026gt; Add to configure users Assign user \u0026quot;rsync\u0026quot; to directory and privileges\nRsync Client Setup Rsync is not only useful for local backups, but it can also be used to transfer data between different OS such as Windows, macOS, and Linux. You can use PUSH (backup to remote) or PULL (backup to local), but a server daemon is required.\n1. Set up Rsync client on OpenWRT (Typical) To install the rsync service:\n1 opkg update \u0026amp;\u0026amp; opkg install rsync To backup using interactive mode:\n1 2 3 rsync -avz /mnt/Tools/ user01@10.1.1.254::Tools/ ## You will be prompted to insert an authorization password for the user named user01 P@ssw0rd01 Alternatively, create a Rsync password file to store each user\u0026rsquo;s password to avoid having to insert the password each time:\n1 echo \u0026#34;P@ssw0rd01\u0026#34; \u0026gt;\u0026gt; /etc/rsync.passwd The file stored password is \u0026ldquo;P@ssw0rd01\u0026rdquo;.\nYou can create other password files as you have more than one user. For example, /etc/rsync.passwd2, and assign the file 600 permission:\n1 chmod 600 /etc/rsync.passwd To upload local data to a remote server, use the following syntax:\n1 rsync -avz /mnt/Tools/ user01@10.1.1.254::Tools/ --password-file=/etc/rsync.passwd To download files from remote to local:\n1 rsync -avz user02@10.1.1.254::Media/ /mnt/Media/ --password-file=/etc/rsync.passwd 2. Set up Rsync client on OMV (OpenMediaVault) In this screenshot, the remote folder\u0026rsquo;s data (Media) is being downloaded to the local harddisk.\n3. Set up Rsync client on Windows Install Rsync client software like a Linux through Chocolatey:\n1 choco install rsync -y Use the following syntax to transfer files:\n1 2 rsync.exe -avhz --progress --update --chmod=ugo=rwX /cygdrive/c/tools /cygdrive/d/Other/ ## \u0026#34;/cygdrive/c\u0026#34; indicates Driver \u0026#34;C:\\\u0026#34; in Windows Schedule a shell script to run using a CRON job on Linux Create a shell script:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 cat \u0026gt;\u0026gt; /root/rsync_bak.sh \u0026lt;\u0026lt; EOF #!/bin/bash # Variables OPTS=\u0026#34;-avzP --delete\u0026#34; LOG_DIR=\u0026#34;/media/Tools/Tutorial/typecho/DNMP/logs\u0026#34; BASE_DIR=\u0026#34;/media/Tools/Tutorial/typecho/DNMP\u0026#34; REMOTE_DIR=\u0026#34;/Apps/DNMP\u0026#34; HOST=\u0026#34;REMOTE_SERVER_IP\u0026#34; USER=\u0026#34;opc\u0026#34; # Log files APPS_LOG=\u0026#34;--log-file=${LOG_DIR}/Apps_$(date +\u0026#39;%Y-%m-%d-%H-%M-%S\u0026#39;).txt\u0026#34; # Rsync commands rsync $OPTS $APPS_LOG -e ssh ${USER}@${HOST}:${REMOTE_DIR}/apps ${BASE_DIR} # Delete log files older than 30 days find ${LOG_DIR}/*.txt -mtime +30 -exec rm {} \\; EOF Assign execute permission to the shell script:\n1 chmod +x /root/rsync_bak.sh Edit the crontab file to schedule the job:\n1 crontab -e Add the following syntax to the end of the file:\n1 2 0 1 * * * sh /root/rsync_bak.sh 2\u0026gt;\u0026amp;1 ## This will start the job at 1:00 a.m. every day. 3. Others Create a copy of the directory structure from the 2023-2024/ directory in the 2024-2025 directory\n1 rsync -a --include \u0026#39;*/\u0026#39; --exclude \u0026#39;*\u0026#39; 2023-2024/ 2024-2025 Option Description -a \u0026ldquo;archive\u0026rdquo; mode \u0026ndash;include \u0026lsquo;*/\u0026rsquo; includes all directories (*/) \u0026ndash;exclude \u0026lsquo;*\u0026rsquo; excludes all files (*) 2023-2024/ Existing Folder 2024-2025 New Folder Conclusion Rsync is a useful backup tool that provides fast incremental file transfer and supports various types of operating systems.\nFinally, I strongly recommend using the \u0026lsquo;-e ssh\u0026rsquo; option to transfer data with public key, as it provides better security through an encrypted tunnel.\nReference rsync (samba.org) Rsync | DSM - Synology Knowledge Center RSync — openmediavault 6.x.y documentation Linux 使用 rsync 遠端檔案同步與備份工具教學與範例 rsyncd in openWRT | #Villa\u0026rsquo;s syslog (villasyslog.net) Related RSYNC USAGE Synchronization Solution on Windows (RSYNC) ","permalink":"https://www.kingtam.tk/posts/rsync-usage/","summary":"Introduction Rsync is an open-source application that provides fast incremental or mirror backup by leveraging built-in data deduplication algorithms. It is included in almost all Linux distributions.\nFeatures Can update whole directory trees and filesystems Optionally preserves symbolic links, hard links, file ownership, permissions, devices and times Requires no special privileges to install Internal pipelining reduces latency for multiple files Can use rsh, ssh or direct sockets as the transport Supports anonymous rsync which is ideal for mirroring Basic Use 1 rsync -option source/ destination/ Option Description -v Verbose mode, outputs detailed information -r Recurse into directories -a Archive mode (-rlptgoD, no -A, -X, -U, -N, -H) -h Output numbers in a human-readable format -z Use compression to transfer data -e Specify the remote shell to use -P Same as \u0026ndash;partial \u0026ndash;progress -W Copy files whole (without delta-xfer algorithm) \u0026ndash;progress Show progress during transfer \u0026ndash;delete Delete extraneous files from destination directories \u0026ndash;remove-source-files Sender removes synchronized files (non-dir) \u0026ndash;exclude=PATTERN Exclude files matching PATTERN \u0026ndash;include=PATTERN Don\u0026rsquo;t exclude files matching PATTERN \u0026ndash;copy-as=USER[:GROUP] Specify user and optional group for the copy \u0026ndash;chmod=CHMOD Affect file and/or directory permissions Samples 1 rsync -avh /home/user/data/ /mnt/backup Copy /home/user/data/ (as source directory) to /mnt/backup (as destination directory), using the options -avh.","title":"RSYNC USAGE"},{"content":"Manual Upgrade ESXi from 6.7 to 8.0 via esxcli Preparation: Before deploying a host upgrade, ensure that all virtual machines in this host should be shut down and Back Up VMware ESXi Host Configuration.\nDownload the upgrade file from VMware Official There are two types of upgrade files\nThe .iso is bootable and follow instructions. The .zip is upgraded via SSH using CLI commands. In this scenario, I use Offline Bundle (.zip) to upgrade host.\nUpgrade Path Running ESXi 6.7U(1-3) or ESXi 7.0U(1-3), you can upgrade directly from these versions to ESXi 8.0.\nFrom: Product Interoperability Matrix (vmware.com)\nUpgrade Procedure: From ESXi 6.7 to ESXi 6.7U3 Hypervisor Before After ESXi VMware ESXi 6.7.0 6.7.0 Update 3 Upload the upgrade file(ESXi670-201912001.zip) to a datastore\nThe file location: /vmfs/volumes/63abe767-b0668188-650d-005056b5b2ef/ESXi670-201912001.zip\nEnable SSH Service\nPut the node into maintenance mode\nconnect to console via SSH.\n1 vim-cmd hostsvc/maintenance_mode_enter View the image profiles\nConnect to the console via SSH and run the following command to check the image profile.\n1 esxcli software sources profile list -d /vmfs/volumes/63abe767-b0668188-650d-005056b5b2ef/ESXi670-201912001.zip Compared to the existing image profile ESXi-6.7.0-8169922-standard (VMware, Inc.), the upgrade profile name ESXi-6.7.0-20191204001-standard should be selected.\nRun upgrade and append the profile name (ESXi-6.7.0-20191204001-standard) at the end of the command.\n1 esxcli software profile update -d /vmfs/volumes/63abe767-b0668188-650d-005056b5b2ef/ESXi670-201912001.zip -p ESXi-6.7.0-20191204001-standard When see the message: The Update completed successfully\nThe upgrade is completed and a reboot is required for the changes to take effect.\nFinally, exit maintenance mode in the node after reboot.\n1 vim-cmd hostsvc/maintenance_mode_exit From ESXi 6.7U3 to ESXi 7.0 U3 Hypervisor Before After ESXi 6.7.0 Update 3 7.0 Update 3 Upload the upgrade file(VMware-ESXi-7.0U3g-20328353-depot.zip) to a datastore\nThe file location: /vmfs/volumes/63abe767-b0668188-650d-005056b5b2ef/VMware-ESXi-7.0U3g-20328353-depot.zip\nEnable SSH Service\nPut the node into maintenance mode\nconnect to console via SSH.\n1 vim-cmd hostsvc/maintenance_mode_enter View the image profiles\nConnect to the console via SSH and run the following command to check the image profile.\n1 esxcli software sources profile list -d /vmfs/volumes/63abe767-b0668188-650d-005056b5b2ef/VMware-ESXi-7.0U3g-20328353-depot.zip Compared to the existing image profile (Updated) ESXi-6.7.0-20191204001-standard (VMware, Inc.), the upgrade profile name ESXi-7.0U3g-20328353-standard should be selected.\nRun upgrade and append the profile name (ESXi-7.0U3g-20328353-standard) at the end of the command.\n1 esxcli software profile update -d /vmfs/volumes/63abe767-b0668188-650d-005056b5b2ef/VMware-ESXi-7.0U3g-20328353-depot.zip -p ESXi-7.0U3g-20328353-standard When see the message: The Update completed successfully\nThe upgrade is completed and a reboot is required for the changes to take effect.\nFinally, exit maintenance mode in the node after reboot.\n1 vim-cmd hostsvc/maintenance_mode_exit From ESXi 7.0 U3 to ESXi 8.0 Hypervisor Before After ESXi 7.0 Update 3 8.0 Upload the upgrade file(VMware-ESXi-8.0-20513097-depot.zip) to a datastore\nThe file location: /vmfs/volumes/63abe767-b0668188-650d-005056b5b2ef/VMware-ESXi-8.0-20513097-depot.zip\nEnable SSH Service\nPut the node into maintenance mode\nconnect to console via SSH.\n1 vim-cmd hostsvc/maintenance_mode_enter View the image profiles\nConnect to the console via SSH and run the following command to check the image profile.\n1 esxcli software sources profile list -d /vmfs/volumes/63abe767-b0668188-650d-005056b5b2ef/VMware-ESXi-8.0-20513097-depot.zip Compared to the existing image profile (Updated) ESXi-7.0U3g-20328353-standard (VMware, Inc.), the upgrade profile name ESXi-8.0.0-20513097-standard should be selected.\nIf RAM capacity no match a minimum requires, the upgrade will be failed.\nSo, I Upgrade the RAM from 4 GB to 8 GB\nRun upgrade and append the profile name (ESXi-8.0.0-20513097-standard) at the end of the command.\n1 esxcli software profile update -d /vmfs/volumes/63abe767-b0668188-650d-005056b5b2ef/VMware-ESXi-8.0-20513097-depot.zip -p ESXi-8.0.0-20513097-standard When see the message: The Update completed successfully\nThe upgrade is completed and a reboot is required for the changes to take effect.\nFinally, exit maintenance mode in the node after reboot.\n1 vim-cmd hostsvc/maintenance_mode_exit Conclusions: Using the command line interface to Upgrade by ESXCLI. This method can be used for standalone ESXi hosts and ESXi hosts managed by vCenter.\nRelated: Manual Upgrade ESXi from 6.7 to 8.0 via esxcli Renew DNS Servers in VMWare ESXi via ESXCLI Commands Deploy a Virtual Machine from an OVA File in the VMware ESXi Export VM to OVA using OVF Tool on VMware ESXi ","permalink":"https://www.kingtam.tk/posts/esxi-upgrade/","summary":"Manual Upgrade ESXi from 6.7 to 8.0 via esxcli Preparation: Before deploying a host upgrade, ensure that all virtual machines in this host should be shut down and Back Up VMware ESXi Host Configuration.\nDownload the upgrade file from VMware Official There are two types of upgrade files\nThe .iso is bootable and follow instructions. The .zip is upgraded via SSH using CLI commands. In this scenario, I use Offline Bundle (.","title":"Manual Upgrade ESXi from 6.7 to 8.0 via esxcli"},{"content":"Renew DNS Servers in VMWare ESXi via ESXCLI Commands About Issue If you need to renew DNS servers on an ESXi host and are having trouble finding the DNS field in the ESXi portal, you can use ESXCLI commands to update the DNS servers.\nProcedure Enable SSH Service first on ESXi Open a console or SSH session to the ESXi host. 1 ssh root@esxi_ip_address List Current DNS server IP Address Run the command 1 esxcli network ip dns server list DNSServers: 10.1.1.253, 10.1.1.254\nAdd new DNS server IP address In this scenario, I use 1.1.1.1 and 1.0.0.1 as the new DNS server address.\n1 2 esxcli network ip dns server add --server=1.1.1.1 esxcli network ip dns server add --server=1.0.0.1 Remove the exsiting (old) DNS address Refer to previous list the DNS address (10.1.1.253, 10.1.1.254)\n1 2 esxcli network ip dns server remove --server=10.1.1.253 esxcli network ip dns server remove --server=10.1.1.254 List Current DNS server IP Address after update. 1 esxcli network ip dns server list DNSServers: 1.1.1.1, 1.0.0.1\nFinally diable SSH Service on ESXi Conclusion Using the ESXCLI commands to update DNS servers is particularly useful when the DNS field is not easily accessible in the ESXi portal, or when there are a large number of ESXi hosts to update.\nReference VMWare ESXi ESXCLI Commands to Update Host DNS Servers Related Manual Upgrade ESXi from 6.7 to 8.0 via esxcli Renew DNS Servers in VMWare ESXi via ESXCLI Commands Deploy a Virtual Machine from an OVA File in the VMware ESXi Export VM to OVA using OVF Tool on VMware ESXi ","permalink":"https://www.kingtam.tk/posts/esxi-dns-update/","summary":"Renew DNS Servers in VMWare ESXi via ESXCLI Commands About Issue If you need to renew DNS servers on an ESXi host and are having trouble finding the DNS field in the ESXi portal, you can use ESXCLI commands to update the DNS servers.\nProcedure Enable SSH Service first on ESXi Open a console or SSH session to the ESXi host. 1 ssh root@esxi_ip_address List Current DNS server IP Address Run the command 1 esxcli network ip dns server list DNSServers: 10.","title":"Renew DNS Servers in VMWare ESXi via ESXCLI Commands"},{"content":"Introduction: Usually, IP addresses are dynamically assigned by the router\u0026rsquo;s DHCP server on most network devices. But using a static IP address on the server makes the provided services more stable. If the DHCP server is not working, it will affect the computers in the local area network to obtain IP addresses, thereby affecting access to services, while servers with static IP addresses are not affected, so static IP is also necessary (on devices providing services).\nTable of Contents: Configuring a static IP address in RHEL/CentOS/Fedora: Setting a static IP address in Debian / Ubuntu (versions prior to 17.10): Setting a static IP address in Ubuntu (newer versions): Setting up VLAN in Ubuntu: Setting up Bridge in Debian: Bridge without VLAN Bridge with VLAN Configuring a static IP address in RHEL/CentOS/Fedora: To set a static IP address in RHEL / CentOS / Fedora\nFirst check the local network interface name:\nThe above figure shows that the network interface name of the local machine is eth0, representing the edited network file ifcfg-eth0\nUse nano or vim to edit:\n1 vim /etc/sysconfig/network-scripts/ifcfg-eth0 Make changes to the ifcfg-eth0 file based on your own network:\n1 2 3 4 5 6 7 8 9 10 11 12 13 DEVICE=\u0026#34;eth0\u0026#34; BOOTPROTO=\u0026#34;static\u0026#34; DNS1=\u0026#34;8.8.8.8\u0026#34; DNS2=\u0026#34;1.1.1.1\u0026#34; GATEWAY=\u0026#34;192.168.0.1\u0026#34; HOSTNAME=\u0026#34;linux.kingtam.win\u0026#34; HWADDR=\u0026#34;00:19:99:A4:46:AB\u0026#34; IPADDR=\u0026#34;192.68.0.100\u0026#34; NETMASK=\u0026#34;255.255.255.0\u0026#34; NM_CONTROLLED=\u0026#34;yes\u0026#34; ONBOOT=\u0026#34;yes\u0026#34; TYPE=\u0026#34;Ethernet\u0026#34; UUID=\u0026#34;8105c095-799b-4f5a-a445-c6d7c3681f07\u0026#34; You need to edit the following settings:\nBOOTPROTO is dhcp (default) or static (static) DNS1 and DNS2 can use public DNS services such as 8.8.8.8, 1.1.1.1 Gateway (GATEWAY) is the IP of the router or firewall Host name (HOSTNAME) customizable Network mask (NETMASK) is usually 255.255.255.0 (/24) modify according to your own network parameters IP address (IPADDR) the local IP address ONBOOT whether to start automatically is yes or no Then edit: resolve.conf\nresolve.conf is used to set the definitions of each item when the DNS client requests name resolution.\n1 vim /etc/resolv.conf 1 2 nameserver 8.8.8.8 # Modify with your preferred DNS address nameserver 1.1.1.1 # Modify with your preferred DNS address Use one of the following commands to restart the network and apply all settings:\n1 /etc/init.d/network restart 1 systemctl restart network Setting a static IP address in Debian / Ubuntu (versions prior to 17.10): To set a static IP address in Debian/Ubuntu (versions prior to 17.10), open the following file:\n1 vim /etc/network/interfaces The default is dhcp:\n1 2 no-auto-down eth0 # or possibly auto eth0 iface eth0 inet dhcp Edit using nano or vim, and make changes based on your own network:\n1 2 3 4 5 6 7 no-auto-down eth0 iface eth0 inet static address 192.168.0.100 netmask 255.255.255.0 gateway 192.168.0.1 dns-nameservers 1.1.1.1 dns-nameservers 8.8.8.8 The following settings need to be edited:\nChange iface eth0 inet dhcp (default) to iface eth0 inet static (static) dns-nameservers can have multiple values, such as using public DNS services like 8.8.8.8, 1.1.1.1 gateway is the IP address of the router or firewall netmask is usually 255.255.255.0 (/24), adjust according to your own network parameters address is the IP address of the local machine After saving the interfaces settings, edit /etc/resolv.conf:\n1 2 3 vim /etc/resolv.conf nameserver 8.8.8.8 # Modify with your preferred DNS address nameserver 1.1.1.1 # Modify with your preferred DNS address Use one of the following commands to restart the network and apply all settings:\n1 /etc/init.d/network restart 1 systemctl restart network Setting a static IP address in Ubuntu (newer versions): Starting from Ubuntu 17.10, Netplan is the default network management tool.\nNetwork configuration files are stored in *.yaml files in the directory /etc/netplan/.\nIn my case, it is /etc/netplan/00-installer-config.yaml, and the default content is:\n1 2 3 4 5 network: ethernets: eth0: dhcp4: true version: 2 Edit the 00-installer-config.yaml configuration file using nano or vim:\n1 2 3 4 5 6 7 8 9 10 11 12 network: version: 2 renderer: networkd ethernets: eth0: dhcp4: no addresses: [192.168.1.2/24] routes: - to: default via: 192.168.1.1 nameservers: addresses: [8.8.8.8,1.1.1.1] You need to edit the following settings:\nrenderer: networkd specifies that this interface is managed by the systemd-networkd service dhcp4: no changes to manual static IP address setup addresses the local IP address and network segment nameservers DNS server addresses [8.8.8.8,1.1.1.1] can be multiple IP addresses Save the 00-installer-config.yaml settings.\nApply the network settings using the following command:\n1 netplan apply Setting up VLAN in Ubuntu: In this example, N1 is flashed with Armbian, and the network port is connected to the trunk port of the switch.\nDynamically obtain an IP address The network configuration files are stored in *.yaml files in the /etc/netplan/ directory.\nThe default content of /etc/netplan/armbian-default.yaml is:\n1 2 3 network: version: 2 renderer: NetworkManager Edit the /etc/netplan/armbian-default.yaml configuration file using nano or vim:\n1 2 3 4 5 6 7 8 9 10 11 network: version: 2 renderer: NetworkManager ethernets: eth0: dhcp4: true vlans: vlan.3: id: 3 link: eth0 dhcp4: true The configuration file is written in YAML format, and various settings are included:\nThe \u0026ldquo;version: 2\u0026rdquo; in the first line specifies the YAML version used in this file.\nThe \u0026ldquo;renderer\u0026rdquo; field specifies the network management tool to be used, which in this case is \u0026ldquo;NetworkManager\u0026rdquo;, a popular tool for managing networks on Linux systems.\nIn the \u0026ldquo;ethernets\u0026rdquo; section, the \u0026ldquo;eth0\u0026rdquo; physical interface is configured, and the interface is set to obtain an IPv4 address via DHCP.\nIn the \u0026ldquo;vlans\u0026rdquo; section, the VLAN (Virtual Local Area Network) interface on the \u0026ldquo;eth0\u0026rdquo; network interface is configured. The VLAN ID is 3 and is connected to the physical interface \u0026ldquo;eth0\u0026rdquo; via the \u0026ldquo;link\u0026rdquo; field. The VLAN interface is also configured to obtain an IPv4 address via DHCP.\nThis configuration file sets up a network connection where both the physical interface \u0026ldquo;eth0\u0026rdquo; and the VLAN interface obtain dynamic IP addresses via DHCP.\nSet static IP address 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 version: 2 renderer: NetworkManager ethernets: eth0: dhcp4: false vlans: vlan.3: id: 3 link: eth0 dhcp4: no addresses: [10.3.3.3/24] routes: - to: default via: 10.3.3.1 nameservers: addresses: [8.8.8.8,1.1.1.1] The VLAN configuration sets up a new interface vlan.3 with ID 3 associated with eth0. Its dhcp4 is set to no, with the static IP address 10.3.3.3 and subnet mask 24. The default route is specified through IP address 10.3.3.1, and 8.8.8.8 and 1.1.1.1 are set as DNS servers.\nSetting up Bridge in Debian: Without VLAN\nTo find out the default network interface name of the machine, use the following command:\n1 ip -c route | head -n 1 | cut -d \u0026#39; \u0026#39; -f 5 eth0\nEdit the network interface via text editor\n1 sudo vim /etc/network/interfaces i. As DHCP:\n1 2 3 4 5 6 7 8 9 10 11 12 13 source /etc/network/interfaces.d/* # The loopback network interface auto lo iface lo inet loopback # Wired adapter #1 allow-hotplug eth0 no-auto-down eth0 # Bridge as DHCP auto br0 iface br0 inet dhcp bridge_ports eth0 Then restart the networking service:\n1 sudo systemctl restart networking.service i. As Static:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 source /etc/network/interfaces.d/* # The loopback network interface auto lo iface lo inet loopback # Wired adapter #1 allow-hotplug eth0 no-auto-down eth0 # Bridge setup to static IP auto br0 iface br0 inet static address 10.1.1.10 broadcast 10.1.1.255 netmask 255.255.255.0 gateway 10.1.1.1 bridge_ports eth0 bridge_stp off # disable Spanning Tree Protocol bridge_waitport 0 # no delay before a port becomes available bridge_fd 0 # no forwarding delay Then restart the networking service:\n1 sudo systemctl restart networking.service With VLAN (Advanced Example)\nMake sure the vlan package is installed on the system:\n1 sudo apt install vlan -y If the host is a hypervisor consider adding below sysctl configurations:\n1 2 3 echo \u0026#34;net.ipv4.ip_forward=1\u0026#34; | sudo tee -a /etc/sysctl.conf echo \u0026#34;net.ipv4.conf.all.arp_filter=0\u0026#34; | sudo tee -a /etc/sysctl.conf echo \u0026#34;net.ipv4.conf.all.rp_filter=2\u0026#34; | sudo tee -a /etc/sysctl.conf Load configurations:\n1 $ sudo sysctl -p net.ipv4.ip_forward = 1 net.ipv4.conf.all.arp_filter = 0 net.ipv4.conf.all.rp_filter = 2\nThen modify interfaces configurations:\n1 sudo vim /etc/network/interfaces The interface content is as follow:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 source /etc/network/interfaces.d/* # The loopback network interface auto lo iface lo inet loopback # Wired adapter #1 allow-hotplug eth0 iface eth0 inet manual pre-up ifconfig $IFACE up pre-down ifconfig $IFACE down # VLAN 3 auto eth0.3 iface eth0.3 inet manual # Bridge br0 auto br0 iface br0 inet static bridge_ports eth0.3 bridge_stp off bridge_waitport 0 bridge_fd 0 address 10.3.3.3 netmask 255.255.255.0 gateway 10.3.3.1 dns-nameservers 1.1.1.1 8.8.4.4 Then restart the networking service:\n1 sudo systemctl restart networking.service Conclusion: Each Linux distribution may have different methods for setting a static IP address, but the process is generally similar.\nReference: How to Set Static IP Address and Configure Network in Linux (tecmint.com)\n如何在Ubuntu Server 18.04 LTS中配置靜態IP地址 - soso101 - 博客園 (cnblogs.com)\nCreate Linux Bridge on VLAN Interface in Debian 11/10\n","permalink":"https://www.kingtam.tk/posts/linux-static-ip/","summary":"Introduction: Usually, IP addresses are dynamically assigned by the router\u0026rsquo;s DHCP server on most network devices. But using a static IP address on the server makes the provided services more stable. If the DHCP server is not working, it will affect the computers in the local area network to obtain IP addresses, thereby affecting access to services, while servers with static IP addresses are not affected, so static IP is also necessary (on devices providing services).","title":"Setting a static IP address in Linux"},{"content":"Configuring VLANs on a Host for Proxmox VE In today\u0026rsquo;s increasingly complex networking environments, Virtual Local Area Networks (VLANs) have become a crucial tool for managing network traffic and ensuring optimal performance.\nThis blog post provides a step-by-step guide on configuring VLANs on a host for Proxmox Virtual Environment (VE), a popular open-source virtualization platform.\nWhy use VLANs with Proxmox VE? VLANs allow you to segregate network traffic into isolated broadcast domains, improving security and reducing network congestion. By configuring VLANs on a Proxmox VE host, you can:\nImprove network performance by reducing broadcast traffic. Enhance security by isolating sensitive virtual machines (VMs) and containers. Simplify network management and troubleshooting. Prerequisites Before proceeding, ensure you have the following:\nA Proxmox VE host installed and configured. A managed network switch that supports VLAN tagging (IEEE 802.1Q). Procedures: This guide provides procedures for configuring VLANs on a host for Proxmox Virtual Environment (VE).\nThis guide provides instructions for configuring VLANs, with separate sections for both the command line interface (CLI) and the graphical user interface (GUI).\nThe Command Line Interface (CLI) Configuration Step 1: A Proxmox VE host configurration Edit configuration file for the VLAN interface in /etc/network/interfaces.\n1 vi /etc/network/interfaces The eno1 is a physical network interface and vmbr0 is a Linux Bridge.\nthe following configuration, adjusting the address and gateway parameters as needed\nUse VLAN 2 for the Proxmox VE management IP with VLAN aware Linux bridge\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 auto lo iface lo inet loopback iface eno1 inet manual auto vmbr0.2 iface vmbr0.2 inet static address 10.2.2.254/24 gateway 10.2.2.1 auto vmbr0 iface vmbr0 inet static bridge-ports eno1 bridge-stp off bridge-fd 0 bridge-vlan-aware yes bridge-vids 1-4094 Save the file and exit the editor use :wq\nApply the new configuration by restarting the networking service:\n1 systemctl restart networking Step2: Configure a managed Network Switch In this scenario, use Cisco SG300-10P 10-Port Gigabit Managed Switch.\nThe command \u0026ldquo;enable\u0026rdquo; is used to enter privileged EXEC mode on a Cisco SG300-10 switch, which allows access to configuration and management commands.\n1 enable The subsequent command \u0026ldquo;configuration terminal\u0026rdquo; is used to enter global configuration mode, which allows the user to configure various aspects of the switch\u0026rsquo;s behavior.\n1 configuration terminal The command \u0026ldquo;interface gigabitethernet2\u0026rdquo; is used to select the Gigabit Ethernet interface 2 on the switch for configuration.\nThe command \u0026ldquo;description VMS01\u0026rdquo; is used to assign a description to the selected interface, in this case labeling it as \u0026ldquo;VMS01\u0026rdquo;, which standard for Virtual Machine Server.\nThe command \u0026ldquo;switchport trunk allowed vlan add 2-4,11\u0026rdquo; is used to configure the selected interface as a trunk port and allow traffic from VLANs 2, 3, 4, and 11 to pass through the port. The \u0026ldquo;add\u0026rdquo; keyword specifies that these VLANs should be added to the existing list of allowed VLANs, if any.\n1 2 3 interface gigabitethernet2 description VMS01 switchport trunk allowed vlan add 2-4,11 Step 3: Assign VLAN to VMs or Containers Finally, assign the newly created bridge to your VMs or containers:\nThis sample use container.\nSelect the desired container in the Proxmox VE web interface. Go to the Network tab. Click Edit. Select the bridge (e.g., vmbr0) from the Bridge dropdown menu. Assign a vlan number in VLAN Tag Click OK to apply the changes. Repeat these steps for each container you want to assign to the VLAN.\nno VLAN as PVID vlan1\nGraphical User Interface (GUI) Configuration Step 1: Configure Proxmox VE Network Now, create a new Linux Bridge or Open vSwitch in the Proxmox VE web interface:\nLog in to the Proxmox VE web interface. Go to Datacenter \u0026gt; vms02 (your-node) \u0026gt; System \u0026gt; Network. Click \u0026ldquo;Create \u0026gt; Linux Bridge\u0026rdquo; or \u0026quot; Edit the Existing vmbr0 of Linux Bridge\u0026quot; (depending on your preference). Add the VLAN interface to the Bridge ports field. Step2: Configure a managed Network Switch PVID (Default Vlan ID) as 1\nConfigure the GE2 interface as a Trunk port and allow traffic from VLANs 2, 3, 4, and 11 to pass through the port, with VLAN1 as the Default Vlan without Vlan Tag.\nConclusion By following this guide, you\u0026rsquo;ve successfully configured VLANs on a Proxmox VE host and assigned them to your VMs and containers. This will help you optimize network performance, enhance security, and simplify network management in your virtual environment.\nReference: https://pve.proxmox.com/wiki/Network_Configuration Related: Proxmox VE 01 - 系統安裝篇 遷移 VMware ESXi 的 ova 文件到 Proxmox 7.0 PVE 的 LXC 容器系統安裝 CUPS 軟件，實現多平台共享的印表機 PVE (Proxmox VE) 多網口的識別 Proxmox VE 7 安裝Home Assistant虛擬機系統 Managing LXC in Proxmox Virtual Environment (PVE) 在 Ubuntu 中設置 VLAN ","permalink":"https://www.kingtam.tk/posts/pve-host-vlan/","summary":"Configuring VLANs on a Host for Proxmox VE In today\u0026rsquo;s increasingly complex networking environments, Virtual Local Area Networks (VLANs) have become a crucial tool for managing network traffic and ensuring optimal performance.\nThis blog post provides a step-by-step guide on configuring VLANs on a host for Proxmox Virtual Environment (VE), a popular open-source virtualization platform.\nWhy use VLANs with Proxmox VE? VLANs allow you to segregate network traffic into isolated broadcast domains, improving security and reducing network congestion.","title":"Configuring VLANs on a Host for PVE (Proxmox VE)"},{"content":"PVE (Proxmox VE) Multi-port Identification About: This is a post about network card (multiple ports) identification in the PVE system. Through the ethtool command, you can easily find the corresponding location of each network port.\nOperation Steps: Take Intel EXPI9402PTBLK 82571GB Network Adapter as an example\nInstall the ethtool command\n1 apt update \u0026amp;\u0026amp; apt install ethtool -y ethtool can be used to view network device driver parameters and hardware configuration.\nCheck the device name of the network card in the PVE server\n1 ip -c a Where enp1s0f0 and enp1s0f1 are the two network ports of the network card, corresponding to MAC addresses 00:24:81:7e:ce:cb and 00:24:81:7e:ce:ca respectively.\nMethod A Use ethtool to identify the device name and corresponding network port location in the PVE system.\nEnter the following command to find the physical network port (network port with indicator) of the first device name enp1s0f0\n1 ethtool --identify enp1s0f0 Enter the following command to find the physical network port (network port with indicator) of the second device name enp1s0f1\n1 ethtool --identify enp1s0f1 Method B If the network card does not support the ethtool --identify command (indicator) for identification, the following method can be used.\nEnable the two network ports enp1s0f0 and enp1s0f1 separately\n1 2 ifup enp1s0f0 ifup enp1s0f1 Insert the network cable (Cat5e) into one of the network ports of the network card (Intel EXPI9402PTBLK 82571GB) and the other end of the network cable into another powered network port, such as a switch, router, computer, etc.\nAt this time, enter the command to view the network port status\n1 ethtool enp1s0f0 As shown in the figure, Link detected: yes indicates that the found network port is enp1s0f0.\nOn the contrary, it shows Link detected: no, indicating the network port enp1s0f1 without a cable.\nDevice Location When directly passing a specified network port, ethtool can easily find the location of the network port in the PVE system.\nView all physical network cards and locations of the server\n1 lspci | grep -in \u0026#39;eth\u0026#39; View the location of the first network port enp1s0f0\n1 ethtool -i enp1s0f0 View the location of the second network port enp1s0f1\n1 ethtool -i enp1s0f1 As shown in the figure, the location of the first network port enp1s0f0 is 01:00.0, and the location of the second network port enp1s0f1 is 01:00.1.\nFinally, pass through the specified network card or network port in the virtual machine.\nConclusion: Using ethtool to identify multiple network ports of a network card is really convenient.\nFinally, a corresponding table can be made to facilitate future lookups.\nPhysical Network Card MAC Address PVE Device Name Device Location (for passthrough) VM Name 1st Port 00:24:81:7E:CE:CB enp1s0f0 01:00.0 LAN 2nd Port 00:24:81:7E:CE:CA enp1s0f1 01:00.1 WAN Reference: 圖哥-通用PVE AIO安装教程 Related: Proxmox VE 01 - 系統安裝篇 遷移 VMware ESXi 的 ova 文件到 Proxmox 7.0 PVE 的 LXC 容器系統安裝 CUPS 軟件，實現多平台共享的印表機 Proxmox VE 7 安裝Home Assistant虛擬機系統 Managing LXC in Proxmox Virtual Environment (PVE) Configuring VLANs on a Host for Proxmox VE ","permalink":"https://www.kingtam.tk/posts/pve-network-port/","summary":"PVE (Proxmox VE) Multi-port Identification About: This is a post about network card (multiple ports) identification in the PVE system. Through the ethtool command, you can easily find the corresponding location of each network port.\nOperation Steps: Take Intel EXPI9402PTBLK 82571GB Network Adapter as an example\nInstall the ethtool command\n1 apt update \u0026amp;\u0026amp; apt install ethtool -y ethtool can be used to view network device driver parameters and hardware configuration.","title":"PVE (Proxmox VE) Multi-port Identification"},{"content":"About: WinSW is a utility that allows you to wrap and manage a Windows service for any executable.\nfrpc is a client for the frp (Fast Reverse Proxy) tool, which enables you to expose local servers to the internet.\nProcedure: To set up frpc as a Windows service using WinSW, follow these steps:\nDownload WinSW Download the latest release of WinSW from the releases page. Choose the appropriate executable for your system, either WinSW-x64.exe or WinSW-x86.exe. Rename WinSW executable Rename the downloaded WinSW executable to frpc-winsw.exe. This will be the service wrapper for the frpc executable. Create a configuration file Create a new XML configuration file named frpc-winsw.xml in the same directory as the frpc-winsw.exe. Add the following content to the file: 1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;service\u0026gt; \u0026lt;id\u0026gt;frpc\u0026lt;/id\u0026gt; \u0026lt;name\u0026gt;frpc\u0026lt;/name\u0026gt; \u0026lt;description\u0026gt;frp client service managed by WinSW\u0026lt;/description\u0026gt; \u0026lt;executable\u0026gt;path\\to\\frpc.exe\u0026lt;/executable\u0026gt; \u0026lt;arguments\u0026gt;-c path\\to\\frpc.ini\u0026lt;/arguments\u0026gt; \u0026lt;log mode=\u0026#34;roll-by-size\u0026#34;\u0026gt; \u0026lt;sizeThreshold\u0026gt;10485760\u0026lt;/sizeThreshold\u0026gt; \u0026lt;keepFiles\u0026gt;3\u0026lt;/keepFiles\u0026gt; \u0026lt;/log\u0026gt; \u0026lt;onfailure action=\u0026#34;restart\u0026#34; /\u0026gt; \u0026lt;startmode\u0026gt;Automatic\u0026lt;/startmode\u0026gt; \u0026lt;/service\u0026gt; Replace path\\to\\frpc.exe with the actual path to your frpc.exe file. Replace path\\to\\frpc.ini with the actual path to your frpc.ini configuration file. Install the service Open a command prompt or PowerShell window with administrator privileges. Navigate to the directory containing frpc-winsw.exe and frpc-winsw.xml. Run the following command to install the service: 1 .\\frpc-winsw.exe install Installing service \u0026lsquo;frpc (frpc)\u0026rsquo;\u0026hellip; Service \u0026lsquo;frpc (frpc)\u0026rsquo; was installed successfully.\nStart the service After installing the service, start it by running the following command: 1 .\\frpc-winsw.exe start Service \u0026lsquo;frpc (frpc)\u0026rsquo; was refreshed successfully.\nStarting service \u0026lsquo;frpc (frpc)\u0026rsquo;\u0026hellip; Service \u0026lsquo;frpc (frpc)\u0026rsquo; started successfully.\nAlso, we can restart a Windows service from the command line (alternative)\n1 net stop frpc The frpc service is stopping. The frpc service was stopped successfully.\n1 net start frpc The frpc service is starting. The frpc service was started successfully.\nConclusion: frpc is set up as a Windows service and will automatically start on system boot. You can manage the service using the Services management console or by using the frpc-winsw.exe commands, such as stop, restart, and uninstall.\nReference: WinSW documentation frp documentation. ","permalink":"https://www.kingtam.tk/posts/winsw-frpc/","summary":"About: WinSW is a utility that allows you to wrap and manage a Windows service for any executable.\nfrpc is a client for the frp (Fast Reverse Proxy) tool, which enables you to expose local servers to the internet.\nProcedure: To set up frpc as a Windows service using WinSW, follow these steps:\nDownload WinSW Download the latest release of WinSW from the releases page. Choose the appropriate executable for your system, either WinSW-x64.","title":"Use WINSW To Setup FRP As Windows Service"},{"content":"Installing CUPS on PVE\u0026rsquo;s LXC Container System Introduction: At home, I use a Canon LBP6030 USB printer connected to a Padavan system on a router (Youku1) to enable wireless printing. However, wireless printing can only be achieved on the Windows platform, and on systems such as macOS and IOS from Apple, it cannot be achieved, causing some inconvenience.\nI came across this post on SMZDM N1刷armbian變身打印服務器, which can install CUPS software as a printer server system, and thus the following content was recorded.\nTable of Contents: Requirements Installation of LXC container system (Debian) on PVE Passing through USB ports to LXC Installation of CUPS software and printer driver on LXC (Debian) Installation and printing test on multiple platform systems Installing the printer on Windows 10 Installing the printer on Windows 7 Installing the printer on macOS Installing the printer on Android Installing the printer on Linux (Deepin) Requirements: Platform that can install CUPS software\nSuch as armbian, ubuntu, centos, etc. I chose the Debian Linux platform.\nPrinter driver that supports the platform\nIf the driver that supports the platform can be found on OpenPrinting, this step can be ignored.\nReturn to Table of Contents\nInstallation of LXC container system (Debian) on PVE LXC provides an operating system-level virtualization environment that is installed on a system based on Linux.\nThe free PVE virtual server makes it easy to create a new Linux system (i.e., a canned system) with a shared kernel.\nDownload the CT template:\nCreate the LXC system:\nThe newly created LXC system does not need to be started yet.\nReturn to Table of Contents\nPassing through USB ports to LXC: Connect the USB port of the printer Canon LBP6030 to the USB port of the PVE host.\nUse lsusb to check the connected USB devices:\n1 lsusb We can see that Device 003 on Bus 001 is Canon.\nCheck thedevice number of Canon on the Bus 001:\n1 ls -al /dev/bus/usb/001 Allow LXC to access the USB device on PVE through cgroup.\n1 2 3 4 cat \u0026gt;\u0026gt; \u0026#39;/etc/pve/lxc/100.conf\u0026#39; \u0026lt;\u0026lt; EOF lxc.cgroup2.devices.allow: c 189:* rwm lxc.mount.entry: /dev/bus/usb/001 dev/bus/usb/001 none bind,optional,create=dir EOF The ID of LXC is 100, and the configuration file path is /etc/pve/lxc/100.conf.\nThe device inside 189:* rwm is allowed to be read, written, and mounted.\nMount the entire Bus 001 USB port. The advantage of this is that even if the device number changes due to unplugging the USB port of the printer multiple times, the mounting will not be affected.\nStart the newly created LXC container.\nCheck if it has been mounted in the LXC container\u0026rsquo;s Console:\n1 2 3 dmesg | grep -in \u0026#39;canon\u0026#39; 1617:[3489934.461195] usb 1-1: Manufacturer: Canon,Inc. 1837:[3494585.821378] usb 1-1: Manufacturer: Canon,Inc. Seeing Manufacturer: Canon, Inc. means that the USB printer has successfully connected to the LXC container.\nReturn to Table of Contents\nInstallation of CUPS software and printer driver on LXC (Debian) CUPS (Common UNIX Printing System) is a printing system supported in Fedora Core3 that mainly uses IPP (Internet Printing Protocol) to manage print jobs and queues, but also supports communication protocols such as LPD (Line Printer Daemon), SMB (Server Message Block), and AppSocket. From Baidu\nInstall the CUPS software:\n1 sudo apt update \u0026amp;\u0026amp; sudo apt install -y cups Enable remote access to CUPS:\n1 sudo cupsctl --remote-any Add the current user to the lpadmin group:\n1 sudo usermod -aG lpadmin $USER If the printer that is supported can be found on OpenPrinting, this step can be ignored.\nDownload and install the printer driver for Canon LBP6030:\n1 2 3 4 wget https://gdlp01.c-wss.com/gds/0/0100005950/10/linux-UFRIILT-drv-v500-uken-18.tar.gz \\ \u0026amp;\u0026amp; tar xzvf linux-UFRIILT-drv-v500-uken-18.tar.gz \\ \u0026amp;\u0026amp; sudo dpkg -i ./linux-UFRIILT-drv-v500-uken/64-bit_Driver/Debian/cnrdrvcups-ufr2lt-uk_5.00-1_amd64.deb \\ \u0026amp;\u0026amp; rm -rf linux-UFRIILT-drv-v500-uken linux-UFRIILT-drv-v500-uken-18.tar.gz Enter the following address in a browser: https://10.1.1.253:631/admin/\nThe IP address of the LXC system is: 10.1.1.253\nPrint test page:\nInstalling CUPS software completes the configuration of the printer server system.\nReturn to Table of Contents\nInstallation and testing of printer on multiple platforms After the deployment of CUPS software, multiple platforms can share printers. In the following example, I tested wireless printing functionality on Windows7, Windows10, macOS, iOS, and Android.\nInstalling Printer on Windows 10: Installing Printer through Search Manual Installation of Printer If the printer cannot be found through search or on a different network segment, manual installation of the printer is required.\nOpen the CUPS interface by entering http://10.1.1.253:631 in a browser and copy the path.\nPaste the path # Note that it cannot be https.\nReturn to Table of Contents\nInstalling Printer on Windows 7: Manually install the printer and prepare the corresponding Windows driver in advance.\nNote that the pasted path cannot be https.\nSelect the Windows driver that was prepared in advance.\nReturn to Table of Contents\nInstalling Printer on macOS: Return to Table of Contents\nInstalling Printer on Android: The tested Android device is the OnePlus 6, and the \u0026ldquo;Mopria Print Service\u0026rdquo; app is installed from the software store.\nReturn to Table of Contents\nInstalling Printer on Linux (Deepin): Return to Table of Contents\nConclusion: I believe that the most difficult part is the installation of the printer driver. If the manufacturer and model are found on OpenPrinting, the process should be relatively simple.\nThe advantage of using PVE\u0026rsquo;s LXCcontainer with CUPS installed is that it makes managing printers on a network much easier, especially for multiple users and devices. Overall, the installation process for printers on different operating systems varies, but with the right steps and information, it can be accomplished successfully.\nManually install printers using software like zero-tier, which can enable remote (cross-regional) printing. For example, you can directly access your home printer from work to print documents.\nReferences: USB Passthrough to an LXC (Proxmox)\nOpenPrinting\nN1刷armbian變身列印伺服器，支援全平臺無線列印@PC掃描\n","permalink":"https://www.kingtam.tk/posts/pve-lxc-cups/","summary":"Installing CUPS on PVE\u0026rsquo;s LXC Container System Introduction: At home, I use a Canon LBP6030 USB printer connected to a Padavan system on a router (Youku1) to enable wireless printing. However, wireless printing can only be achieved on the Windows platform, and on systems such as macOS and IOS from Apple, it cannot be achieved, causing some inconvenience.\nI came across this post on SMZDM N1刷armbian變身打印服務器, which can install CUPS software as a printer server system, and thus the following content was recorded.","title":"Installing CUPS on PVE's LXC Container System"},{"content":"We will explore the syntax of managing LXC using PVE. Use commands that are commonly used by system administrators and cover the basics of creating, removing, and managing LXC in PVE.\nWhat\u0026rsquo;s LXC? LXC is a user space interface for the Linux kernel containment features. Through a powerful API and simple tools, it lets Linux users easily create and manage system or application containers.\nTemplate Image Creating an LXC in PVE is to download a template image. A template image is a preconfigured image of an operating system that can be used to create new LXC quickly.\nThe first step update container template database:\n1 pveam update List available images:\n1 pveam available Also filter the output:\n1 pveam available --section system The following command downloads a template image of an Ubuntu 22.04 operating system and saves it in the storage pool named \u0026ldquo;volume01\u0026rdquo;:\n1 pveam download volume01 vztmpl/ubuntu-22.04-standard_22.04-1_amd64.tar.zst Listing Template Images To see a list of all the template images stored in the storage pool named \u0026ldquo;volume01,\u0026rdquo; use the following command:\n1 pveam list volume01 NAME SIZE volume01:vztmpl/ubuntu-22.04-standard_22.04-1_amd64.tar.zst 123.81MB\nCreating an LXC Now that we have a template image, we can create a new LXC.\n1 2 3 4 5 6 7 pct create 403 volume01:vztmpl/ubuntu-22.04-standard_22.04-1_amd64.tar.zst \\ --storage volume01 --rootfs volume=volume01:16 \\ --ostype ubuntu --arch amd64 --password P@ssw0rd --unprivileged 1 \\ --cores 2 --memory 1024 --swap 0 \\ --hostname lxc-ubuntu \\ --net0 name=eth0,bridge=vmbr0,ip=dhcp,firewall=1,type=veth \\ --start true Configuring the LXC\nParameter Description pct create creates a new LXC with ID 403 and the image from the storage \u0026ldquo;volume01. --storage volume01 specifies the storage pool to be used for storing the LXC\u0026rsquo;s disks. --ostype ubuntu --arch amd64 specify the operating system and architecture of the LXC. --password P@ssw0rd --unprivileged 1 set the root password for the LXC and enable unprivileged mode. --cores 2 --memory 1024 --swap 0 specify the number of CPU cores, amount of memory and swap space allocated to the LXC. --hostname lxc-ubuntu This option sets the hostname of the LXC to \u0026ldquo;lxc-ubuntu\u0026rdquo;. --net0 name=eth0,bridge=vmbr0,ip=dhcp,firewall=1,type=veth the interface name set to eth0 and bridge to vmbr0 from the host, enable firewall and the network type value is: veth. --start true This option starts the LXC after it has been created. about veth\nThis type of network interface allows the LXC (container) or virtual machine to communicate with other devices on the network as if it were a physical device on the network. The veth interface also allows for network isolation between different LXC or virtual machines running on the same host system.\nLaunch a shell for the LXC Enter the container:\n1 pct enter 403 Update the system:\n1 apt update \u0026amp;\u0026amp; apt upgrade Install some packages:\n1 apt install -y curl git tmuxvim Set Vim as default editor:\n1 update-alternatives --set editor /usr/bin/vim.basic Create user:\n1 useradd -m user -s /bin/bash Switch to user:\n1 su - user Cleaning up Stop the LXC\n1 pct stop 401 Destroying an LXC\nTo remove an LXC from the system, use the following command:\n1 pct destroy 401 --purge This command destroys the LXC with ID 401 and removes its configuration files from the system.\nRemoving a Template Image If you want to remove a template image from the storage pool, use the following command:\n1 pveam remove volume01:vztmpl/vztmpl/ubuntu-22.04-standard_22.04-1_amd64.tar.zst Conclusion: We covered the basics of managing LXC in Proxmox Virtual Environment (PVE).\nLooked at how to download a template image, create an LXC, and configure it with various options. We also saw how to remove an LXC from the system.\nPVE offers many more commands and options for managing LXCs, and we encourage you to explore them further to get the most out of this powerful virtualization platform.\nReference: https://pve.proxmox.com/pve-docs/pct.1.html https://www.chucknemeth.com/proxmox/lxc/lxc-template Related: Proxmox VE 01 - 系統安裝篇 遷移 VMware ESXi 的 ova 文件到 Proxmox 7.0 PVE 的 LXC 容器系統安裝 CUPS 軟件，實現多平台共享的印表機 PVE (Proxmox VE) 多網口的識別 Proxmox VE 7 安裝Home Assistant虛擬機系統 Configuring VLANs on a Host for Proxmox VE Set up SmartDNS in Alpine Linux (LXC) ","permalink":"https://www.kingtam.tk/posts/pve-lxc/","summary":"We will explore the syntax of managing LXC using PVE. Use commands that are commonly used by system administrators and cover the basics of creating, removing, and managing LXC in PVE.\nWhat\u0026rsquo;s LXC? LXC is a user space interface for the Linux kernel containment features. Through a powerful API and simple tools, it lets Linux users easily create and manage system or application containers.\nTemplate Image Creating an LXC in PVE is to download a template image.","title":"Managing LXC in Proxmox Virtual Environment (PVE)"},{"content":"Set up SmartDNS in Alpine Linux (LXC) SmartDNS is a local DNS server that retrieves DNS query results from multiple upstream DNS servers and delivers the fastest results to clients. It supports secure DNS protocols such as DoT (DNS over TLS) and DoH (DNS over HTTPS), providing enhanced privacy protection, avoiding DNS pollution, and improving network access speed. Additionally, SmartDNS supports high-performance ad filtering for an overall better browsing experience\nFeatures Multiple upstream DNS servers Return the fastest IP address Support for multiple query protocols Domain IP address specification Domain name high-performance rule filtering Linux/Windows multi-platform support Support IPV4, IPV6 dual stack DNS64 High performance, low resource consumption DNS domain forwarding Architecture Install SmartDNS on Alpine Linux (PVE LXC) Here is how to install SmartDNS on Alpine Linux running in a Proxmox VE LXC container\nDownload the latest version of SmartDNS from official website\n1 wget https://github.com/pymumu/smartdns/releases/download/Release42/smartdns.1.2023.05.07-1641.x86_64-linux-all.tar.gz Connecting to github.com (20.205.243.166:443) Connecting to objects.githubusercontent.com (185.199.111.133:443) saving to \u0026lsquo;smartdns.1.2023.05.07-1641.x86_64-linux-all.tar.gz\u0026rsquo; smartdns.1.2023.05.0 100% |******************************************************************************************| 1628k 0:00:00 ETA \u0026lsquo;smartdns.1.2023.05.07-1641.x86_64-linux-all.tar.gz\u0026rsquo; saved\nStart to install\n1 2 tar -zxf smartdns.1.2023.05.07-1641.x86_64-linux-all.tar.gz \u0026amp;\u0026amp; cd smartdns/ \u0026amp;\u0026amp; chmod +x ./install ./install -i created directory: \u0026lsquo;/etc/smartdns\u0026rsquo; \u0026lsquo;usr/sbin/smartdns\u0026rsquo; -\u0026gt; \u0026lsquo;/usr/sbin/smartdns\u0026rsquo; \u0026rsquo;etc/smartdns/smartdns.conf\u0026rsquo; -\u0026gt; \u0026lsquo;/etc/smartdns/smartdns.conf\u0026rsquo; install: can\u0026rsquo;t create \u0026lsquo;/etc/default/smartdns\u0026rsquo;: No such file or directory\ncopy the execute file to binaries with superuser (root) privileges directory\n1 cp ~/smartdns/usr/sbin/smartdns /usr/sbin/ backup original SmartDNS configuration file\n1 mv /etc/smartdns/smartdns.conf /etc/smartdns/smartdns.conf.bak create a new SmartDNS configuration file\nOfficial reference: https://pymumu.github.io/smartdns/en/config/basic-config/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 cat \u0026gt;\u0026gt; /etc/smartdns/smartdns.conf \u0026lt;\u0026lt; EOF server-name smartdns bind :53 bind-tcp :53 cache-size 3096 cache-file /tmp/smartdns.cache cache-persist yes tcp-idle-time 120 rr-ttl 600 rr-ttl-min 60 rr-ttl-max 600 rr-ttl-reply-max 60 local-ttl 60 prefetch-domain yes max-reply-ip-num 1 log-level info log-size 128K #-------dns----------- server-https https://cloudflare-dns.com/dns-query server-tls 1.1.1.1:853 server-tls 8.8.4.4:853 server-tls 9.9.9.9:853 server-tcp 114.114.114.114:53 server-tcp 223.5.5.5:53 server-tcp 180.76.76.76:53 server-tcp 202.99.160.68:53 server-tpc 8.8.4.4:53 server-tpc 9.9.9.9:53 #---------------- speed-check-mode ping,tcp:80,tcp:443 response-mode fastest-ip serve-expired yes force-AAAA-SOA yes EOF Disable DNS queries from UDHCP\n1 sed -i \u0026#39;s/^RESOLV_CONF/#RESOLV_CONF/\u0026#39; /usr/share/udhcpc/default.script Update the nameserver to localhost from /etc/resolv.conf in the PVE\u0026rsquo;s LXC\nEnable the service to start on boot\n1 2 3 echo \u0026#39;nohup /usr/sbin/smartdns -f -c /etc/smartdns/smartdns.conf \u0026gt;/dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\u0026#39; \u0026gt;\u0026gt; /etc/local.d/smartdns.start chmod +x /etc/local.d/smartdns.start rc-update add local Now Apply setting and functions by reboot\n1 reboot Create a systemd service file for SmartDNS (alternative) Create a new systemd service file at /etc/init.d/smartdns\n1 2 touch /etc/init.d/smartdns chmod +x /etc/init.d/smartdns Add the following content to the file:\n1 2 3 4 5 6 7 8 9 10 11 12 13 cat \u0026gt;\u0026gt; /etc/init.d/smartdns \u0026lt;\u0026lt; EOF #!/sbin/openrc-run name=\u0026#34;SmartDNS\u0026#34; command=\u0026#34;/usr/sbin/smartdns\u0026#34; command_args=\u0026#34;-c /etc/smartdns/smartdns.conf\u0026#34; pidfile=\u0026#34;/var/run/smartdns.pid\u0026#34; depend() { need net after firewall } EOF Save and exit the text editor.\nEnable and start SmartDNS\n1 2 rc-update add smartdns default rc-service smartdns start Now, set to start on boot on your Alpine Linux system.\nAd Blocking by SmartDNS SmartDNS can block ads by returning SOA for the corresponding domain name. Official reference: https://pymumu.github.io/smartdns/en/config/ad-block/\nCreate a script to download the anti-ad-smartdns.conf file from the community URL\n1 2 3 4 cat \u0026gt;\u0026gt; /root/adblock-smartdns-conf.sh \u0026lt;\u0026lt; EOF #!/bin/bash wget https://github.com/privacy-protection-tools/anti-AD/blob/master/anti-ad-smartdns.conf -O /etc/smartdns/anti-ad-smartdns.conf EOF Make the script executable:\n1 chmod +x /root/adblock-smartdns-conf.sh Open the crontab editor:\n1 crontab -e Add the following line to the end of the file to run the script every day at 1:00 AM:\n1 0 1 * * * /root/adblock-smartdns-conf.sh Modify the /etc/smartdns/smartdns.conf file to include the above configuration file:\n1 conf-file /etc/smartdns/anti-ad-smartdns.conf Reference Linux - SmartDNS\nSmartDNS Releases\nAlpine linux系統安裝smartDNS伺服器實現DNS防污染快速查詢\nRelated Alpine Linux Installation\nApline Linux\u0026rsquo;s Package Management Tool\nAlpine Linux customizations\nAlpine Linux-based LXC with Docker support on a PVE host\nAlpine Linux as a DHCP and DNS Server\nAlpine Linux share the terminal over the web (ttyd)\nSet up SmartDNS in Alpine Linux (LXC)\n","permalink":"https://www.kingtam.tk/posts/alpine-smartdns/","summary":"Set up SmartDNS in Alpine Linux (LXC) SmartDNS is a local DNS server that retrieves DNS query results from multiple upstream DNS servers and delivers the fastest results to clients. It supports secure DNS protocols such as DoT (DNS over TLS) and DoH (DNS over HTTPS), providing enhanced privacy protection, avoiding DNS pollution, and improving network access speed. Additionally, SmartDNS supports high-performance ad filtering for an overall better browsing experience","title":"Set up SmartDNS in Alpine Linux (LXC)"},{"content":"What is ttyd? What is ttyd? ttyd is a simple command-line program that allows you to share a terminal session over the web. It provides a web-based terminal interface for interacting with a Linux system, making it possible to access the system remotely from a web browser.\nInstall ttyd in Alpine Linux Install ttyd in Alpine Linux Open the terminal and type the following command to update the packages list:\n1 apk update Install the ttyd package by typing the following command:\n1 apk add ttyd Once the installation is complete, you can use the ttyd command to start the ttyd server.\nFor example, to start the ttyd server on port 7681, use the following command:\n1 ttyd -p 7681 /bin/sh This command will start the ttyd server and run the /bin/sh shell in it.\nYou can now access the ttyd server by opening a web browser and navigating to http://\u0026lt;ip_address\u0026gt;:7681.\nReplace \u0026lt;ip_address\u0026gt; with the IP address of the server where the ttyd server is running.\nThat\u0026rsquo;s it! You have now installed and started the ttyd server on Alpine Linux.\nMake ttyd start-up on boot Make ttyd start-up on boot Create a new file in the /etc/init.d/ directory using your preferred text editor. For example, you can use the following command to create a file named ttyd:\n1 vi /etc/init.d/ttyd Add the following content to the ttyd file:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 #!/sbin/openrc-run description=\u0026#34;ttyd service\u0026#34; command=\u0026#34;/usr/bin/ttyd -p 7681 login \u0026amp;\u0026#34; command_args=\u0026#34;\u0026#34; pidfile=\u0026#34;/run/ttyd.pid\u0026#34; depend() { after network } start_pre() { mkdir -p /run/ttyd } Option Description /usr/bin/ttyd Specifies the path to the ttyd binary. -p 7681 Specifies the port number that ttyd should listen on for incoming connections. In this case, it is set to 7681 (default). login Specifies the command to run after a user connects to ttyd. In this case, it is set to login, which starts a new login session. \u0026amp; Runs the command in the background, allowing the terminal to be used for other commands while ttyd continues to run. Creates a new service definition for ttyd, defining the command to run and the PID file location.\nAdjust the command line to use your desired options for ttyd.\nSave and exit the file.\nMake the ttyd script executable using the following command:\n1 chmod +x /etc/init.d/ttyd Add the ttyd service to the startup list using the following command:\n1 rc-update add ttyd service ttyd added to runlevel default This command adds the ttyd service to the default runlevel, so it will start up automatically on boot.\nThat\u0026rsquo;s it! You have now configured ttyd to start up on boot in Alpine Linux.\nConclusion Conclusion ttyd, which allows users to interact with the shell session in real-time using a web-based terminal interface. ttyd also is a useful tool for remote administration and troubleshooting of Linux systems.\nRelated Related OneCloud Gen1 - OpenWRT Install TTYD\nOneCloud Gen2 - Armbian Install TTYD\nAlpine Linux Installation\nApline Linux\u0026rsquo;s Package Management Tool\nAlpine Linux customizations\nAlpine Linux-based LXC with Docker support on a PVE host\nAlpine Linux as a DHCP and DNS Server\nAlpine Linux share the terminal over the web (ttyd)\nSet up SmartDNS in Alpine Linux (LXC)\n","permalink":"https://www.kingtam.tk/posts/alpine-ttyd/","summary":"What is ttyd? What is ttyd? ttyd is a simple command-line program that allows you to share a terminal session over the web. It provides a web-based terminal interface for interacting with a Linux system, making it possible to access the system remotely from a web browser.\nInstall ttyd in Alpine Linux Install ttyd in Alpine Linux Open the terminal and type the following command to update the packages list:","title":"Alpine Linux share the terminal over the web (ttyd)"},{"content":" dnsmasq is a lightweight, easy-to-configure DHCP and DNS server. I\u0026rsquo;ll demonstrate how to set up dnsmasq as both a DHCP and DNS server on a Linux system.\nProcedure Procedure Network Card Configuration : Network Card Configuration 1 ip address The physical interface eth1 is used to set up DHCP and DNS services.\n1 2 3 4 5 6 7 8 cat \u0026gt;\u0026gt; /etc/network/interfaces \u0026lt;\u0026lt; EOF auto eth1 iface eth1 inet static address 192.168.0.1 network 192.168.0.0 netmark 255.255.255.0 broadcast 192.168.0.255 EOF Restart the networking to apply the settings.\n1 rc-service networking restart DNSMASQ Configuration : DNSMASQ Configuration Install dnsmasq:\n1 sudo apk add dnsmasq Configure dnsmasq:\nThe main configuration file for dnsmasq is /etc/dnsmasq.conf. Open this file with a text editor:\n1 sudo vi /etc/dnsmasq.conf Add or modify the following lines to configure dnsmasq as a DHCP and DNS server. Replace the placeholders with appropriate values for your network.\n1 2 3 4 5 6 7 8 # DHCP configuration dhcp-range=\u0026lt;start-IP\u0026gt;,\u0026lt;end-IP\u0026gt;,\u0026lt;netmask\u0026gt;,\u0026lt;lease-time\u0026gt; dhcp-option=option:router,\u0026lt;router-IP\u0026gt; dhcp-option=option:dns-server,\u0026lt;DNS-IP\u0026gt; # DNS configuration domain=\u0026lt;your-domain\u0026gt; local=/\u0026lt;your-domain\u0026gt;/ Also, can save the file in a folder (/etc/dnsmasq.d) which end in .conf .\nFor example:\n1 2 3 4 5 6 7 8 9 10 11 12 13 cat \u0026gt;\u0026gt; /etc/dnsmasq.d/eth1.conf \u0026lt;\u0026lt; EOF # DHCP configuration dhcp-range=192.168.0.100,192.168.0.200,255.255.255.0,12h dhcp-option=option:router,192.168.0.1 dhcp-option=option:dns-server,192.168.0.1 # DNS configuration domain=local.lan local=/local.lan/ EOF Configure local DNS entries (optional):\nIf you want to add custom DNS entries for your local network, you can create a new file called /etc/hosts.dnsmasq and add the entries in the following format:\n1 \u0026lt;IP-address\u0026gt; \u0026lt;hostname\u0026gt;.\u0026lt;domain\u0026gt; \u0026lt;alias\u0026gt; For example:\n1 2 192.168.0.10 server.local.lan server 192.168.0.20 nas.local.lan nas Then, add the following line to /etc/dnsmasq.conf to use /etc/hosts.dnsmasq for local DNS resolution:\n1 addn-hosts=/etc/hosts.dnsmasq Start and enable dnsmasq:\n1 rc-service dnsmasq start /var/lib/misc/dnsmasq.leases: creating file /var/lib/misc/dnsmasq.leases: correcting owner Starting dnsmasq \u0026hellip; 1 rc-update add dnsmasq service dnsmasq added to runlevel default Perform client PC testing Perform client PC testing Clients should receive IP addresses and DNS settings automatically when they connect, and any custom local DNS entries you configured should resolve correctly.\n1 sudo rc-service networking restart Now, dnsmasq should be running as a DHCP and DNS server on network.\nRelated Related Alpine Linux Installation\nApline Linux\u0026rsquo;s Package Management Tool\nAlpine Linux customizations\nAlpine Linux-based LXC with Docker support on a PVE host\nAlpine Linux as a DHCP and DNS Server\nAlpine Linux share the terminal over the web (ttyd)\niPXE 網絡引導安裝\nSet up SmartDNS in Alpine Linux (LXC)\n","permalink":"https://www.kingtam.tk/posts/alpine-dhcp-dns/","summary":"dnsmasq is a lightweight, easy-to-configure DHCP and DNS server. I\u0026rsquo;ll demonstrate how to set up dnsmasq as both a DHCP and DNS server on a Linux system.\nProcedure Procedure Network Card Configuration : Network Card Configuration 1 ip address The physical interface eth1 is used to set up DHCP and DNS services.\n1 2 3 4 5 6 7 8 cat \u0026gt;\u0026gt; /etc/network/interfaces \u0026lt;\u0026lt; EOF auto eth1 iface eth1 inet static address 192.","title":"Alpine Linux as a DHCP and DNS Server"},{"content":" Setting up an Alpine Linux-based Container (LXC) with Docker support on a Proxmox Virtual Environment (PVE) host.\nLightweight and secure: Alpine Linux is a lightweight and secure distribution of Linux that is ideal for use in containers. It has a small footprint and is designed to minimize attack surface, making it a good choice for running Docker containers. Flexibility: Using an LXC container allows you to run multiple instances of Docker on a single host, each with its own isolated environment and resources. Easy management: Proxmox VE provides a user-friendly web interface for managing LXC containers, making it easy to start, stop, and configure containers. Resource efficiency: Running Docker inside an LXC container allows you to maximize resource usage by sharing resources across multiple containers. This can lead to better performance and reduced resource usage compared to running Docker directly on the host. Modularity: Using Docker allows you to easily manage and deploy applications in a modular way, with each container running a specific service or application. This can simplify the management and maintenance of complex systems. Create a new LXC container with the specified configuration:\n1 2 3 4 5 6 7 pct create 302 volume01:vztmpl/alpine-3.17-default_20221129_amd64.tar.xz \\ --storage volume01 --rootfs volume=volume01:8 \\ --ostype alpine --arch amd64 --password P@ssw0rd --unprivileged 0 \\ --cores 2 --memory 1024 --swap 0 \\ --hostname lxc-alpine \\ --net0 name=eth0,bridge=vmbr0,ip=dhcp,firewall=1,type=veth \\ --start false Configuration Option Value Container ID 302 Template Alpine Linux Storage volume01 Root Filesystem Size volume=volume01:8 Operating System Type Alpine Architecture amd64 Password P@ssw0rd Container Privileges 0 means the container with privileged mode enabled CPU Cores 2 Memory 1024 Swap 0 Hostname lxc-alpine Network Settings name=eth0,bridge=vmbr0,ip=dhcp,firewall=1,type=veth Configure the LXC container to use an unconfined AppArmor profile and drop no capabilities:\n1 2 3 4 cat \u0026gt;\u0026gt; /etc/pve/lxc/302.conf \u0026lt;\u0026lt; EOF lxc.apparmor.profile: unconfined lxc.cap.drop: EOF Action Command Container config file Location /etc/pve/lxc/302.conf lxc.apparmor.profile: unconfined Disabling AppArmor confinement lxc.cap.drop: Retaining all capabilities for the container. Start the LXC container:\n1 pct start 302 Update and upgrade the container\u0026rsquo;s package repositories and installed packages:\n1 apk update \u0026amp;\u0026amp; apk upgrade This command updates the Alpine package repositories and upgrades the installed packages to their latest versions.\nInstall Docker and Docker Compose:\n1 apk add docker docker-compose This command installs Docker and Docker Compose, which are used to manage and deploy containerized applications.\nStart the Docker service and enable it to start automatically on boot:\n1 2 rc-service docker start rc-update add docker These commands start the Docker service and configure it to start automatically when the container boots.\nCreate the Docker configuration directory:\n1 mkdir -p /etc/docker Configure the Docker daemon with custom log and storage settings:\n1 2 3 4 5 6 7 8 9 10 cat \u0026gt; /etc/docker/daemon.json \u0026lt;\u0026lt; EOF { \u0026#34;log-driver\u0026#34;: \u0026#34;json-file\u0026#34;, \u0026#34;log-opts\u0026#34;: { \u0026#34;max-size\u0026#34;: \u0026#34;20m\u0026#34;, \u0026#34;max-file\u0026#34;: \u0026#34;3\u0026#34; }, \u0026#34;storage-driver\u0026#34;: \u0026#34;vfs\u0026#34; } EOF Parameter Value File Location /etc/docker/daemon.json Logging Driver json-file Logging Driver Options max-size: 20m, max-file: 3 Storage Driver vfs Restart the Docker service to apply the configuration changes:\n1 rc-service docker restart Setting up an Alpine Linux-based Container (LXC) with Docker support on a Proxmox Virtual Environment (PVE) host provides a secure, flexible, and efficient way to run Docker containers.\n在 Alpine Linux 3 底下安裝 docker + docker-compose Alpine Linux Installation Apline Linux\u0026rsquo;s Package Management Tool Alpine Linux customizations Alpine Linux-based LXC with Docker support on a PVE host Alpine Linux as a DHCP and DNS Server Alpine Linux share the terminal over the web (ttyd) Managing LXC in Proxmox Virtual Environment (PVE) Set up SmartDNS in Alpine Linux (LXC) ","permalink":"https://www.kingtam.tk/posts/alpine-lxc-docker/","summary":"Setting up an Alpine Linux-based Container (LXC) with Docker support on a Proxmox Virtual Environment (PVE) host.\nLightweight and secure: Alpine Linux is a lightweight and secure distribution of Linux that is ideal for use in containers. It has a small footprint and is designed to minimize attack surface, making it a good choice for running Docker containers. Flexibility: Using an LXC container allows you to run multiple instances of Docker on a single host, each with its own isolated environment and resources.","title":"Alpine Linux-based LXC with Docker support on a PVE host"},{"content":" One of the benefits of using Alpine Linux is its flexibility and customizability, which allows users to tailor the system to their specific needs.\nSetting the timezone Check the current timezone\n1 date Timezone setting\n1 setup-timezone Which timezone are you in? (\u0026rsquo;?\u0026rsquo; for list) [UTC] Asia/Hong_Kong\nSuppose you want to use the Asia/ timezone and Hong_Kong as the sub-timezone of \u0026lsquo;Asia/\u0026rsquo;. You can input \u0026lsquo;?\u0026rsquo; to list the timezones to choose from.\nCheck the Date\n1 date Make a dynamic MOTD MOTD stands for \u0026ldquo;Message of the Day\u0026rdquo; in Linux. It is a customizable message that is displayed to users when they log in to the system.\nCreate a crond script to dynamic create an motd message to users\n1 2 3 4 rc-service crond start \u0026amp;\u0026amp; rc-update add crond vi /etc/periodic/15min/motd chmod a+x /etc/periodic/15min/motd run-parts --test /etc/periodic/15min Command Description rc-service crond start Starts the crond service, which runs scheduled tasks on the system. rc-update add crond Adds the crond service to the default runlevel, ensuring that it starts automatically on boot. vi /etc/periodic/15min/motd Use the Vi text editor and creates a new shell script at /etc/periodic/15min/motd. This script is executed every 15 minutes to update the MOTD. chmod a+x /etc/periodic/15min/motd Sets the execute permission for the motd script, allowing the system to run it as a periodic task. run-parts --test /etc/periodic/15min Tests the /etc/periodic/15min directory for executable scripts and prints a list of the scripts that would be executed by the system\u0026rsquo;s periodic task scheduler. Contents of /etc/periodic/15min/motd\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #!/bin/sh #. /etc/os-release PRETTY_NAME=`awk -F= \u0026#39;$1==\u0026#34;PRETTY_NAME\u0026#34; { print $2 ;}\u0026#39; /etc/os-release | tr -d \u0026#39;\u0026#34;\u0026#39;` VERSION_ID=`awk -F= \u0026#39;$1==\u0026#34;VERSION_ID\u0026#34; { print $2 ;}\u0026#39; /etc/os-release` UPTIME_DAYS=$(expr `cat /proc/uptime | cut -d \u0026#39;.\u0026#39; -f1` % 31556926 / 86400) UPTIME_HOURS=$(expr `cat /proc/uptime | cut -d \u0026#39;.\u0026#39; -f1` % 31556926 % 86400 / 3600) UPTIME_MINUTES=$(expr `cat /proc/uptime | cut -d \u0026#39;.\u0026#39; -f1` % 31556926 % 86400 % 3600 / 60) cat \u0026gt; /etc/motd \u0026lt;\u0026lt; EOF %+++++++++++++++++++++++++++++++ SERVER INFO ++++++++++++++++++++++++++++++++% % % Name: `hostname` Uptime: $UPTIME_DAYS days, $UPTIME_HOURS hours, $UPTIME_MINUTES minutes CPU: `cat /proc/cpuinfo | grep \u0026#39;model name\u0026#39; | head -1 | cut -d\u0026#39;:\u0026#39; -f2` Memory: `free -m | head -n 2 | tail -n 1 | awk {\u0026#39;print $2\u0026#39;}`M Swap: `free -m | tail -n 1 | awk {\u0026#39;print $2\u0026#39;}`M Disk: `df -h / | awk \u0026#39;{ a = $2 } END { print a }\u0026#39;` Kernel: `uname -r` Distro: $PRETTY_NAME Version $VERSION_ID CPU Load: `cat /proc/loadavg | awk \u0026#39;{print $1 \u0026#34;, \u0026#34; $2 \u0026#34;, \u0026#34; $3}\u0026#39;` Free Memory: `free -m | head -n 2 | tail -n 1 | awk {\u0026#39;print $4\u0026#39;}`M Free Swap: `free -m | tail -n 1 | awk {\u0026#39;print $4\u0026#39;}`M Free Disk: `df -h / | awk \u0026#39;{ a = $2 } END { print a }\u0026#39;` eth0 Address: `ifconfig eth0 | grep \u0026#34;inet addr\u0026#34; | awk -F: \u0026#39;{print $2}\u0026#39; | awk \u0026#39;{print $1}\u0026#39;` % % %++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++% EOF This is the result:\nChanging To The Bash Shell Bash is a popular command shell in the Linux community, and many users prefer it over the default shell in Alpine Linux, which is ash. Changing to the Bash shell in Alpine Linux is a simple process that can greatly enhance our productivity and efficiency when working with the Linux system.\nAlpine Linux uses Ash by default as the shell, but I prefer to use Bash as my Linux shell. To install Bash in Alpine Linux and make it the default shell, follow these steps:\nInstall Bash:\n1 apk add bash bash-doc bash-completion Change the default shell for your user:\n1 sed -i \u0026#39;s/ash/bash/\u0026#39; /etc/passwd Verify the change by checking the first line of the /etc/passwd file:\n1 cat /etc/passwd | head -n 1 It should display /bin/bash.\nCustomize the Bash shell. We can configure the Bash shell liking by adding your aliases and settings. Here is an example of customization:\n1 2 3 4 5 6 7 8 9 10 11 cat \u0026gt;\u0026gt; ~/.bash_profile \u0026lt;\u0026lt; EOF alias update=\u0026#39;apk update \u0026amp;\u0026amp; apk upgrade\u0026#39; export HISTTIMEFORMAT=\u0026#34;%d/%m/%y %T \u0026#34; export PS1=\u0026#39;\\u@\\h:\\W \\$ \u0026#39; alias l=\u0026#39;ls -CF\u0026#39; alias la=\u0026#39;ls -A\u0026#39; alias ll=\u0026#39;ls -alhF\u0026#39; alias ls=\u0026#39;ls --color=auto\u0026#39; source /etc/profile.d/bash_completion.sh export PS1=\u0026#34;\\[\\e[31m\\][\\[\\e[m\\]\\[\\e[38;5;172m\\]\\u\\[\\e[m\\]@\\[\\e[38;5;153m\\]\\h\\[\\e[m\\] \\[\\e[38;5;214m\\]\\W\\[\\e[m\\]\\[\\e[31m\\]]\\[\\e[m\\]\\\\$ \u0026#34; EOF This customizes the Bash shell with aliases for common commands, a colored prompt, and auto-completion using the bash_completion.sh script.\nNeoVim and Vim plugins Install in Alpine Linux NeoVim is a popular text editor that is designed to be more extensible and customizable than traditional editors like Vim. It offers many features that make it an excellent choice for developers and testers.\nTo install NeoVim and Vim plugins in Alpine Linux, follow these steps:\nInstall NeoVim using the apk package manager:\n1 apk add neovim curl git Install Vim plugins using the Vim plugin manager, such as Vim-Plug. First, download and install Vim-Plug:\n1 2 curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim Create the NeoVim configuration file:\n1 2 mkdir -p ~/.config/nvim touch ~/.config/nvim/init.vim Add the following lines to your init.vim file to set up Vim-Plug and install plugins:\n1 2 3 4 5 6 7 call plug#begin(\u0026#39;~/.local/share/nvim/plugged\u0026#39;) Plug \u0026#39;vim-airline/vim-airline\u0026#39; Plug \u0026#39;vim-airline/vim-airline-themes\u0026#39; Plug \u0026#39;tpope/vim-commentary\u0026#39; Plug \u0026#39;scrooloose/nerdtree\u0026#39; Plug \u0026#39;joshdick/onedark.vim\u0026#39; call plug#end() Save and exit the init.vim file.\nOpen NeoVim:\n1 nvim Install the Vim plugins using the following command:\n1 :PlugInstall This will download and install the plugins specified in your init.vim file.\nSetting up a new user Installing sudo and assigning sudo privileges to a new user in Alpine Linux can greatly enhance your system\u0026rsquo;s security and flexibility.\nInstall sudo using the apk package manager:\n1 apk add sudo (1/1) Installing sudo (1.9.12_p2-r1) Executing busybox-1.35.0-r29.trigger\nCreate a new user:\n1 NEWUSER=\u0026#39;user\u0026#39; \u0026lsquo;user\u0026rsquo; as your UserName\n1 adduser -g \u0026#34;${NEWUSER}\u0026#34; $NEWUSER -s /bin/bash Changing password for user New password: Bad password: too weak Retype password: passwd: password for user changed by root\nalso the new user using a bash shell as default shell and\nAdd the new user to the sudo group:\n1 echo \u0026#34;$NEWUSER ALL=(ALL) ALL\u0026#34; \u0026gt; /etc/sudoers.d/$NEWUSER \u0026amp;\u0026amp; chmod 0440 /etc/sudoers.d/$NEWUSER create a username file in the sudoers folder to allow the new user to use sudo:\nOnce you have completed these steps, the new user can use the sudo command to elevate their privileges when necessary. To use the sudo command, the user should prefix the command they want to run with \u0026ldquo;sudo\u0026rdquo;, like this:\n1 sudo apk update For example, if the new user wants to install a new package using apk, they can use the following command:\n1 sudo apk add \u0026lt;package_name\u0026gt; This will prompt the user to enter their password before allowing the command to run with elevated privileges.\nSSH key authentication to login Update the package and Install OpenSSH:\n1 2 3 4 apk update \u0026amp;\u0026amp; apk add openssh ``` Once the installation is complete, start the OpenSSH service: /etc/init.d/sshd start\n1 2 Enable the service to start automatically at boot: rc-update add sshd\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026gt; Using SSH key authentication to log in to Alpine Linux without a password is a secure and convenient way to access your system remotely. To use SSH key authentication to login to Alpine Linux without a password, follow these steps: ### Local server setting (as a client) Generate an SSH key pair on your local machine if you haven\u0026#39;t already done so: ```bash ssh-keygen Copy the public key to the remote server (Alpine Linux) using the ssh-copy-id command:\n1 ssh-copy-id \u0026lt;username\u0026gt;@\u0026lt;server_ip_address\u0026gt; Enter your user password when prompted.\nSSH into the remote server:\n1 ssh \u0026lt;username\u0026gt;@\u0026lt;server_ip_address\u0026gt; You should now be able to log in to the remote server without being prompted for your password.\nRemote server setting (as server) Disabling Password Authentication on your Server\n1 sudo -i 1 echo \u0026#34;PasswordAuthentication no\u0026#34; \u0026gt;\u0026gt; /etc/ssh/sshd_config 1 rc-service sshd restart Caching service dependencies \u0026hellip; [ ok ] Stopping sshd \u0026hellip; [ ok ] Starting sshd \u0026hellip; [ ok ] Enable unprivileged users to use ICMP (Ping) To fix the error \u0026ldquo;unprivileged ping is disabled, please enable by setting net.ipv4.ping_group_range\u0026rdquo; when trying to use the ping command, it means that non-root users are not allowed to use the ping command.\nAdd a new config file:\n1 echo \u0026#39;net.ipv4.ping_group_range = 0 65534\u0026#39; \u0026gt;\u0026gt; /etc/sysctl.d/99-allow-ping.conf Apply the changes:\n1 sysctl -p Conclusion Alpine Linux is a highly customizable distribution of Linux that offers a wide range of customizations to enhance your experience with the system. By following the customizations outlined in this post, We can tailor Alpine Linux to our specific needs and preferences, making it a powerful and flexible tool for development and system administration.\nReference Alpine Linux Installation How to install bash shell in Alpine Linux Setting up a new user How To Configure SSH Key-Based Authentication on a Linux Server Related Alpine Linux Installation Apline Linux\u0026rsquo;s Package Management Tool Alpine Linux customizations Alpine Linux-based LXC with Docker support on a PVE host Alpine Linux as a DHCP and DNS Server Alpine Linux share the terminal over the web (ttyd) Set up SmartDNS in Alpine Linux (LXC) ","permalink":"https://www.kingtam.tk/posts/alpine-customization/","summary":"One of the benefits of using Alpine Linux is its flexibility and customizability, which allows users to tailor the system to their specific needs.\nSetting the timezone Check the current timezone\n1 date Timezone setting\n1 setup-timezone Which timezone are you in? (\u0026rsquo;?\u0026rsquo; for list) [UTC] Asia/Hong_Kong\nSuppose you want to use the Asia/ timezone and Hong_Kong as the sub-timezone of \u0026lsquo;Asia/\u0026rsquo;. You can input \u0026lsquo;?\u0026rsquo; to list the timezones to choose from.","title":"Alpine Linux Customizations"},{"content":"About The package management tool used in Alpine Linux is apk. apk is a fast, lightweight, and efficient package management tool that has the following features:\nNative support for cross-compilation and cross-platform installation. Automatic handling of dependencies when installing and uninstalling packages. Support for multiple repositories, including official repositories, community repositories, and personal repositories. Simple command-line interface that allows users to perform various operations such as search, install, upgrade, and uninstall. Support for virtual packages that enables users to install a set of related packages by installing a single virtual package. How to Use Here are some basic commands for using the apk package manager in Alpine Linux:\n-Update the package index:\n1 apk update -Search for a package:\n1 apk search \u0026lt;package_name\u0026gt; -Install a package:\n1 apk add \u0026lt;package_name\u0026gt; -Remove a package:\n1 apk del \u0026lt;package_name\u0026gt; -View information about a package:\n1 apk info \u0026lt;package_name\u0026gt; -List all installed packages:\n1 apk info -vv | less -Upgrade all installed packages:\n1 apk upgrade -Upgrade a specific package:\n1 apk upgrade \u0026lt;package_name\u0026gt; -List the contents of a package:\n1 apk info -L \u0026lt;package_name\u0026gt; -Show the dependencies of a package:\n1 apk info -R \u0026lt;package_name\u0026gt; Enable community repositories Edit the file /etc/apk/repositories and uncomment a line that points to the \u0026ldquo;community\u0026rdquo; directory.\nUsing Examples To install neovim in Alpine Linux using the apk\n1 apk add neovim (1/11) Installing libintl (0.21.1-r1) (2/11) Installing libgcc (12.2.1_git20220924-r4) (3/11) Installing luajit (2.1_p20210510-r3) (4/11) Installing libuv (1.44.2-r0) (5/11) Installing libluv (1.44.2.1-r0) (6/11) Installing msgpack-c (4.0.0-r0) (7/11) Installing unibilium (2.1.1-r0) (8/11) Installing libtermkey (0.22-r0) (9/11) Installing tree-sitter (0.20.7-r0) (10/11) Installing libvterm (0.3-r0) (11/11) Installing neovim (0.8.1-r0) Executing busybox-1.35.0-r29.trigger OK: 138 MiB in 71 packages\nTo install multiple applications with apk in Alpine Linux\n1 apk add bash bash-doc bash-completion (1/7) Installing readline (8.2.0-r0) (2/7) Installing bash (5.2.15-r0) Executing bash-5.2.15-r0.post-install (3/7) Installing pkgconf (1.9.4-r0) (4/7) Installing bash-completion (2.11-r4) (5/7) Installing openrc-bash-completion (0.45.2-r7) (6/7) Installing bash-doc (5.2.15-r0) (7/7) Installing kmod-bash-completion (30-r1) Executing busybox-1.35.0-r29.trigger OK: 145 MiB in 78 packages\nThe \u0026ldquo;apk search\u0026rdquo; command in Alpine Linux\n1 apk search docker This will display a list of packages related to Docker.\nTo uninstall or remove an application in Alpine Linux using apk\nList all installed packages and find out the application as you want to remove.\n1 apk list | grep \u0026#39;neovim\u0026#39; Use the \u0026ldquo;apk del\u0026rdquo; command followed by the name of the package to remove it\n1 apk del neovim (1/11) Purging neovim (0.8.1-r0) (2/11) Purging libintl (0.21.1-r1) (3/11) Purging luajit (2.1_p20210510-r3) (4/11) Purging libgcc (12.2.1_git20220924-r4) (5/11) Purging libluv (1.44.2.1-r0) (6/11) Purging libuv (1.44.2-r0) (7/11) Purging msgpack-c (4.0.0-r0) (8/11) Purging libtermkey (0.22-r0) (9/11) Purging unibilium (2.1.1-r0) (10/11) Purging tree-sitter (0.20.7-r0) (11/11) Purging libvterm (0.3-r0) Executing busybox-1.35.0-r29.trigger OK: 123 MiB in 67 packages\nOverall apk is a fast, lightweight, and efficient package management tool that makes it easy for users to manage and maintain software packages in Alpine Linux.\nRelated Alpine Linux Installation\nApline Linux\u0026rsquo;s Package Management Tool\nAlpine Linux customizations\nAlpine Linux-based LXC with Docker support on a PVE host\nAlpine Linux as a DHCP and DNS Server\nAlpine Linux share the terminal over the web (ttyd)\nSet up SmartDNS in Alpine Linux (LXC)\n","permalink":"https://www.kingtam.tk/posts/alpine-apk/","summary":"About The package management tool used in Alpine Linux is apk. apk is a fast, lightweight, and efficient package management tool that has the following features:\nNative support for cross-compilation and cross-platform installation. Automatic handling of dependencies when installing and uninstalling packages. Support for multiple repositories, including official repositories, community repositories, and personal repositories. Simple command-line interface that allows users to perform various operations such as search, install, upgrade, and uninstall.","title":"Alpine Linux Package Management Tool"},{"content":"Why Alpine Linux Alpine Linux is a lightweight, security-focused, rolling release distribution with a fast and efficient package manager. It is highly customizable and compatible with a wide range of hardware architectures, making it suitable for use in a variety of environments.\nPreparation Download the Alpine Linux ISO image file from the official website: https://alpinelinux.org/downloads/ Write the ISO image file to a USB drive using a tool such as Rufus or Etcher. Insert the USB drive into your computer and boot from it. This can usually be done by pressing a key (such as F12 or Del) during the startup process to enter the boot menu, then selecting the USB drive as the boot device. Procedure of Install Once Alpine Linux has booted, you will see a command-line interface. Type the login name \u0026ldquo;root\u0026rdquo; and press Enter.\nSetup the system with command “setup-alpine”.\nFollow the prompts to select the keyboard layout (or press enter to select none), and type system hostname (e.g. alpine)\nConstantly choosing default settings, such as interface eth0, using DHCP to ask for an IP address.\nEnter it twice to change the root password, and select the appropriate time zone for your location or enter it manually (e.g. Asia/Hong_Kong).\nChoose the fastest repository (e.g. 1)\nType a username or press enter to choose no.\nSelect openssh as ssh server.\nNext, prompt to select Available disks. Enter a disk name (such as sda) to use for installing the system.\nEnter the name sys as the base system then type y to confirm erasing the disk and starting the formatting and base system installation process.\nFinally, you will be prompted to reboot the system. Remove the USB drive and type reboot to restart the system.\nCongratulations, Alpine Linux is successfully installed! Related Alpine Linux Installation\nApline Linux\u0026rsquo;s Package Management Tool\nAlpine Linux customizations\nAlpine Linux-based LXC with Docker support on a PVE host\nAlpine Linux as a DHCP and DNS Server\nAlpine Linux share the terminal over the web (ttyd)\nSet up SmartDNS in Alpine Linux (LXC)\n","permalink":"https://www.kingtam.tk/posts/alpine-installation/","summary":"Why Alpine Linux Alpine Linux is a lightweight, security-focused, rolling release distribution with a fast and efficient package manager. It is highly customizable and compatible with a wide range of hardware architectures, making it suitable for use in a variety of environments.\nPreparation Download the Alpine Linux ISO image file from the official website: https://alpinelinux.org/downloads/ Write the ISO image file to a USB drive using a tool such as Rufus or Etcher.","title":"Alpine Installation"}]